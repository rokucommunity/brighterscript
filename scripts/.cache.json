{"https://developer.roku.com/api/v1/get-dev-cms-doc?filePath=left-nav%2Freferences.json&locale=en-us":"{\n  \"content\": \"{\\n  \\\"Reference overview\\\":\\\"/docs/references/references-overview.md\\\",\\n\\n  \\\"SceneGraph\\\":{\\n     \\\"Component functions\\\":{\\n        \\\"init()\\\":\\\"/docs/references/scenegraph/component-functions/init.md\\\",\\n        \\\"onKeyEvent()\\\":\\\"/docs/references/scenegraph/component-functions/onkeyevent.md\\\"\\n     },\\n     \\\"XML elements\\\":{\\n        \\\"<component>\\\":\\\"/docs/references/scenegraph/xml-elements/component.md\\\",\\n        \\\"<interface>\\\":\\\"/docs/references/scenegraph/xml-elements/interface.md\\\",\\n        \\\"<script>\\\":\\\"/docs/references/scenegraph/xml-elements/script.md\\\",\\n        \\\"<children>\\\":\\\"/docs/references/scenegraph/xml-elements/children.md\\\"\\n     },\\n    \\\"Node\\\":\\\"/docs/references/scenegraph/node.md\\\",\\n    \\\"Scene\\\":\\\"/docs/references/scenegraph/scene.md\\\",\\n    \\\"Abstract Nodes\\\":{\\n        \\\"AnimationBase\\\":\\\"/docs/references/scenegraph/abstract-nodes/animationbase.md\\\",\\n        \\\"ArrayGrid\\\":\\\"/docs/references/scenegraph/abstract-nodes/arraygrid.md\\\"\\n     },\\n     \\\"Renderable Nodes\\\":{\\n        \\\"Label\\\":\\\"/docs/references/scenegraph/renderable-nodes/label.md\\\",\\n        \\\"Poster\\\":\\\"/docs/references/scenegraph/renderable-nodes/poster.md\\\",\\n        \\\"Rectangle\\\":\\\"/docs/references/scenegraph/renderable-nodes/rectangle.md\\\",\\n        \\\"SimpleLabel\\\":\\\"/docs/references/scenegraph/renderable-nodes/simplelabel.md\\\"\\n     },\\n     \\\"Animation Nodes\\\":{\\n        \\\"Overview\\\":\\\"/docs/references/scenegraph/animation-nodes/overview.md\\\",\\n        \\\"Animation\\\":\\\"/docs/references/scenegraph/animation-nodes/animation.md\\\",\\n        \\\"SequentialAnimation\\\":\\\"/docs/references/scenegraph/animation-nodes/sequentialanimation.md\\\",\\n        \\\"ParallelAnimation\\\":\\\"/docs/references/scenegraph/animation-nodes/parallelanimation.md\\\",\\n        \\\"ColorFieldInterpolator\\\":\\\"/docs/references/scenegraph/animation-nodes/colorfieldinterpolator.md\\\",\\n        \\\"FloatFieldInterpolator\\\":\\\"/docs/references/scenegraph/animation-nodes/floatfieldinterpolator.md\\\",\\n        \\\"Vector2DfieldInterpolator\\\":\\\"/docs/references/scenegraph/animation-nodes/vector2dfieldinterpolator.md\\\"\\n     },\\n     \\\"Typographic Nodes\\\":{\\n        \\\"Overview\\\":\\\"/docs/references/scenegraph/typographic-nodes/overview.md\\\",\\n        \\\"Font\\\":\\\"/docs/references/scenegraph/typographic-nodes/font.md\\\",\\n        \\\"ScrollingLabel\\\":\\\"/docs/references/scenegraph/typographic-nodes/scrollinglabel.md\\\",\\n        \\\"ScrollableText\\\":\\\"/docs/references/scenegraph/typographic-nodes/scrollabletext.md\\\"\\n     },\\n     \\\"Control Nodes\\\":{\\n        \\\"ContentNode\\\":\\\"/docs/references/scenegraph/control-nodes/contentnode.md\\\",\\n        \\\"Task\\\":\\\"/docs/references/scenegraph/control-nodes/task.md\\\",\\n        \\\"MaskGroup\\\":\\\"/docs/references/scenegraph/control-nodes/maskgroup.md\\\",\\n        \\\"Timer\\\":\\\"/docs/references/scenegraph/control-nodes/timer.md\\\",\\n        \\\"ComponentLibrary\\\":\\\"/docs/references/scenegraph/control-nodes/componentlibrary.md\\\",\\n        \\\"ChannelStore\\\":\\\"/docs/references/scenegraph/control-nodes/channelstore.md\\\"\\n     },\\n     \\\"Layout/Group Nodes\\\":{\\n        \\\"Group\\\":\\\"/docs/references/scenegraph/layout-group-nodes/group.md\\\",\\n        \\\"ButtonGroup\\\":\\\"/docs/references/scenegraph/layout-group-nodes/buttongroup.md\\\",\\n        \\\"LayoutGroup\\\":\\\"/docs/references/scenegraph/layout-group-nodes/layoutgroup.md\\\",\\n        \\\"TargetGroup\\\":\\\"/docs/references/scenegraph/layout-group-nodes/targetgroup.md\\\"\\n     },\\n     \\\"Voice Keyboard Nodes\\\":{\\n        \\\"DynamicKeyboardBase\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/dynamic-keyboard-base.md\\\",\\n        \\\"DynamicKeyboard\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/dynamic-keyboard.md\\\",\\n\\t\\t\\\"DynamicPinPad\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/dynamic-pinpad.md\\\",\\n        \\\"DynamicMiniKeyboard\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/dynamic-mini-keyboard.md\\\",\\n        \\\"DynamicCustomKeyboard\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/dynamic-custom-keyboard.md\\\",\\n        \\\"DynamicKeyGrid\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/dynamic-key-grid.md\\\",\\n        \\\"VoiceTextEditBox\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/voice-text-edit-box.md\\\",\\n        \\\"KeyDefinitionFile\\\": \\\"/docs/references/scenegraph/dynamic-voice-keyboard-nodes/key-defintion-file.md\\\"\\n    }, \\n     \\\"StandardDialog Nodes\\\":{\\n        \\\"Overview\\\": \\\"/docs/references/scenegraph/standard-dialog-framework-nodes/standard-dialog-framework-overview.md\\\",\\n        \\\"StandardDialog\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/standard-dialog.md\\\",\\n        \\\"StandardMessageDialog\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/standard-message-dialog.md\\\",\\n        \\\"StandardKeyboardDialog\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/standard-keyboard-dialog.md\\\",\\n        \\\"StandardPinPadDialog\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/standard-pinpad-dialog.md\\\",\\n        \\\"StandardProgressDialog\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/standard-progress-dialog.md\\\",\\n        \\\"StdDlgAreaBase\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-area-base.md\\\",\\n        \\\"StdDlgTitleArea\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-title-area.md\\\",\\n        \\\"StdDlgContentArea\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-content-area.md\\\",\\n        \\\"StdDlgButtonArea\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-button-area.md\\\",\\n        \\\"StdDlgButton\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-button.md\\\",\\n        \\\"StdDlgItemBase\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-item-base.md\\\",\\n        \\\"StdDlgBulletTextItem\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-bullet-text-item.md\\\",\\n        \\\"StdDlgDeterminateProgressItem\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-determinate-progress-item.md\\\",\\n        \\\"StdDlgGraphicItem\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-graphic-item.md\\\",\\n        \\\"StdDlgKeyboardItem\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-keyboard-item.md\\\",\\n        \\\"StdDlgProgressItem\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-progress-item.md\\\",\\n        \\\"StdDlgTextItem\\\":\\\"/docs/references/scenegraph/standard-dialog-framework-nodes/std-dlg-text-item.md\\\" \\n     },\\n     \\\"Dialog Nodes\\\":{\\n        \\\"Dialog\\\":\\\"/docs/references/scenegraph/dialog-nodes/dialog.md\\\",\\n        \\\"KeyboardDialog\\\":\\\"/docs/references/scenegraph/dialog-nodes/keyboarddialog.md\\\",\\n        \\\"PinDialog\\\":\\\"/docs/references/scenegraph/dialog-nodes/pindialog.md\\\",\\n        \\\"ProgressDialog\\\":\\\"/docs/references/scenegraph/dialog-nodes/progressdialog.md\\\"\\n     },\\n     \\\"Widget Nodes\\\":{\\n        \\\"Button\\\":\\\"/docs/references/scenegraph/widget-nodes/button.md\\\",\\n        \\\"TextEditBox\\\":\\\"/docs/references/scenegraph/widget-nodes/texteditbox.md\\\",\\n        \\\"Pinpad\\\":\\\"/docs/references/scenegraph/widget-nodes/pinpad.md\\\",\\n        \\\"Keyboard\\\":\\\"/docs/references/scenegraph/widget-nodes/keyboard.md\\\",\\n        \\\"MiniKeyboard\\\":\\\"/docs/references/scenegraph/widget-nodes/minikeyboard.md\\\",\\n        \\\"BusySpinner\\\":\\\"/docs/references/scenegraph/widget-nodes/busyspinner.md\\\",\\n        \\\"ParentalControlPinpad\\\":\\\"/docs/references/scenegraph/widget-nodes/parentalcontrolpinpad.md\\\"\\n     },\\n     \\\"List and Grid Nodes\\\":{\\n        \\\"Overview\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/overview.md\\\",\\n        \\\"LabelList\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/labellist.md\\\",\\n        \\\"MarkupList\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/markuplist.md\\\",\\n        \\\"PosterGrid\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/postergrid.md\\\",\\n        \\\"MarkupGrid\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/markupgrid.md\\\",\\n        \\\"RowList\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/rowlist.md\\\",\\n        \\\"CheckList\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/checklist.md\\\",\\n        \\\"RadioButtonList\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/radiobuttonlist.md\\\",\\n        \\\"TargetList\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/targetlist.md\\\",\\n        \\\"TargetSet\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/targetset.md\\\",\\n        \\\"ZoomRowList\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/zoomrowlist.md\\\",\\n        \\\"TimeGrid\\\":\\\"/docs/references/scenegraph/list-and-grid-nodes/timegrid.md\\\"\\n     },\\n     \\\"Sliding Panel Nodes\\\":{\\n        \\\"Overview\\\":\\\"/docs/references/scenegraph/sliding-panels-nodes/overview.md\\\",\\n        \\\"OverhangPanelSetScene\\\":\\\"/docs/references/scenegraph/sliding-panels-nodes/overhangpanelsetscene.md\\\",\\n        \\\"Overhang\\\":\\\"/docs/references/scenegraph/sliding-panels-nodes/overhang.md\\\",\\n        \\\"PanelSet\\\":\\\"/docs/references/scenegraph/sliding-panels-nodes/panelset.md\\\",\\n        \\\"Panel\\\":\\\"/docs/references/scenegraph/sliding-panels-nodes/panel.md\\\",\\n        \\\"ListPanel\\\":\\\"/docs/references/scenegraph/sliding-panels-nodes/listpanel.md\\\",\\n        \\\"GridPanel\\\":\\\"/docs/references/scenegraph/sliding-panels-nodes/gridpanel.md\\\"\\n     },\\n     \\\"Media Playback Nodes\\\":{\\n        \\\"Audio\\\":\\\"/docs/references/scenegraph/media-playback-nodes/audio.md\\\",\\n        \\\"SoundEffect\\\":\\\"/docs/references/scenegraph/media-playback-nodes/soundeffect.md\\\",\\n        \\\"Video\\\":\\\"/docs/references/scenegraph/media-playback-nodes/video.md\\\"\\n     }\\n  },\\n\\n      \\\"BrightScript\\\":{\\n\\n        \\\"Language\\\":{\\n             \\\"Language reference\\\":\\\"/docs/references/brightscript/language/brightscript-language-reference.md\\\",\\n             \\\"Statement summary\\\":\\\"/docs/references/brightscript/language/statement-summary.md\\\",\\n             \\\"Expressions, variables, and types\\\":\\\"/docs/references/brightscript/language/expressions-variables-types.md\\\",\\n             \\\"Component architecture\\\":\\\"/docs/references/brightscript/language/component-architecture.md\\\",\\n             \\\"Program statements\\\":\\\"/docs/references/brightscript/language/program-statements.md\\\",\\n             \\\"Runtime functions\\\":\\\"/docs/references/brightscript/language/runtime-functions.md\\\",\\n             \\\"Error handling facilities\\\":\\\"/docs/references/brightscript/language/error-handling.md\\\",\\n             \\\"Global utility functions\\\":\\\"/docs/references/brightscript/language/global-utility-functions.md\\\",\\n             \\\"Global string functions\\\":\\\"/docs/references/brightscript/language/global-string-functions.md\\\",\\n             \\\"Global math functions\\\":\\\"/docs/references/brightscript/language/global-math-functions.md\\\",\\n             \\\"Reserved words\\\":\\\"/docs/references/brightscript/language/reserved-words.md\\\",\\n             \\\"Conditional compilation\\\":\\\"/docs/references/brightscript/language/conditional-compilation.md\\\"\\n          },\\n\\n         \\\"Components\\\":{\\n            \\\"roAppInfo\\\":\\\"/docs/references/brightscript/components/roappinfo.md\\\",\\n            \\\"roAppManager\\\":\\\"/docs/references/brightscript/components/roappmanager.md\\\",\\n            \\\"roArray\\\":\\\"/docs/references/brightscript/components/roarray.md\\\",\\n            \\\"roAssociativeArray\\\":\\\"/docs/references/brightscript/components/roassociativearray.md\\\",\\n            \\\"roAudioGuide\\\":\\\"/docs/references/brightscript/components/roaudioguide.md\\\",\\n            \\\"roAudioMetadata\\\":\\\"/docs/references/brightscript/components/roaudiometadata.md\\\",\\n            \\\"roAudioPlayer\\\":\\\"/docs/references/brightscript/components/roaudioplayer.md\\\",\\n            \\\"roAudioResource\\\":\\\"/docs/references/brightscript/components/roaudioresource.md\\\",\\n            \\\"roBitmap\\\":\\\"/docs/references/brightscript/components/robitmap.md\\\",\\n            \\\"roBoolean\\\":\\\"/docs/references/brightscript/components/roboolean.md\\\",\\n            \\\"roByteArray\\\":\\\"/docs/references/brightscript/components/robytearray.md\\\",\\n            \\\"roCaptionRenderer\\\":\\\"/docs/references/brightscript/components/rocaptionrenderer.md\\\",\\n            \\\"roChannelStore\\\":\\\"/docs/references/brightscript/components/rochannelstore.md\\\",\\n            \\\"roCodeRegistrationScreen\\\":\\\"/docs/references/brightscript/components/rocoderegistrationscreen.md\\\",\\n            \\\"roCompositor\\\":\\\"/docs/references/brightscript/components/rocompositor.md\\\",\\n            \\\"roDataGramSocket\\\":\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\",\\n            \\\"roDateTime\\\":\\\"/docs/references/brightscript/components/rodatetime.md\\\",\\n            \\\"roDeviceInfo\\\":\\\"/docs/references/brightscript/components/rodeviceinfo.md\\\",\\n            \\\"roDouble\\\":\\\"/docs/references/brightscript/components/rodouble.md\\\",\\n            \\\"roDeviceCrypto\\\":\\\"/docs/references/brightscript/components/rodevicecrypto.md\\\",\\n            \\\"roEVPCipher\\\":\\\"/docs/references/brightscript/components/roevpcipher.md\\\",\\n            \\\"roEVPDigest\\\":\\\"/docs/references/brightscript/components/roevpdigest.md\\\",\\n            \\\"roFileSystem\\\":\\\"/docs/references/brightscript/components/rofilesystem.md\\\",\\n            \\\"roFloat\\\":\\\"/docs/references/brightscript/components/rofloat.md\\\",\\n            \\\"roFont\\\":\\\"/docs/references/brightscript/components/rofont.md\\\",\\n            \\\"roFontMetrics\\\":\\\"/docs/references/brightscript/components/rofontmetrics.md\\\",\\n            \\\"roFontRegistry\\\":\\\"/docs/references/brightscript/components/rofontregistry.md\\\",\\n            \\\"roFunction\\\":\\\"/docs/references/brightscript/components/rofunction.md\\\",\\n            \\\"roGridScreen\\\":\\\"/docs/references/brightscript/components/rogridscreen.md\\\",\\n            \\\"roHdmiStatus\\\":\\\"/docs/references/brightscript/components/rohdmistatus.md\\\",\\n            \\\"roHMAC\\\":\\\"/docs/references/brightscript/components/rohmac.md\\\",\\n            \\\"roHttpAgent\\\":\\\"/docs/references/brightscript/components/rohttpagent.md\\\",\\n            \\\"roImageCanvas\\\":\\\"/docs/references/brightscript/components/roimagecanvas.md\\\",\\n            \\\"roImageMetaData\\\":\\\"/docs/references/brightscript/components/roimagemetadata.md\\\",\\n            \\\"roInput\\\":\\\"/docs/references/brightscript/components/roinput.md\\\",\\n            \\\"roInt\\\":\\\"/docs/references/brightscript/components/roint.md\\\",\\n            \\\"roInvalid\\\":\\\"/docs/references/brightscript/components/roinvalid.md\\\",\\n            \\\"roKeyboardScreen\\\":\\\"/docs/references/brightscript/components/rokeyboardscreen.md\\\",\\n            \\\"roList\\\":\\\"/docs/references/brightscript/components/rolist.md\\\",\\n            \\\"roListScreen\\\":\\\"/docs/references/brightscript/components/rolistscreen.md\\\",\\n            \\\"roLocalization\\\":\\\"/docs/references/brightscript/components/rolocalization.md\\\",\\n            \\\"roLongInteger\\\":\\\"/docs/references/brightscript/components/rolonginteger.md\\\",\\n            \\\"roMessageDialog\\\":\\\"/docs/references/brightscript/components/romessagedialog.md\\\",\\n            \\\"roMessagePort\\\":\\\"/docs/references/brightscript/components/romessageport.md\\\",\\n            \\\"roMicrophone\\\":\\\"/docs/references/brightscript/components/romicrophone.md\\\",\\n            \\\"roOneLineDialog\\\":\\\"/docs/references/brightscript/components/roonelinedialog.md\\\",\\n            \\\"roParagraphScreen\\\":\\\"/docs/references/brightscript/components/roparagraphscreen.md\\\",\\n            \\\"roPath\\\":\\\"/docs/references/brightscript/components/ropath.md\\\",\\n            \\\"roPinEntryDialog\\\":\\\"/docs/references/brightscript/components/ropinentrydialog.md\\\",\\n            \\\"roPosterScreen\\\":\\\"/docs/references/brightscript/components/roposterscreen.md\\\",\\n            \\\"roProgramGuide\\\":\\\"/docs/references/brightscript/components/roprogramguide.md\\\",\\n            \\\"roRegex\\\":\\\"/docs/references/brightscript/components/roregex.md\\\",\\n            \\\"roRegion\\\":\\\"/docs/references/brightscript/components/roregion.md\\\",\\n            \\\"roRegistry\\\":\\\"/docs/references/brightscript/components/roregistry.md\\\",\\n            \\\"roRegistrySection\\\":\\\"/docs/references/brightscript/components/roregistrysection.md\\\",\\n            \\\"roRSA\\\":\\\"/docs/references/brightscript/components/rorsa.md\\\",\\n            \\\"roScreen\\\":\\\"/docs/references/brightscript/components/roscreen.md\\\",\\n            \\\"roSearchHistory\\\":\\\"/docs/references/brightscript/components/rosearchhistory.md\\\",\\n            \\\"roSearchScreen\\\":\\\"/docs/references/brightscript/components/rosearchscreen.md\\\",\\n            \\\"roSGNode\\\":\\\"/docs/references/brightscript/components/rosgnode.md\\\",\\n            \\\"roSGScreen\\\":\\\"/docs/references/brightscript/components/rosgscreen.md\\\",\\n            \\\"roSlideShow\\\":\\\"/docs/references/brightscript/components/roslideshow.md\\\",\\n            \\\"roSocketAddress\\\":\\\"/docs/references/brightscript/components/rosocketaddress.md\\\",\\n            \\\"roSpringboardScreen\\\":\\\"/docs/references/brightscript/components/rospringboardscreen.md\\\",\\n            \\\"roSprite\\\":\\\"/docs/references/brightscript/components/rosprite.md\\\",\\n            \\\"roStreamSocket\\\":\\\"/docs/references/brightscript/components/rostreamsocket.md\\\",\\n            \\\"roString\\\":\\\"/docs/references/brightscript/components/rostring.md\\\",\\n            \\\"roSystemlog\\\":\\\"/docs/references/brightscript/components/rosystemlog.md\\\",\\n            \\\"roTextScreen\\\":\\\"/docs/references/brightscript/components/rotextscreen.md\\\",\\n            \\\"roTextToSpeech\\\":\\\"/docs/references/brightscript/components/rotexttospeech.md\\\",\\n            \\\"roTextureManager\\\":\\\"/docs/references/brightscript/components/rotexturemanager.md\\\",\\n            \\\"roTextureRequest\\\":\\\"/docs/references/brightscript/components/rotexturerequest.md\\\",\\n            \\\"roTimespan\\\":\\\"/docs/references/brightscript/components/rotimespan.md\\\",\\n            \\\"roUrlTransfer\\\":\\\"/docs/references/brightscript/components/rourltransfer.md\\\",\\n            \\\"roVideoPlayer\\\":\\\"/docs/references/brightscript/components/rovideoplayer.md\\\",\\n            \\\"roVideoScreen\\\":\\\"/docs/references/brightscript/components/rovideoscreen.md\\\",\\n            \\\"roXMLElement\\\":\\\"/docs/references/brightscript/components/roxmlelement.md\\\",\\n            \\\"roXMLList\\\":\\\"/docs/references/brightscript/components/roxmllist.md\\\"\\n         },\\n\\n         \\\"Interfaces\\\":{\\n\\n            \\\"ifAppInfo\\\":\\\"/docs/references/brightscript/interfaces/ifappinfo.md\\\",\\n            \\\"ifAppManager\\\":\\\"/docs/references/brightscript/interfaces/ifappmanager.md\\\",\\n            \\\"ifArray\\\":\\\"/docs/references/brightscript/interfaces/ifarray.md\\\",\\n            \\\"ifArrayGet\\\":\\\"/docs/references/brightscript/interfaces/ifarrayget.md\\\",\\n            \\\"ifArrayJoin\\\":\\\"/docs/references/brightscript/interfaces/ifarrayjoin.md\\\",\\n            \\\"ifArraySet\\\":\\\"/docs/references/brightscript/interfaces/ifarrayset.md\\\",\\n            \\\"ifArraySort\\\":\\\"/docs/references/brightscript/interfaces/ifarraysort.md\\\",\\n            \\\"ifAssociativeArray\\\":\\\"/docs/references/brightscript/interfaces/ifassociativearray.md\\\",\\n            \\\"ifAudioGuide\\\":\\\"/docs/references/brightscript/interfaces/ifaudioguide.md\\\",\\n            \\\"ifAudioMetaData\\\":\\\"/docs/references/brightscript/interfaces/ifaudiometadata.md\\\",\\n            \\\"ifAudioPlayer\\\":\\\"/docs/references/brightscript/interfaces/ifaudioplayer.md\\\",\\n            \\\"ifAudioResource\\\":\\\"/docs/references/brightscript/interfaces/ifaudioresource.md\\\",\\n            \\\"ifBoolean\\\":\\\"/docs/references/brightscript/interfaces/ifboolean.md\\\",\\n            \\\"ifByteArray\\\":\\\"/docs/references/brightscript/interfaces/ifbytearray.md\\\",\\n            \\\"ifCaptionRenderer\\\":\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md\\\",\\n            \\\"ifChannelStore\\\":\\\"/docs/references/brightscript/interfaces/ifchannelstore.md\\\",\\n            \\\"ifCodeRegistrationScreen\\\":\\\"/docs/references/brightscript/interfaces/ifcoderegistrationscreen.md\\\",\\n            \\\"ifCompositor\\\":\\\"/docs/references/brightscript/interfaces/ifcompositor.md\\\",\\n            \\\"ifDateTime\\\":\\\"/docs/references/brightscript/interfaces/ifdatetime.md\\\",\\n            \\\"ifDeviceInfo\\\":\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md\\\",\\n            \\\"ifDeviceCrypto\\\":\\\"/docs/references/brightscript/interfaces/ifdevicecrypto.md\\\",\\n            \\\"ifDouble\\\":\\\"/docs/references/brightscript/interfaces/ifdouble.md\\\",\\n            \\\"ifDraw2D\\\":\\\"/docs/references/brightscript/interfaces/ifdraw2d.md\\\",\\n            \\\"ifEnum\\\":\\\"/docs/references/brightscript/interfaces/ifenum.md\\\",\\n            \\\"ifEVPCipher\\\":\\\"/docs/references/brightscript/interfaces/ifevpcipher.md\\\",\\n            \\\"ifEVPDigest\\\":\\\"/docs/references/brightscript/interfaces/ifevpdigest.md\\\",\\n            \\\"ifFileSystem\\\":\\\"/docs/references/brightscript/interfaces/iffilesystem.md\\\",\\n            \\\"ifFloat\\\":\\\"/docs/references/brightscript/interfaces/iffloat.md\\\",\\n            \\\"ifFont\\\":\\\"/docs/references/brightscript/interfaces/iffont.md\\\",\\n            \\\"ifFontMetrics\\\":\\\"/docs/references/brightscript/interfaces/iffontmetrics.md\\\",\\n            \\\"ifFontRegistry\\\":\\\"/docs/references/brightscript/interfaces/iffontregistry.md\\\",\\n            \\\"ifFunction\\\":\\\"/docs/references/brightscript/interfaces/iffunction.md\\\",\\n            \\\"ifGetMessagePort\\\":\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\",\\n            \\\"ifGridScreen\\\":\\\"/docs/references/brightscript/interfaces/ifgridscreen.md\\\",\\n            \\\"ifHdmiStatus\\\":\\\"/docs/references/brightscript/interfaces/ifhdmistatus.md\\\",\\n            \\\"ifHMAC\\\":\\\"/docs/references/brightscript/interfaces/ifhmac.md\\\",\\n            \\\"ifHttpAgent\\\":\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\",\\n            \\\"ifImageCanvas\\\":\\\"/docs/references/brightscript/interfaces/ifimagecanvas.md\\\",\\n            \\\"ifImageMetaData\\\":\\\"/docs/references/brightscript/interfaces/ifimagemetadata.md\\\",\\n            \\\"ifInput\\\":\\\"/docs/references/brightscript/interfaces/ifinput.md\\\",\\n            \\\"ifInt\\\":\\\"/docs/references/brightscript/interfaces/ifint.md\\\",\\n            \\\"ifIntOps\\\":\\\"/docs/references/brightscript/interfaces/ifintops.md\\\",\\n            \\\"ifKeyboardScreen\\\":\\\"/docs/references/brightscript/interfaces/ifkeyboardscreen.md\\\",\\n            \\\"ifList\\\":\\\"/docs/references/brightscript/interfaces/iflist.md\\\",\\n            \\\"ifListScreen\\\":\\\"/docs/references/brightscript/interfaces/iflistscreen.md\\\",\\n            \\\"ifListToArray\\\":\\\"/docs/references/brightscript/interfaces/iflisttoarray.md\\\",\\n            \\\"ifLocalization\\\":\\\"/docs/references/brightscript/interfaces/iflocalization.md\\\",\\n            \\\"ifLongInt\\\":\\\"/docs/references/brightscript/interfaces/iflongint.md\\\",\\n            \\\"ifMessageDialog\\\":\\\"/docs/references/brightscript/interfaces/ifmessagedialog.md\\\",\\n            \\\"ifMessagePort\\\":\\\"/docs/references/brightscript/interfaces/ifmessageport.md\\\",\\n            \\\"ifMicrophone\\\":\\\"/docs/references/brightscript/interfaces/ifmicrophone.md\\\",\\n            \\\"ifOneLineDialog\\\":\\\"/docs/references/brightscript/interfaces/ifonelinedialog.md\\\",\\n            \\\"ifParagraphScreen\\\":\\\"/docs/references/brightscript/interfaces/ifparagraphscreen.md\\\",\\n            \\\"ifPath\\\":\\\"/docs/references/brightscript/interfaces/ifpath.md\\\",\\n            \\\"ifPinEntryDialog\\\":\\\"/docs/references/brightscript/interfaces/ifpinentrydialog.md\\\",\\n            \\\"ifPosterScreen\\\":\\\"/docs/references/brightscript/interfaces/ifposterscreen.md\\\",\\n            \\\"ifProgramGuide\\\":\\\"/docs/references/brightscript/interfaces/ifprogramguide.md\\\",\\n            \\\"ifRegex\\\":\\\"/docs/references/brightscript/interfaces/ifregex.md\\\",\\n            \\\"ifRegion\\\":\\\"/docs/references/brightscript/interfaces/ifregion.md\\\",\\n            \\\"ifRegistry\\\":\\\"/docs/references/brightscript/interfaces/ifregistry.md\\\",\\n            \\\"ifRegistrySection\\\":\\\"/docs/references/brightscript/interfaces/ifregistrysection.md\\\",\\n            \\\"ifSGScreen\\\":\\\"/docs/references/brightscript/interfaces/ifsgscreen.md\\\",\\n            \\\"ifRSA\\\":\\\"/docs/references/brightscript/interfaces/ifrsa.md\\\",\\n            \\\"ifScreen\\\":\\\"/docs/references/brightscript/interfaces/ifscreen.md\\\",\\n            \\\"ifSearchhistory\\\":\\\"/docs/references/brightscript/interfaces/ifsearchhistory.md\\\",\\n            \\\"ifSearchScreen\\\":\\\"/docs/references/brightscript/interfaces/ifsearchscreen.md\\\",\\n            \\\"ifSetMessagePort\\\":\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\",\\n            \\\"ifSGNodeBoundingRect\\\":\\\"/docs/references/brightscript/interfaces/ifsgnodeboundingrect.md\\\",\\n            \\\"ifSGNodeChildren\\\":\\\"/docs/references/brightscript/interfaces/ifsgnodechildren.md\\\",\\n            \\\"ifSGNodeDict\\\":\\\"/docs/references/brightscript/interfaces/ifsgnodedict.md\\\",\\n            \\\"ifSGNodeField\\\":\\\"/docs/references/brightscript/interfaces/ifsgnodefield.md\\\",\\n            \\\"ifSGNodeFocus\\\":\\\"/docs/references/brightscript/interfaces/ifsgnodefocus.md\\\",\\n            \\\"ifSGNodeHttpAgentAccess\\\":\\\"/docs/references/brightscript/interfaces/ifsgnodehttpagentaccess.md\\\",\\n            \\\"ifSlideshow\\\":\\\"/docs/references/brightscript/interfaces/ifslideshow.md\\\",\\n            \\\"ifSocket\\\":\\\"/docs/references/brightscript/interfaces/ifsocket.md\\\",\\n            \\\"ifSocketAddress\\\":\\\"/docs/references/brightscript/interfaces/ifsocketaddress.md\\\",\\n            \\\"ifSocketAsync\\\":\\\"/docs/references/brightscript/interfaces/ifsocketasync.md\\\",\\n            \\\"ifSocketCastOption\\\":\\\"/docs/references/brightscript/interfaces/ifsocketcastoption.md\\\",\\n            \\\"ifSocketConnection\\\":\\\"/docs/references/brightscript/interfaces/ifsocketconnection.md\\\",\\n            \\\"ifSocketConnectionoption\\\":\\\"/docs/references/brightscript/interfaces/ifsocketconnectionoption.md\\\",\\n            \\\"ifSocketConnectionstatus\\\":\\\"/docs/references/brightscript/interfaces/ifsocketconnectionstatus.md\\\",\\n            \\\"ifSocketOption\\\":\\\"/docs/references/brightscript/interfaces/ifsocketoption.md\\\",\\n            \\\"ifSocketStatus\\\":\\\"/docs/references/brightscript/interfaces/ifsocketstatus.md\\\",\\n            \\\"ifSourceIdentity\\\":\\\"/docs/references/brightscript/interfaces/ifsourceidentity.md\\\",\\n            \\\"ifSpringboardScreen\\\":\\\"/docs/references/brightscript/interfaces/ifspringboardscreen.md\\\",\\n            \\\"ifSprite\\\":\\\"/docs/references/brightscript/interfaces/ifsprite.md\\\",\\n            \\\"ifString\\\":\\\"/docs/references/brightscript/interfaces/ifstring.md\\\",\\n            \\\"ifStringOps\\\":\\\"/docs/references/brightscript/interfaces/ifstringops.md\\\",\\n            \\\"ifSystemLog\\\":\\\"/docs/references/brightscript/interfaces/ifsystemlog.md\\\",\\n            \\\"ifTextScreen\\\":\\\"/docs/references/brightscript/interfaces/iftextscreen.md\\\",\\n            \\\"ifTextToSpeech\\\":\\\"/docs/references/brightscript/interfaces/iftexttospeech.md\\\",\\n            \\\"ifTextureManager\\\":\\\"/docs/references/brightscript/interfaces/iftexturemanager.md\\\",\\n            \\\"ifTextureRequest\\\":\\\"/docs/references/brightscript/interfaces/iftexturerequest.md\\\",\\n            \\\"ifTimeSpan\\\":\\\"/docs/references/brightscript/interfaces/iftimespan.md\\\",\\n            \\\"ifToStr\\\":\\\"/docs/references/brightscript/interfaces/iftostr.md\\\",\\n            \\\"ifUrlTransfer\\\":\\\"/docs/references/brightscript/interfaces/ifurltransfer.md\\\",\\n            \\\"ifVideoPlayer\\\":\\\"/docs/references/brightscript/interfaces/ifvideoplayer.md\\\",\\n            \\\"ifVideoScreen\\\":\\\"/docs/references/brightscript/interfaces/ifvideoscreen.md\\\",\\n            \\\"ifXMLElement\\\":\\\"/docs/references/brightscript/interfaces/ifxmlelement.md\\\",\\n            \\\"ifXMLList\\\":\\\"/docs/references/brightscript/interfaces/ifxmllist.md\\\"\\n         },\\n\\n         \\\"Events\\\":{\\n\\n            \\\"roAudioPlayerEvent\\\":\\\"/docs/references/brightscript/events/roaudioplayerevent.md\\\",\\n            \\\"roCaptionRendererEvent\\\":\\\"/docs/references/brightscript/events/rocaptionrendererevent.md\\\",\\n            \\\"roCECStatusEvent\\\":\\\"/docs/references/brightscript/events/rocecstatusevent.md\\\",\\n            \\\"roChannelStoreEvent\\\":\\\"/docs/references/brightscript/events/rochannelstoreevent.md\\\",\\n            \\\"roCodeRegistrationScreenEvent\\\":\\\"/docs/references/brightscript/events/rocoderegistrationscreenevent.md\\\",\\n            \\\"roDeviceInfoEvent\\\":\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\",\\n            \\\"roFileSystemEvent\\\":\\\"/docs/references/brightscript/events/rofilesystemevent.md\\\",\\n            \\\"roGridScreenEvent\\\":\\\"/docs/references/brightscript/events/rogridscreenevent.md\\\",\\n            \\\"roHdmiHotPlugEvent\\\":\\\"/docs/references/brightscript/events/rohdmihotplugevent.md\\\",\\n            \\\"roHdmiStatusEvent\\\":\\\"/docs/references/brightscript/events/rohdmistatusevent.md\\\",\\n            \\\"roImageCanvasEvent\\\":\\\"/docs/references/brightscript/events/roimagecanvasevent.md\\\",\\n            \\\"roInputEvent\\\":\\\"/docs/references/brightscript/events/roinputevent.md\\\",\\n            \\\"roKeyboardScreenEvent\\\":\\\"/docs/references/brightscript/events/rokeyboardscreenevent.md\\\",\\n            \\\"roListScreenEvent\\\":\\\"/docs/references/brightscript/events/rolistscreenevent.md\\\",\\n            \\\"roMessageDialogEvent\\\":\\\"/docs/references/brightscript/events/romessagedialogevent.md\\\",\\n            \\\"roMicrophoneEvent\\\":\\\"/docs/references/brightscript/events/romicrophoneevent.md\\\",\\n            \\\"roOneLineDialogEvent\\\":\\\"/docs/references/brightscript/events/roonelinedialogevent.md\\\",\\n            \\\"roParagraphScreenEvent\\\":\\\"/docs/references/brightscript/events/roparagraphscreenevent.md\\\",\\n            \\\"roPinEntryDialogEvent\\\":\\\"/docs/references/brightscript/events/ropinentrydialogevent.md\\\",\\n            \\\"roPosterScreenEvent\\\":\\\"/docs/references/brightscript/events/roposterscreenevent.md\\\",\\n            \\\"roSearchScreenEvent\\\":\\\"/docs/references/brightscript/events/rosearchscreenevent.md\\\",\\n            \\\"roSGNodeEvent\\\":\\\"/docs/references/brightscript/events/rosgnodeevent.md\\\",\\n            \\\"roSGScreenEvent\\\":\\\"/docs/references/brightscript/events/rosgscreenevent.md\\\",\\n            \\\"roSlideShowEvent\\\":\\\"/docs/references/brightscript/events/roslideshowevent.md\\\",\\n            \\\"roSocketEvent\\\":\\\"/docs/references/brightscript/events/rosocketevent.md\\\",\\n            \\\"roSpringboardScreenEvent\\\":\\\"/docs/references/brightscript/events/rospringboardscreenevent.md\\\",\\n            \\\"roSystemLogEvent\\\":\\\"/docs/references/brightscript/events/rosystemlogevent.md\\\",\\n            \\\"roTextScreenEvent\\\":\\\"/docs/references/brightscript/events/rotextscreenevent.md\\\",\\n            \\\"roTextToSpeechEvent\\\":\\\"/docs/references/brightscript/events/rotexttospeechevent.md\\\",\\n            \\\"roTextureRequestEvent\\\":\\\"/docs/references/brightscript/events/rotexturerequestevent.md\\\",\\n            \\\"roUniversalControlEvent\\\":\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\",\\n            \\\"roUrlEvent\\\":\\\"/docs/references/brightscript/events/rourlevent.md\\\",\\n            \\\"roVideoPlayerEvent\\\":\\\"/docs/references/brightscript/events/rovideoplayerevent.md\\\",\\n            \\\"roVideoScreenEvent\\\":\\\"/docs/references/brightscript/events/rovideoscreenevent.md\\\"\\n         }\\n      },\\n\\n      \\\"Deprecated APIs\\\":\\\"/docs/references/deprecated-apis.md\\\"\\n}\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roappinfo.md":"{\n  \"content\": \"<h1 id=\\\"roappinfo\\\">roAppInfo</h1>\\n<p>roAppInfo retrieves the developer ID, which can be useful during development. It also retrieves manifest values, such as the title and version number, avoiding the need to parse the manifest file from BrightScript.\\nThis object is created with no parameters.</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<p><strong>Implementation</strong></p>\\n<pre><code>brush: vb; gutter: false; theme: Confluence\\nappInfo = CreateObject(\\\"roAppInfo\\\")\\n\\nprint \\\"     ID: \\\" ; appInfo.GetID()\\nprint \\\"  IsDev: \\\" ; appInfo.IsDev()\\nprint \\\"  DevID: \\\" ; appInfo.GetDevID()\\nprint \\\"  Title: \\\" ; appInfo.GetTitle()\\nprint \\\"Version: \\\" ; appInfo.GetVersion()\\nprint \\\"MajVers: \\\" ; appInfo.GetValue(\\\"major_version\\\")\\n</code></pre>\\n<p><strong>Output</strong></p>\\n<pre><code>brush: plain; gutter: false; theme: Confluence\\n'      ID: 41089_bd3a\\n'   IsDev: false\\n'   DevID: 990df3584920876b7e74fe7b29e1f505f148373b\\n'   Title: BrightScript Test\\n' Version: 1.0.0\\n' MajVers: 1 \\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifappinfo.md\\\" title=\\\"ifAppInfo\\\">ifAppInfo</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roappmanager.md":"{\n  \"content\": \"<h1 id=\\\"roappmanager\\\">roAppManager</h1>\\n<p>The Application Manager APIs set application level attributes, which mostly affect the look-and-feel of the application. The use of screen styles gives each application a consistent look-and-feel, but it's often desirable to customize attributes such as colors, fonts, and logos for each application. Setting artwork and colors allows the developer to specify a theme for their application. If these values are not set, the application will use default values.</p>\\n<p>The table below describes each attribute and its values, the screen types to which it applies, and the Roku OS version in which the attribute was first supported. Unless otherwise indicated, an attribute is supported in all Roku OS versions after the one in which it was first supported.</p>\\n<p>To save space, the screen types in the table are specified by a two letter code:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Code</th>\\n<th>Screen Type</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Co</td>\\n<td>roCodeRegistrationScreen</td>\\n</tr>\\n<tr>\\n<td>Di</td>\\n<td>roMessageDialog, roOneLineDialog, roPinEntryDialog</td>\\n</tr>\\n<tr>\\n<td>Gr</td>\\n<td>roGridScreen</td>\\n</tr>\\n<tr>\\n<td>Ke</td>\\n<td>roKeyboardScreen</td>\\n</tr>\\n<tr>\\n<td>Li</td>\\n<td>roListScreen</td>\\n</tr>\\n<tr>\\n<td>Pa</td>\\n<td>roParagraphScreen</td>\\n</tr>\\n<tr>\\n<td>Po</td>\\n<td>roPosterScreen</td>\\n</tr>\\n<tr>\\n<td>Se</td>\\n<td>roSearchScreen</td>\\n</tr>\\n<tr>\\n<td>Sp</td>\\n<td>roSpringboardScreen</td>\\n</tr>\\n<tr>\\n<td>Te</td>\\n<td>roTextScreen</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>All attribute values are strings. Numeric values are specified as decimal strings.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Attribute</th>\\n<th>Screen Types</th>\\n<th>Values</th>\\n<th>Example</th>\\n<th>Version</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>BackgroundColor</td>\\n<td>Gr Li Pa Po Se Sp Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#E0DFDF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>BreadcrumbDelimiter</td>\\n<td>Gr Li Pa Po Se Sp Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>BreadcrumbTextLeft</td>\\n<td>Gr Li Pa Po Se Sp Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>BreadcrumbTextRight</td>\\n<td>Gr Li Pa Po Se Sp Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>ButtonHighlightColor</td>\\n<td>Di Se Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>ButtonMenuHighlightText</td>\\n<td>Di Se Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#0033FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>ButtonMenuNormalOverlayText</td>\\n<td>Di Se Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#B0B0B0</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>ButtonMenuNormalText</td>\\n<td>Di Se Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#686868</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>ButtonNormalColor</td>\\n<td>Di Se Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>CounterSeparator</td>\\n<td>Gr Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#00FF00</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>CounterTextLeft</td>\\n<td>Gr Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF0000</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>CounterTextRight</td>\\n<td>Gr Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#0000FF</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>DialogBodyText</td>\\n<td>Di</td>\\n<td>HTML HEX Color Value. Must be a grayscale value</td>\\n<td>#808080</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>DialogTitleText</td>\\n<td>Di</td>\\n<td>HTML HEX Color Value. Must be a grayscale value</td>\\n<td>#363636</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>EpisodeSynopsisText</td>\\n<td>Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerActiveColor</td>\\n<td>Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerActiveHD</td>\\n<td>Po</td>\\n<td>URL to set HD Filter Banner Active/Focus Highlighter</td>\\n<td>pkg:/images/Filter_ActiveHint_HD.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerActiveSD</td>\\n<td>Po</td>\\n<td>URL to set SD Filter Banner Active/Focus Highlighter</td>\\n<td>pkg:/images/Filter_ActiveHint_SD43.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerInactiveColor</td>\\n<td>Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerInactiveHD</td>\\n<td>Po</td>\\n<td>URL to set HD Filter Banner Inactive Highlighter</td>\\n<td>pkg:/images/Filter_InactiveHint_HD.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerInactiveSD</td>\\n<td>Po</td>\\n<td>URL to set SD Filter Banner Inactive Highlighter</td>\\n<td>pkg:/images/Filter_ActiveHint_SD43.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerSideColor</td>\\n<td>Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerSliceHD</td>\\n<td>Po</td>\\n<td>URL to set HD Filter Banner Background Image</td>\\n<td>pkg:/images/Filter_ActiveHint_HD.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>FilterBannerSliceSD</td>\\n<td>Po</td>\\n<td>URL to set SD Filter Banner Background Image</td>\\n<td>pkg:/images/Filter_ActiveHint_SD43.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>GridScreenBackgroundColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value Must be a grayscale value</td>\\n<td>#363636</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenBorderOffsetHD</td>\\n<td>Gr</td>\\n<td>String representing point \\\"(x, y)\\\" that is the offset from the upper left corner of the focused HD image. Set to the negative width &#x26; height of border</td>\\n<td>(-25,-25)</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenBorderOffsetSD</td>\\n<td>Gr</td>\\n<td>String representing point \\\"(x, y)\\\" that is the offset from the upper left corner of the focused SD image. Set to the negative width &#x26; height of border</td>\\n<td>(-20,-20)</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionDateColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF005B</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionImageHD</td>\\n<td>Gr</td>\\n<td>URL to set HD Description callout background image on Grid</td>\\n<td>pkg:/images/Description_Background_HD.ng</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionImageSD</td>\\n<td>Gr</td>\\n<td>URL to set SD Description callout background image on Grid</td>\\n<td>pkg:/images/Description_Background_SD43.ng</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionOffsetHD</td>\\n<td>Gr</td>\\n<td>String representing point \\\"(x, y)\\\" that is the offset from the upper left corner of the focused HD image. Negative values have the description above and to the left of the focused image</td>\\n<td>(190,255)</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionOffsetSD</td>\\n<td>Gr</td>\\n<td>String representing point \\\"(x, y)\\\" that is the offset from the upper left corner of the focused SD image. Negative values have the description above and to the left of the focused image</td>\\n<td>(125,170)</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionRuntimeColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value</td>\\n<td>#5B005B</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionSynopsisColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value</td>\\n<td>#606000</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenDescriptionTitleColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value</td>\\n<td>#00FFFF</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenFocusBorderHD</td>\\n<td>Gr</td>\\n<td>URL to set HD Focus image on Active Grid Poster</td>\\n<td>pkg:/images/Border_16x9_HD.png</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenFocusBorderSD</td>\\n<td>Gr</td>\\n<td>URL to set SD Focus image on Active Grid Poster</td>\\n<td>pkg:/images/Border_16x9_SD43.png</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenListNameColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value. Must be a grayscale value</td>\\n<td>#FFFFFF</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenLogoHD</td>\\n<td>Gr</td>\\n<td>Logo formatted for display in the overhang</td>\\n<td>pkg:/images/gridlogoHD.png</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenLogoOffsetHD_X</td>\\n<td>Gr</td>\\n<td>Offset in pixels from the top-left origin of the display. Range 0 to 1280</td>\\n<td>592</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenLogoOffsetHD_Y</td>\\n<td>Gr</td>\\n<td>Offset in pixels from the top-left origin of the display. Range 0 to 720</td>\\n<td>31</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenLogoOffsetSD_X</td>\\n<td>Gr</td>\\n<td>Offset in pixels from the top-left origin of the display. Range 0 to 720</td>\\n<td>324</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenLogoOffsetSD_Y</td>\\n<td>Gr</td>\\n<td>Offset in pixels from the top-left origin of the display. Range 0 to 480</td>\\n<td>21</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenLogoSD</td>\\n<td>Gr</td>\\n<td>Logo formatted for display in the overhang</td>\\n<td>pkg:/images/gridlogoSD.png</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenMessageColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value. Must be a grayscale value</td>\\n<td>#808080</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenOverhangHeightHD</td>\\n<td>Gr</td>\\n<td>The HD overhang height. Default: \\\"69\\\"</td>\\n<td>75</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenOverhangHeightSD</td>\\n<td>Gr</td>\\n<td>The SD overhang height. Default: \\\"49\\\"</td>\\n<td>55</td>\\n<td>2.8</td>\\n</tr>\\n<tr>\\n<td>GridScreenOverhangSliceHD</td>\\n<td>Gr</td>\\n<td>URI for the overhang slice (thin piece of top of screen border)</td>\\n<td>pkg:/images/gridoverhangHD.png</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenOverhangSliceSD</td>\\n<td>Gr</td>\\n<td>URI for the overhang slice (thin piece of top of screen border)</td>\\n<td>pkg:/images/gridoverhangSD.png</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>GridScreenRetrievingColor</td>\\n<td>Gr</td>\\n<td>HTML HEX Color Value. Must be a grayscale value</td>\\n<td>#CCCCCC</td>\\n<td>2.7</td>\\n</tr>\\n<tr>\\n<td>ListItemHighlightHD</td>\\n<td>Gr Li Po</td>\\n<td>URL to set HD highlight image</td>\\n<td>pkg:/images/listitem_highlight_hd.png</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>ListItemHighlightSD</td>\\n<td>Gr Li Po</td>\\n<td>URL to set SD highlight image</td>\\n<td>pkg:/images/listitem_highlight_sd.png</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>ListItemHighlightText</td>\\n<td>Gr Li Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#CCCC00</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>ListItemText</td>\\n<td>Gr Li Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#CCCC00</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>ListScreenDescriptionText</td>\\n<td>Li</td>\\n<td>HTML HEX Color Value</td>\\n<td>#CCCC00</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>ListScreenTitleColor</td>\\n<td>Li</td>\\n<td>HTML HEX Color Value</td>\\n<td>#CC0000</td>\\n<td>3.1</td>\\n</tr>\\n<tr>\\n<td>OverhangPrimaryLogoHD</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Small application logo formatted for display in overhang top left</td>\\n<td>pkg:/images/co_logo_sd.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangPrimaryLogoOffsetHD_X</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films.Range 0 to 1280</td>\\n<td>25</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangPrimaryLogoOffsetHD_Y</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films.Range 0 to 720</td>\\n<td>50</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangPrimaryLogoOffsetSD_X</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films.Range 0 to 720</td>\\n<td>25</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangPrimaryLogoOffsetSD_Y</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films.Range 0 to 480</td>\\n<td>50</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangPrimaryLogoSD</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Small application logo formatted for display in overhang top left</td>\\n<td>pkg:/images/co_logo_sd.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSecondaryLogoHD</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Small application logo formatted for display in overhang top left</td>\\n<td>pkg:/images/co_logo_hd.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSecondaryLogoOffsetHD_X</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films. Range 0 to 1280</td>\\n<td>25</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSecondaryLogoOffsetHD_Y</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films. Range 0 to 720</td>\\n<td>50</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSecondaryLogoOffsetSD_X</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films. Range 0 to 720</td>\\n<td>25</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSecondaryLogoOffsetSD_Y</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Offset in pixels from the top-left origin of the display films. Range 0 to 480</td>\\n<td>50</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSecondaryLogoSD</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>Small application logo formatted for display in overhang top left</td>\\n<td>pkg:/images/co_logo_sd.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSliceHD</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>URI for the overhang slice (thin piece of border at the top of the screen in HD size)</td>\\n<td>pkg:/images/overhang_hd.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>OverhangSliceSD</td>\\n<td>Co Ke Li Pa Po Se Sp Te</td>\\n<td>URI for the overhang slice (thin piece of top of screen border)</td>\\n<td>pkg:/images/overhang_sd.png</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>ParagraphBodyText</td>\\n<td>Co Pa Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>ParagraphHeaderText</td>\\n<td>Co Pa Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>PosterScreenLine1Text</td>\\n<td>Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>PosterScreenLine2Text</td>\\n<td>Po</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>RegistrationCodeColor</td>\\n<td>Co</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>RegistrationFocalColor</td>\\n<td>Co</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>RegistrationFocalRectColor</td>\\n<td>Co</td>\\n<td>HTML HEX Color Value</td>\\n<td>#10FF80</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>RegistrationFocalRectHD</td>\\n<td>Co</td>\\n<td>Position and size of the HD focal rectangle. Four integer: (x,y,width,height)</td>\\n<td>(228,360,120,82)</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>RegistrationFocalRectSD</td>\\n<td>Co</td>\\n<td>Position and size of the SD focal rectangle. Four integer: (x,y,width,height)</td>\\n<td>(172,220,90,76)</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>SpringboardActorColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardAlbumColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardAlbumLabel</td>\\n<td>Sp</td>\\n<td>Album Label</td>\\n<td>on</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardAlbumLabelColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardAllow6Buttons</td>\\n<td>Sp</td>\\n<td>boolean string</td>\\n<td>true</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>SpringboardArtistColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardArtistLabel</td>\\n<td>Sp</td>\\n<td>Artist Label</td>\\n<td>by</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardArtistLabelColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardDirectorColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardDirectorText</td>\\n<td>Sp</td>\\n<td>Director Label</td>\\n<td>Written by</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardDirectorLabelColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardDirectorPrefixText</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>SpringboardGenreColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardRuntimeColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardSynopsisColor</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>SpringboardTitleText</td>\\n<td>Sp</td>\\n<td>HTML HEX Color Value</td>\\n<td>#FF00FF</td>\\n<td>1.0</td>\\n</tr>\\n<tr>\\n<td>TextScreenBodyBackgroundColor</td>\\n<td>Te</td>\\n<td>HTML HEX Color Value. Must be a grayscale value</td>\\n<td>#808080</td>\\n<td>4.3</td>\\n</tr>\\n<tr>\\n<td>TextScreenBodyText</td>\\n<td>Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#363636</td>\\n<td>4.3</td>\\n</tr>\\n<tr>\\n<td>TextScreenScrollBarColor</td>\\n<td>Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#CC0000</td>\\n<td>4.3</td>\\n</tr>\\n<tr>\\n<td>TextScreenScrollThumbColor</td>\\n<td>Te</td>\\n<td>HTML HEX Color Value</td>\\n<td>#00CC00</td>\\n<td>4.3</td>\\n</tr>\\n<tr>\\n<td>ThemeType</td>\\n<td></td>\\n<td>Theme type. Generic-dark is the only valid value. Otherwise the default theme applies</td>\\n<td>generic-dark</td>\\n<td>2.7</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<pre><code>Sub SetApplicationTheme()\\n    app = CreateObject(\\\"roAppManager\\\")\\n    theme = CreateObject(\\\"roAssociativeArray\\\")\\n    theme.OverhangSliceHD = \\\"pkg:/images/Overhang_Slice_HD.png\\\"\\n    theme.OverhangPrimaryLogoSD = \\\"pkg:/images/Logo_Overhang_SD43.png\\\"\\n    theme.OverhangPrimaryLogoOffsetSD_X = \\\"72\\\"\\n    theme.OverhangPrimaryLogoOffsetSD_Y = \\\"25\\\"\\n    theme.OverhangPrimaryLogoHD = \\\"pkg:/images/Logo_Overhang_HD.png\\\"\\n    theme.OverhangPrimaryLogoOffsetHD_X = \\\"123\\\"\\n    theme.OverhangPrimaryLogoOffsetHD_Y = \\\"48\\\"\\n    app.SetTheme(theme)\\nEnd Sub\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifappmanager.md\\\" title=\\\"ifAppManager\\\">ifAppManager</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roarray.md":"{\n  \"content\": \"<h1 id=\\\"roarray\\\">roArray</h1>\\n<p>An array stores an indexed collection of BrightScript objects. Each entry of an array can be a different type, or they may all of the same type.</p>\\n<p>An roArray is created with two parameters:</p>\\n<p><strong>CreateObject(\\\"roArray\\\", size As Integer, resizeAs Boolean)</strong></p>\\n<p>Size is the initial number of elements allocated for the array. If resize is true, the array will be resized if needed to accommodate more elements. If the array is large, this might be slow.\\nThe \\\"dim\\\" statement may be used instead of CreateObject to allocate a new array. Dim has the advantage in that it automatically creates arrays of arrays for multi-dimensional arrays.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarray.md\\\" title=\\\"ifArray\\\">ifArray</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarrayget.md\\\" title=\\\"ifArrayGet\\\">ifArrayGet</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarrayset.md\\\" title=\\\"ifArraySet\\\">ifArraySet</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifenum.md\\\" title=\\\"ifEnum\\\">ifEnum</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarrayjoin.md\\\" title=\\\"ifArrayJoin\\\">ifArrayJoin</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarraysort.md\\\" title=\\\"ifArraySort\\\">ifArraySort</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roassociativearray.md":"{\n  \"content\": \"<h1 id=\\\"roassociativearray\\\">roAssociativeArray</h1>\\n<p>An associative array (also known as a map, dictionary or hash table) allows objects to be associated with string keys. Associative arrays are built into the language. They can be accessed implicitly by using the dot or bracket operators, or by calling functions from the <a href=\\\"/docs/references/brightscript/interfaces/ifassociativearray.md\\\" title=\\\"ifAssociativeArray\\\">ifAssociativeArray</a> interface. For example, the last three lines in this example are equivalent:</p>\\n<pre><code>aa = { one : 1, two : 2, three : 3 }\\nx = aa[\\\"two\\\"]\\nx = aa.two\\nx = aa.Lookup(\\\"two\\\")\\n</code></pre>\\n<p>This object is created with no parameters:</p>\\n<pre><code>CreateObject(\\\"roAssociativeArray\\\")\\n</code></pre>\\n<p>It can also be created implicitly by using an Associative Array literal.</p>\\n<p>Starting from Roku OS 8, the quoted keys in Associative Array literals are now case-preserving. This change improves the readability of your code and is compatible with JSON usage.</p>\\n<p><strong>Example</strong></p>\\n<pre><code>' Creation of associative arrays\\n\\naa1 = CreateObject(\\\"roAssociativeArray\\\")   ' Explicitly \\naa2 = {}                                   ' Implicitly\\naa3 = {                                    ' With some initial values\\n   foo : 12,\\n   bar : 13\\n}\\n\\n' Assigning values\\n\\naa1.AddReplace(\\\"Bright\\\", \\\"Script\\\")  ' With explicit function calls\\naa1.AddReplace(\\\"TMOL\\\", 42)\\naa1.boo = 112                       ' With dot operator\\naa1[\\\"baz\\\"] = \\\"abcdefg\\\"              ' With bracket operator\\n\\n' Accessing values\\n\\nprint aa1.Bright           ' With dot operator (will print 'Script')\\nprint aa1.Lookup(\\\"TMOL\\\")   ' With function call (will print 42)\\nprint aa1[\\\"boo\\\"]           ' With bracket operator (will print 112)\\n\\n' Using ifEnum interface to walk through keys in an associative array\\nfor each key in aa1\\n\\n    print \\\"  \\\" key \\\"=\\\" aa1[key]\\n\\nend for\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifassociativearray.md\\\">ifAssociativeArray</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifenum.md\\\">ifEnum</a>             </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roaudioguide.md":"{\n  \"content\": \"<h1 id=\\\"roaudioguide\\\">roAudioGuide</h1>\\n<blockquote>\\n<p>This component is only available on the following devices: Roku Streaming Stick (3600X), Roku Express (3700X) and Express+ (3710X), Roku Premiere (4620X) and Premiere+ (4630X), Roku Ultra (4640X), and any Roku TV running Roku OS version 7.5 and later.</p>\\n</blockquote>\\n<p>The roAudioGuide component provides Audio Guide support for applications that require custom speech beyond what is provided by automatic Audio Guide in SDK and Scene Graph components.</p>\\n<p>Though some of the roAudioGuide API is similar to <a href=\\\"/docs/references/brightscript/components/rotexttospeech.md\\\" title=\\\"roTextToSpeech\\\">roTextToSpeech</a>, roAudioGuide provides support specific to Audio Guide, including:</p>\\n<ul>\\n<li>Speaks when Audio Guide is enabled, and doesn't speak if it isn't.</li>\\n<li>Automatically splits up text to reduce lag.</li>\\n<li>Uses the correct voice, language, volume, and speech rate for Audio Guide.</li>\\n<li>Tries to be \\\"smart\\\" by pre-processing the text for correct pronunciation of things like currency, email addresses, acronyms, media-related names and titles, etc.</li>\\n</ul>\\n<p>Usually, roAudioGuide would be used on its own, but it can be used in conjunction with <a href=\\\"/docs/references/brightscript/components/rotexttospeech.md\\\" title=\\\"roTextToSpeech\\\">roTextToSpeech</a>.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifaudioguide.md\\\" title=\\\"ifAudioGuide\\\">ifAudioGuide</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roaudiometadata.md":"{\n  \"content\": \"<h1 id=\\\"roaudiometadata\\\">roAudioMetadata</h1>\\n<p>The roAudioMetadata component provides developers access to audio file metadata included in many audio files. This should enable some audiofiles to deliver the information needed to fill out an roSpringboard screen without passing the info in a separate xml feed. roAudioMetadata currently only works with local file URLs. </p>\\n<p>The component requires the use of a dynamically loaded library that is not part of the initially booted image. Therefore, an entry must be added to the manifest of any applications that use the roAudioMetadata component so it can be loaded when the channel is launched. Here's the manifest entry:</p>\\n<p><em>requires_audiometadata=1</em></p>\\n<p>This object is created without any arguments:</p>\\n<p><code>CreateObject(\\\"roAudioMetadata\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>REM printAA() is from generalUtils.brs in our sample apps\\nREM and used to print an associative Array\\n\\nSub SaveCoverArtFile(filename As String)\\n    meta = CreateObject(\\\"roAudioMetadata\\\")\\n    meta.SetUrl(filename)\\n    print \\\"------------- GetTags() -------------------------\\\"\\n    tags = meta.GetTags()\\n    printAA(tags)\\n    print \\\"------------- GetAudioProperties() --------------\\\"\\n    properties = meta.GetAudioProperties()\\n    printAA(properties)\\n    print \\\"------------- GetCoverArt() ---------------------\\\"\\n    thumbnail = meta.GetCoverArt()\\n    if (thumbnail &#x3C;> invalid) then\\n            if (thumbnail.bytes = invalid) then\\n            return\\n        end if\\n        imgtype = thumbnail.type\\n        image_ext=\\\"\\\"\\n        if (imgtype = \\\"image/jpeg\\\" or imgtype = \\\"jpg\\\") then\\n            image_ext = \\\"jpg\\\"\\n        else if (imgtype = \\\"image/png\\\" or imgtype = \\\"png\\\") then\\n            image_ext = \\\"png\\\"\\n        else\\n            image_ext = \\\"jpg\\\"\\n        end if\\n        tmp_img = \\\"tmp:/CoverArtImage\\\" + \\\".\\\" + image_ext\\n        if (tmp_img &#x3C;> invalid) then\\n            DeleteFile(tmp_img)\\n        end if\\n        thumbnail.bytes.Writefile(tmp_img)\\n    end if\\nEnd Sub\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifaudiometadata.md\\\" title=\\\"ifAudioMetadata\\\">ifAudioMetadata</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roaudioplayer.md":"{\n  \"content\": \"<h1 id=\\\"roaudioplayer\\\">roAudioPlayer</h1>\\n<p>The Audio Player object provides the ability to setup the playing of a series of audio streams. The object accepts an array of content meta-data objects, describing the audio and providing URLs for accessing each stream. The component understands the following streamformat values: \\\"mp3\\\", \\\"wma\\\", \\\"mp4\\\", \\\"hls\\\", \\\"es.aac-adts\\\", \\\"flac.\\\"</p>\\n<p>This object does not provide an interface to a screen. In order to get events both from the screen you are using and the Audio Player, you should use the same Message Port for both objects. </p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roAudioPlayer\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>Sub Main()\\n    audioPlayer = CreateObject(\\\"roAudioPlayer\\\")\\n    port = CreateObject(\\\"roMessagePort\\\")\\n    audioPlayer.SetMessagePort(port)\\n    song = CreateObject(\\\"roAssociativeArray\\\")\\n    song.url = \\\"http://www.theflute.co.uk/media/BachCPE_SonataAmin_1.wma\\\"\\n    audioplayer.addcontent(song)\\n    audioplayer.setloop(false)\\n    audioPlayer.play()\\n    while true\\n            msg = wait(0, port)\\n            if type(msg) = \\\"roAudioPlayerEvent\\\"\\n                    if msg.isStatusMessage() then\\n                        print \\\"roAudioPlayerEvent: \\\"; msg.getmessage()\\n                        if msg.getmessage() = \\\"end of playlist\\\" return\\n                    endif\\n            endif\\n        end while\\nEnd Sub\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifaudioplayer.md\\\" title=\\\"ifAudioPlayer\\\">ifAudioPlayer</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/roaudioplayerevent.md\\\" title=\\\"roAudioPlayerEvent\\\">roAudioPlayerEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roaudioresource.md":"{\n  \"content\": \"<h1 id=\\\"roaudioresource\\\">roAudioResource</h1>\\n<p>The roAudioResouce allows .wav files to be cached to memory and quickly played at any time. roAudioResource is intended to support short audio clips which need to be played with very little latency. The system caches the entire wav file in memory so that playback can begin very quickly.</p>\\n<p>On Roku \\\"Classic\\\" models, roAudioResource does not support mixing of sounds. So when you play a sound effect, any background music is paused while the sound effect plays and then resumes after the sound effect ends. On later models, sound effects are mixed with background music. See the <a href=\\\"/docs/specs/hardware.md#current-models\\\">Hardware specifications document</a> for a list of Current and Classic models.</p>\\n<p>This object is created with a filename parameter that is a path to the sound resource file:</p>\\n<p><code>CreateObject(\\\"roAudioResource\\\", filename)</code></p>\\n<p>The filename must be the name of a local file and cannot be a URL. To use a URL, you may download the file to the application's \\\"tmp:\\\" file system using <a href=\\\"/docs/references/brightscript/components/rourltransfer.md\\\">roUrlTransfer</a> and pass a filename of the form \\\"tmp:/file.wav\\\" to CreateObject.</p>\\n<pre><code>sound = CreateObject(\\\"roAudioResource\\\", \\\"pkg:/sounds/beep1.wav\\\")\\nsound.Trigger(75)\\n</code></pre>\\n<p>An object can also be created using the name of a system sound effect:</p>\\n<ul>\\n<li>\\\"select\\\" - the sound effect to be played when a selection is made, e.g. when OK is pressed.</li>\\n<li>\\\"navsingle\\\" - the sound effect to be played when navigating a list or grid, e.g. when left or right is pressed.</li>\\n<li>\\\"navmulti\\\" - the sound effect to be played when paging through a list or grid, e.g. when rewind or fast-forward is pressed.</li>\\n<li>\\\"deadend\\\" - the sound effect to be played when a button press could not be processed.</li>\\n</ul>\\n<p>Note that system sound effects are played at the volume selected in the user's settings, or not played at all if the user has turned sound effects off, regardless of the volume value passed to Trigger.</p>\\n<pre><code>sound = CreateObject(\\\"roAudioResource\\\", \\\"select\\\")\\nsound.Trigger(50)\\n</code></pre>\\n<p>Mult\\niple sounds can be mixed and played at the same time:</p>\\n<pre><code>sound1 = CreateObject(\\\"roAudioResource\\\", \\\"pkg:/sounds/beep1.wav\\\")\\nsound2 = CreateObject(\\\"roAudioResource\\\", \\\"select\\\")\\nsound1.Trigger(50, 0)\\nif sound2.maxSimulStreams() > 1\\n  sound2.Trigger(50, 1)\\nend if\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported Interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifaudioresource.md\\\">ifAudioResource</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/robitmap.md":"{\n  \"content\": \"<h1 id=\\\"robitmap\\\">roBitmap</h1>\\n<p>The roBitmap component contains image data and provides an interface (ifDraw2D) for drawing. Bitmaps can be used for a variety of purposes, such as for sprites, compositing, or as double buffers.</p>\\n<p>It stores four color channels: red, green, blue, and alpha, with 32-bits per pixel. They can be any arbitrary size up to 2048x2048. However, the maximum size bitmap uses 16MB of memory, so there are practical memory limitations which would compel smaller bitmap sizes.  Coordinates (x,y) for 2D bitmaps have an origin (0,0) at the top left. roBitmap is always offscreen. The top roScreen is the only ifDraw2D surface which is displayed. roBitmap represents something that can be drawn onto, as well as something that can be drawn.</p>\\n<p>Drawing operations into a roBitmap (or other surface with ifDraw2D interface, such as an <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\" title=\\\"roScreen\\\">roScreen</a>) are clipped so the only the part that is within its bounds is rendered. X,Y coordinates that specify a location in a bitmap to render to (for example, as used by DrawObject() or DrawText() ) may be positive or negative. Negative implies that the left and top of the rendered object will be clipped.The same bitmap cannot be used as a source and a destination in a single DrawObject() call.</p>\\n<p>There are limitations when using the onscreen bitmap as a source. For example, Alpha blending may not work.</p>\\n<p>An empty roBitmap object can be created with CreateObject():</p>\\n<p><code>CreateObject(\\\"roBitmap\\\", bitmapProps As Object)</code></p>\\n<p>bitmapProps is an roAssociativeArray with Integers width (Integer), height (Integer), and AlphaEnable (Boolean), and name (String) parameters. The contents of an empty RoBitmap are initialized to zero (transparent black).</p>\\n<p>Example: <code>CreateObject(\\\"roBitmap\\\", {width:10, height:10, AlphaEnable:false, name:\\\"MyBitmapName\\\"})</code></p>\\n<p>An roBitmap can also load its image data from a file:</p>\\n<p><code>CreateObject(\\\"roBitmap\\\", String filename)</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>' Draw three bitmaps as fast as we can\\n'\\nScreen=CreateObject(\\\"roScreen\\\")\\nbm1=CreateObject(\\\"roBitmap\\\", \\\"pkg:/images/myphoto1.jpg\\\")\\nbm2=CreateObject(\\\"roBitmap\\\", \\\"pkg:/images/myphoto2.jpg\\\")\\nbm3=CreateObject(\\\"roBitmap\\\", \\\"pkg:/images/myphoto3.jpg\\\")\\nbmarray=[bm1, bm2, bm3]\\nWhile true\\n    For each bitmap in bmarray\\n        Screen.DrawObject(0,0, bitmap)\\n        Screen.Finish()\\n    End for\\nEnd While\\n</code></pre>\\n<p><strong>Example: Double buffering with roBitmap</strong></p>\\n<pre><code>screen1=CreateObject(\\\"roScreen\\\")\\noff=CreateObject(\\\"roBitmap\\\", {width:1280, height:720, AlphaEnable:false})\\noff.Clear(white)\\ndfDrawImage(off, \\\"pkg:/images/myimage.png\\\", 50, 50)\\noff.DrawRect(150, 150, 200, 200, &#x26;hFF) ' black, alpha: all source\\nscreen1.DrawObject(0, 0, off)\\nScreen1.Finish()\\n</code></pre>\\n<h2 id=\\\"supported-image-formats\\\">Supported image formats</h2>\\n<p>See the <a href=\\\"/docs/specs/media/streaming-specifications.md#supported-image-formats\\\">Roku streaming specification</a> for the image formats supported by this component. </p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifdraw2d.md\\\" title=\\\"ifDraw2D\\\">ifDraw2D</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roboolean.md":"{\n  \"content\": \"<h1 id=\\\"roboolean\\\">roBoolean</h1>\\n<p>roBoolean is the object equivalent for intrinsic type Boolean. </p>\\n<p>This is useful in the following situations:</p>\\n<ul>\\n<li>When an object is needed, instead of an intrinsic value. For example, \\\"roList\\\" maintains a list of objects. If an Boolean is added to roList, it will be automatically wrapped in an roBoolean by the language interpreter. When a function that expects a BrightScript Component as a parameter is passed a boolean, BrightScript automatically creates the equivalent BrightScript Component.</li>\\n<li>If any object exposes the ifBoolean interface, that object can be used in any expression that expects an intrinsic value.</li>\\n</ul>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifboolean.md\\\" title=\\\"ifBoolean\\\">ifBoolean</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/robytearray.md":"{\n  \"content\": \"<h1 id=\\\"robytearray\\\">roByteArray</h1>\\n<p>The byte array component is used to contain and manipulate an arbitrary array of bytes. </p>\\n<p>This object contains functions to convert strings to or from a byte array, as well as to or from ascii hex or ascii base 64. Note that if you are converting a byte array to a string, and the byte array contains a zero, the string conversion will end at that point. roByteArray will autosize to become larger as needed. If you wish to turn off this behavior, then use the SetResize() function. If you read an uninitialized index, \\\"invalid\\\" is returned.\\nroByteArray supports the <a href=\\\"/docs/references/brightscript/interfaces/ifarray.md\\\" title=\\\"ifArray\\\">ifArray</a> interface, and so can be accessed with the array [] operator. The byte array is always accessed as unsigned bytes when using this interface. roByteArray also supports the ifEnum interface, and so can be used with a \\\"for each\\\" statement.</p>\\n<p><strong>Example</strong></p>\\n<pre><code>ba=CreateObject(\\\"roByteArray\\\")\\nba.FromAsciiString(\\\"leasure.\\\")\\nif ba.ToBase64String()&#x3C;>\\\"bGVhc3VyZS4=\\\" then stop\\n\\nba=CreateObject(\\\"roByteArray\\\")\\nba.fromhexstring(\\\"00FF1001\\\")\\nif ba[0]&#x3C;>0 or ba[1]&#x3C;>255 or ba[2]&#x3C;>16 or ba[3]&#x3C;>1 then stop\\n\\nba=CreateObject(\\\"roByteArray\\\")\\nfor x=0 to 4000\\n    ba.push(x)\\nend for\\n\\nba.WriteFile(\\\"tmp:/ByteArrayTestFile\\\")\\nba2=CreateObject(\\\"roByteArray\\\")\\nba2.ReadFile(\\\"tmp:/ByteArrayTestFile\\\")\\nif ba.Count()&#x3C;>ba2.Count() then stop\\nfor x=0 to 4000\\n    if ba[x]&#x3C;>ba2[x] then stop\\nend for\\n\\nba2.ReadFile(\\\"tmp:/ByteArrayTestFile\\\", 10, 100)\\nif ba2.count()&#x3C;>100 then stop\\nfor x=10 to 100\\n    if ba2[x-10]&#x3C;>x then stop\\nend for\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifbytearray.md\\\" title=\\\"ifByteArray\\\">ifByteArray</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarray.md\\\" title=\\\"ifArray\\\">ifArray</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarrayget.md\\\" title=\\\"ifArrayGet\\\">ifArrayGet</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarrayset.md\\\" title=\\\"ifArraySet\\\">ifArraySet</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifenum.md\\\" title=\\\"ifEnum\\\">ifEnum</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rocaptionrenderer.md":"{\n  \"content\": \"<h1 id=\\\"rocaptionrenderer\\\">roCaptionRenderer</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roCaptionRenderer component provides a mechanism for BrightScript channels to render closed captions in video played back with the roVideoPlayer. Prior to the v 5.2 Roku firmware, captions could only be rendered in roVideoScreen.</p>\\n<p>Prior to the 5.2 Roku OS version, closed captions could only be rendered in roVideoScreen.  Now channels that use roVideoPlayer embedded in an roScreen or roImageCanvas can also take advantage of Roku's closed captioning support.  roCaptionRenderer supports two different modes, which is set using the <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#setmodemode-as-integer-as-void\\\" title=\\\"SetMode()\\\">SetMode()</a> method.  Depending on the mode set, and the type of screen being used, the BrightScript channel needs to do different levels of work to render captions.  These different workflows are highlighted in the tables below:</p>\\n<p><strong>Model 1</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>roScreen</th>\\n<th>roImageCanvas</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Call <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#setscreenscreen-as-object-as-void\\\" title=\\\"SetScreen()\\\">SetScreen()</a></td>\\n<td>Call <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#setscreenscreen-as-object-as-void\\\" title=\\\"SetScreen()\\\">SetScreen()</a></td>\\n</tr>\\n<tr>\\n<td>Call <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#updatecaption-as-void\\\" title=\\\"UpdateCaption()\\\">UpdateCaption()</a></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Model 2</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>roScreen</th>\\n<th>roImageCanvas</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>All caption rendering is done by the channel's BrightScript code</td>\\n<td>All caption rendering is done by the channel's BrightScript code</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>BrightScript channels do not create roCaptionRenderer instances directly using CreateObject().  Instead, when an roVideoPlayer is created, it contains an roCaptionRenderer.  BrightScript channels call <a href=\\\"/docs/references/brightscript/interfaces/ifvideoplayer.md#getcaptionrenderer-as-object\\\" title=\\\"ifVideoPlayer.GetCaptionRenderer()\\\">ifVideoPlayer.GetCaptionRenderer()</a> to get the caption renderer associated with their video player.</p>\\n<p><strong>Example</strong></p>\\n<pre><code>Function Main() as void\\n  mode = 1\\n  fonts = CreateObject(\\\"roFontRegistry\\\")\\n  fonts.Register(\\\"pkg:/fonts/vSHandprinted.otf\\\")\\n  font = fonts.GetFont(\\\"vSHandprinted\\\", 28, 500, false)\\n  screen = CreateObject(\\\"roScreen\\\", true)\\n  port = CreateObject(\\\"roMessagePort\\\")\\n  screen.Clear(&#x26;h00)\\n  screen.SwapBuffers()\\n  screen.SetMessagePort(port)\\n  timer = CreateObject(\\\"roTimespan\\\")\\n  screenSize = {}\\n  screenSize.width = screen.GetWidth()\\n  screenSize.height = screen.GetHeight()\\n\\n  player = CreateObject(\\\"roVideoPlayer\\\")\\n  player.SetContentList([\\n    {\\n        Stream : { url :\\\"http://ecn.channel9.msdn.com/o9/content/smf/smoothcontent/elephantsdream/Elephants_Dream_1024-h264-st-aac.ism/manifest\\\" }\\n        StreamFormat : \\\"ism\\\"\\n        TrackIDAudio: \\\"audio_eng\\\"\\n        TrackIDSubtitle: \\\"ism/textstream_eng\\\"\\n    }\\n  ])\\n\\n  captions = player.GetCaptionRenderer()\\n  if (mode = 1)\\n    captions.SetScreen(screen)\\n  endif\\n  captions.SetMode(mode)\\n  captions.SetMessagePort(port)\\n  captions.ShowSubtitle(true)\\n\\n  player.play()\\n\\n  while true\\n    msg = wait(250, port)\\n    if type(msg) = \\\"roCaptionRendererEvent\\\"\\n      if msg.isCaptionText()\\n        print \\\"isCaptionText\\\"\\n        if msg.GetMessage() &#x3C;> invalid and msg.GetMessage() &#x3C;> \\\"\\\"\\n          DrawCaptionString(screen, screenSize, msg.GetMessage(), font)\\n          timer.Mark()\\n        else if timer.TotalSeconds() > 2\\n          ClearCaptionString(screen)\\n        endif\\n      else if msg.isCaptionUpdateRequest()\\n        print \\\"isCaptionUpdateRequest()\\\"\\n        UpdateCaptions(screen, captions)\\n      end if\\n    endif\\n  end while\\nEnd Function\\n\\nFunction UpdateCaptions(screen as object, captions as object) as Void\\n  screen.Clear(&#x26;h00)\\n  captions.UpdateCaption()\\n  screen.SwapBuffers()\\nEnd Function\\n\\nFunction DrawCaptionString(screen as object, screenSize as object, caption as String, font as object) as Void\\n  screen.Clear(&#x26;h00)\\n  textHeight = font.GetOneLineHeight()\\n  textWidth = font.GetOneLineWidth(caption, screenSize.width)\\n  x = (screenSize.width - textWidth) / 2\\n  y = screenSize.height - textHeight\\n  screen.DrawText(caption, x, y, &#x26;hd5d522ff, font)\\n  screen.SwapBuffers()\\nEnd Function\\n\\nFunction ClearCaptionString(screen as object) as void\\n  screen.Clear(&#x26;h00)\\n  screen.SwapBuffers()\\nEnd Function\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md\\\" title=\\\"ifCaptionRenderer\\\">ifCaptionRenderer</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/event/rocaptionrendererevent.md\\\" title=\\\"roCaptionRendererEvent\\\">roCaptionRendererEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rochannelstore.md":"{\n  \"content\": \"<h1 id=\\\"rochannelstore\\\">roChannelStore</h1>\\n<p>The roChannelStore component allows the application to perform a purchase of an In-Channel Product or upgrade a channel. Most of the purchase flow, screens and messaging associated with the financial transaction are handled by the Roku OS outside of control or monitoring by BrightScript code. The BrightScript code merely initiates the purchase and receives a final result. This will engender trust with users and give them confidence that they are dealing with the Roku Channel Store.</p>\\n<p>The roChannelStore component allows purchasing only those In-Channel Products which are associated with the running channel. Please see <a href=\\\"/docs/developer-program/roku-pay/quickstart/in-channel-products.md\\\" title=\\\"Adding in-channel products\\\">Adding in-channel products</a> for details on how to create an In-Channel Product and associate it with a channel. After one or Products are created, GetCatalog() can be used to retrieve a list of Products and their attributes. DoOrder() can be called to initiate a purchase of one or more of the Products.</p>\\n<p>The roChannelStore object has a FakeServer() method that will enable you to test the purchase flow scenarios without actually making a real transaction in the Roku channel store. This will be useful in the development of your channel, but should never be used in the actual channel you publish.</p>\\n<p>This object is created without any arguments:</p>\\n<p><code>CreateObject(\\\"roChannelStore\\\")</code></p>\\n<blockquote>\\n<p>Because <a href=\\\"/docs/references/brightscript/interfaces/ifchannelstore.md#doorder-as-boolean\\\" title=\\\"ifChannelStore.DoOrder()\\\">ifChannelStore.DoOrder()</a> needs to read the product type returned by GetCatalog(), only one instance of roChannelStore should ever be used for a complete purchase flow - you should never create a separate roChannelStore object to complete a purchase that was initiated by a different instance of roChannelStore.</p>\\n</blockquote>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifchannelstore.md\\\" title=\\\"ifChannelStore\\\">ifChannelStore</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort \\\">ifGetMessagePort </a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rochannelstoreevent.md\\\" title=\\\"roChannelStoreEvento\\\">roChannelStoreEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rocoderegistrationscreen.md":"{\n  \"content\": \"<h1 id=\\\"rocoderegistrationscreen\\\">roCodeRegistrationScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Code Registration Screen is designed to present the user a registration code, and the information required to instruct the user on how to register with a service provider. This screen is designed for a rendezvous registration process, where the user is presented a code and the URL for a registration site. The user goes to the site and enters their code, which causes the device and the account to be linked. In the background, the script is polling for completion and the screen is closed to display an activation successful screen when done.</p>\\n<p><strong>Diagram: roCodeRegistrationScreen</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roCodeRegistrationScreenImage1.png\\\" alt=\\\"Diagram: roCodeRegistrationScreen\\\" title=\\\"roCodeRegistrationScreenImage1\\\"></p>\\n<p><strong>Example</strong></p>\\n<pre><code>Function ShowMessageDialog() As Void\\n     port = CreateObject(\\\"roMessagePort\\\")\\n     screen = CreateObject(\\\"roCodeRegistrationScreen\\\")\\n     screen.SetMessagePort(port)\\n     screen.SetTitle(\\\"[Registration screen title]\\\")\\n     screen.AddParagraph(\\\"[Registration screen paragraphs are justified to right and left edges]\\\")\\n     screen.AddFocalText(\\\" \\\", \\\"spacing-dense\\\")\\n     screen.AddFocalText(\\\"From your computer,\\\", \\\"spacing-dense\\\")\\n     screen.AddFocalText(\\\"go to mysite.com/roku\\\", \\\"spacing-dense\\\")\\n     screen.AddFocalText(\\\"and enter this code:\\\", \\\"spacing-dense\\\")\\n     screen.AddFocalText(\\\" \\\", \\\"spacing-dense\\\")\\n     screen.SetRegistrationCode(\\\"retrieving code...\\\")\\n     screen.AddParagraph(\\\"[Registration screen paragraphs are justified to right and left edges and may continue on multiple lines]\\\")\\n     screen.AddButton(0, \\\"get a new code\\\")\\n     screen.AddButton(1, \\\"back\\\")\\n     screen.Show()\\n     sleep (10000) 'simulate fetching registration code from webapi\\n     screen.SetRegistrationCode(\\\"ABC7TG\\\")\\n     screen.Show()\\n     while true\\n         dlgMsg = wait(0, dialog.GetMessagePort())\\n         exit while\\n     end while\\n End Function\\n</code></pre>\\n<p><strong>Image: roCodeRegistrationScreen example results</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/cdregistscrn1.jpg\\\" alt=\\\"cdregistscrn1\\\" title=\\\"cdregistscrn1\\\"></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/cdregistscrn2.jpg\\\" alt=\\\"cdregistscrn2\\\" title=\\\"cdregistscrn2\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iifCodeRegistrationScreen.md\\\" title=\\\"ifCodeRegistrationScreen\\\">ifCodeRegistrationScreen</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifsetmessageport \\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rocoderegistrationscreenevent.md\\\" title=\\\"roCodeRegistrationScreenEvent\\\">roCodeRegistrationScreenEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rocompositor.md":"{\n  \"content\": \"<h1 id=\\\"rocompositor\\\">roCompositor</h1>\\n<p>The roCompositor allows the composition and animation of multiple roBitmaps and roRegions.</p>\\n<p>This object can create and manage roSprites in a z-ordered list. The sprites can be of arbitrary size and can be thought of as planes. The compositor can manage collision detection between the sprites, support scrolling the sprite bitmap source, and support animated sprites (multi-frame sprites with frame-flipping animation). You may have multiple roCompositor components, and they can composite onto the same or separate bitmaps. That said, the most common scenario is to have a single roCompositor.</p>\\n<p><strong>Example: Scrolling a bitmap</strong></p>\\n<pre><code>Library \\\"v30/bslCore.brs\\\"\\nFunction main()\\n        black=&#x26;hFF'RGBA\\n        screen=CreateObject(\\\"roScreen\\\")\\n        compositor=CreateObject(\\\"roCompositor\\\")\\n        compositor.SetDrawTo(screen, black)\\n        http = CreateObject(\\\"roUrlTransfer\\\")\\n        http.SetMessagePort(CreateObject(\\\"roMessagePort\\\"))\\n        http.SetUrl(\\\"http://rokudev.roku.com/rokudev/examples/scroll/VeryBigPng.png\\\")\\n        http.AsyncGetToFile(\\\"tmp:/VeryBigPng.png\\\")\\n        wait(0, http.GetPort())\\n        bigbm=CreateObject(\\\"roBitmap\\\",\\\"tmp:/VeryBigPng.png\\\")\\n        region=CreateObject(\\\"roRegion\\\", bigbm, 0, 0, 1280, 720)\\n        region.SetWrap(True)\\n\\n        view_sprite=compositor.NewSprite(0, 0, region)\\n        compositor.draw()\\n        screen.SwapBuffers()\\n        msgport = CreateObject(\\\"roMessagePort\\\")\\n        screen.SetMessagePort(msgport)\\n        codes = bslUniversalControlEventCodes()\\n        While True\\n                msg=wait(0, msgport) ' wait for a button\\n                print \\\"Msg: \\\"; type(msg); \\\" event: \\\"; msg.GetInt()\\n                If type(msg)=\\\"roUniversalControlEvent\\\" Then\\n                        If msg.GetInt()=codes.BUTTON_UP_PRESSED Then\\n                                Zip(screen, view_sprite, compositor, 0,-4) 'up\\n                        Else If msg.GetInt()=codes.BUTTON_DOWN_PRESSED Then\\n                                Zip(screen, view_sprite, compositor, 0,+4) ' down\\n                        Else If msg.GetInt()=codes.BUTTON_RIGHT_PRESSED Then\\n                                Zip(screen, view_sprite, compositor, +4,0) ' right\\n                        Else If msg.GetInt()=codes.BUTTON_LEFT_PRESSED Then\\n                                Zip(screen, view_sprite, compositor, -4, 0) ' left\\n                        Else If msg.GetInt() = codes.BUTTON_BACK_PRESSED ' back button\\n                                Exit While\\n                        End If\\n                End If\\n        End While\\nEnd Function\\nFunction Zip(screen, view_sprite, compositor, xd, yd)\\n        For x=1 To 60\\n                view_sprite.OffsetRegion(xd, yd, 0, 0)\\n                compositor.draw()\\n                screen.SwapBuffers()\\n        End For\\nEnd Function\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifcompositor.md\\\" title=\\\"ifCompositor\\\">ifCompositor</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rodatagramsocket.md":"{\n  \"content\": \"<h1 id=\\\"rodatagramsocket\\\">roDataGramSocket</h1>\\n<p>The roDataGramSocket component enables Brightscript apps to send and receive UDP packets. The interface is modeled on and works much like standard Berkeley sockets.</p>\\n<p>This object is created without any arguments:</p>\\n<p><code>CreateObject(\\\"roDataGramSocket\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>' UDP 2-way peer-to-peer asynchronous comm on port 54321\\n' periodically sends out a message to a specific address and port\\n' prints any message it receives\\nFunction UDPPeer()\\n    msgPort = createobject(\\\"roMessagePort\\\")\\n    udp = createobject(\\\"roDatagramSocket\\\")\\n    udp.setMessagePort(msgPort) 'notifications for udp come to msgPort\\n    addr = createobject(\\\"roSocketAddress\\\")\\n    addr.setPort(54321)\\n    udp.setAddress(addr) ' bind to all host addresses on port 54321\\n    addr.SetHostName(\\\"10.1.1.1\\\")\\n    udp.setSendToAddress(addr) ' peer IP and port\\n    udp.notifyReadable(true)\\n    timeout = 1 * 10 * 1000 ' ten seconds in milliseconds\\n    deviceName = Createobject(\\\"roDeviceInfo\\\").GetFriendlyName()\\n    message = \\\"Datagram from \\\" + deviceName\\n    udp.sendStr(message)\\n    continue = udp.eOK()\\n    While continue\\n        event = wait(timeout, msgPort)\\n        If type(event)=\\\"roSocketEvent\\\"\\n        If event.getSocketID()=udp.getID()\\n                If udp.isReadable()\\n                    message = udp.receiveStr(512) ' max 512 characters\\n                    print \\\"Received message: '\\\"; message; \\\"'\\\"\\n                End If\\n            End If\\n        Else If event=invalid\\n            print \\\"Timeout\\\"\\n            udp.sendStr(message) ' periodic send\\n        End If\\n    End While\\n    udp.close() ' would happen automatically as udp goes out of scope\\n\\nEnd Function\\n</code></pre>\\n<blockquote>\\n<p>GetDeviceUniqueId() was deprecated in Spring OS 2019.</p>\\n</blockquote>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocket.md\\\" title=\\\"ifSocket\\\">ifSocket</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketasync.md\\\" title=\\\"ifSocketAsync\\\">ifSocketAsync</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketstatus.md\\\" title=\\\"ifSocketStatus\\\">ifSocketStatus</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketoption.md\\\" title=\\\"ifSocketOption\\\">ifSocketOption</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketcastoption.md\\\" title=\\\"ifSocketCastOption \\\">ifSocketCastOption </a></li>\\n</ul>\\n<blockquote>\\n<p>Some legacy Roku OS versions may implement ifSocketCastOption as ifSocketCast.</p>\\n</blockquote>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifappinfo.md\\\" title=\\\"roSocketEvent \\\">roSocketEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rodatetime.md":"{\n  \"content\": \"<h1 id=\\\"rodatetime\\\">roDateTime</h1>\\n<p>The roDateTime provides an interface to obtain the current date/time for the player and manipulate date/times.</p>\\n<p>This component provides several options for obtaining attributes about the date/time. All times are GMT unless they are converted to the system timezone with a call to the method: toLocalTime(). </p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roDateTime\\\")</code></p>\\n<p>The date/time of the object is set to the current system time when the object is created.  The date/time represented by the object can be changed by calling Mark(), FromSeconds(), or FromISO8601String().</p>\\n<p><strong>Example</strong></p>\\n<pre><code>date = CreateObject(\\\"roDateTime\\\")\\nprint \\\"The date is now \\\"; date.AsDateString(\\\"long-date\\\")\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifdatetime.md\\\" title=\\\"ifDateTime\\\">ifDateTime</a></li>\\n</ul>\\n<blockquote>\\n<p>Some Roku OS versions may implement ifDateTime as ifRoDateTime</p>\\n</blockquote>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rodeviceinfo.md":"{\n  \"content\": \"<h1 id=\\\"rodeviceinfo\\\">roDeviceInfo</h1>\\n<p>The Device Info provides an interface to obtain attributes about the device.</p>\\n<p>These attributes are not changeable by the script, but may be queried to obtain values for the player. It is common for scripts to need access to the serial number and model info for negotiating with backend services.</p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roDeviceInfo\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>di = CreateObject(\\\"roDeviceInfo\\\")\\nprint di.GetModel()\\nprint di.GetVersion()\\nprint di.GetChannelClientId()\\n</code></pre>\\n<p><strong>Output</strong></p>\\n<p>The output from the above code would like the following:</p>\\n<pre><code> N1000\\n 999.99E99999X\\n 20E825000036\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md\\\" title=\\\"ifDeviceInfo \\\">ifDeviceInfo</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\" title=\\\"roDeviceInfoEvent\\\">roDeviceInfoEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rodouble.md":"{\n  \"content\": \"<h1 id=\\\"rodouble\\\">roDouble</h1>\\n<p>roDouble is the object equivalent for intrinsic type 'Double'.</p>\\n<p>It is a legacy object name, corresponding to the intrinsic Double object.  Applications should use Double literal values and/or Double-typed variables directly.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifdouble.md\\\" title=\\\"ifDouble\\\">ifDouble</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rodevicecrypto.md":"{\n  \"content\": \"<h1 id=\\\"rodevicecrypto\\\">roDeviceCrypto</h1>\\n<p>The roDeviceCrypto component enables you to encrypt and decrypt data on a device using a key that is unique per channel, device, or model. Using a channel key for example, you can encrypt data for a channel so that it may only be decrypted by that same channel. In this case, you could provision credentials or an API key from the cloud to devices securely. With a device key for example, you could implement a secure-storage like algorithm.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifdevicecrypto.md\\\">ifDeviceCrypto</a></li>\\n</ul>\\n<h2 id=\\\"description\\\">Description</h2>\\n<p>roDeviceCrypto has two methods: <code>Encrypt()</code> and <code>Decrypt()</code>. Both methods take a <code>roByteArray</code> and the encryption key type (<code>encType</code>), which is a string that may be set to \\\"channel\\\", \\\"device\\\", or \\\"model\\\".  </p>\\n<p>Both methods return a <code>roByteArray</code> so that you can encrypt plaintext on a Roku device\\nand then decode it, as demonstrated in the following example:  </p>\\n<pre><code>  ' store plaintext to be encrypted in an roByteArray\\n  ba = CreateObject(\\\"roByteArray\\\")\\n  ba.FromAsciiString(\\\"plain text1\\\")  \\n\\n  ' create roDeviceCrypto object and specify a device key\\n  dc = CreateObject(\\\"roDeviceCrypto\\\")\\n  encType = \\\"device\\\"\\n\\n  ' encrypt plaintext using the device key and store the encoded data in an roByteArray\\n  encrypted = dc.Encrypt(ba, encType)\\n\\n  ' decode the encrypted data and store the decrypted data in an roByteArray\\n  if encrypted &#x3C;> invalid then\\n    decrypted = dc.Decrypt(encrypted,encType)\\n  end if\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roevpcipher.md":"{\n  \"content\": \"<h1 id=\\\"roevpcipher\\\">roEVPCipher</h1>\\n<p>The EVP Cipher component provides an interface to the OpenSSL EVP library of symmetric cipher commands. The EVP library provides a high-level interface to cryptographic functions to implement digital \\\"envelopes\\\".</p>\\n<p>These commands allow data to be encrypted or decrypted using various block and stream ciphers using keys based on passwords or explicitly provided. </p>\\n<p>Some of the ciphers do not have large keys and others have security implications if not used correctly. A beginner is advised to just use a strong block cipher in CBC mode such as bf or des3. All the block ciphers normally use PKCS#5 padding also known as standard block padding. If padding is disabled then the input data must be a multiple of the cipher block length.</p>\\n<blockquote>\\n<p>For additional information on the OpenSSL library of symmetric ciphers see: <a href=\\\"https://www.openssl.org/docs/manmaster/man1/enc.html\\\">https://www.openssl.org/docs/manmaster/man1/enc.html</a>.</p>\\n</blockquote>\\n<p><strong>List of supported ciphers</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Cipher</th>\\n<th>Key size (bits)</th>\\n<th>Block size (bits)</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>bf-cbc</td>\\n<td>Blowfish in CBC mode</td>\\n<td>128</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>bf</td>\\n<td>Alias for bf-cbc</td>\\n<td>128</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>bf-cfb</td>\\n<td>Blowfish in CFB mode</td>\\n<td>128</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>bf-ecb</td>\\n<td>Blowfish in ECB mode</td>\\n<td>128</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>bf-ofb</td>\\n<td>Blowfish in OFB mode</td>\\n<td>128</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-cbc</td>\\n<td>DES in CBC mode</td>\\n<td>56</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des</td>\\n<td>Alias for des-cbc</td>\\n<td>56</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-cfb</td>\\n<td>DES in CBC mode</td>\\n<td>56</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ecb</td>\\n<td>DES in ECB mode</td>\\n<td>56</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ofb</td>\\n<td>DES in OFB mode</td>\\n<td>56</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede-cbc</td>\\n<td>Two key triple DES EDE in CBC mode</td>\\n<td>80</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede</td>\\n<td>Two key triple DES EDE in ECB mode</td>\\n<td>80</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede-cfb</td>\\n<td>Two key triple DES EDE in CFB mode</td>\\n<td>80</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede-ofb</td>\\n<td>Two key triple DES EDE in OFB mode</td>\\n<td>80</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede3-cbc</td>\\n<td>Three key triple DES EDE in CBC mode</td>\\n<td>112</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede3</td>\\n<td>Three key triple DES EDE in ECB mode</td>\\n<td>112</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des3</td>\\n<td>Alias for des-ede3-cbc</td>\\n<td>112</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede3-cfb</td>\\n<td>Three key triple DES EDE in CFB mode</td>\\n<td>112</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>des-ede3-ofb</td>\\n<td>Three key triple DES EDE in OFB mode</td>\\n<td>112</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>desx</td>\\n<td>DESX algorithm</td>\\n<td>approx. 119</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>desx-cbc</td>\\n<td>DESX in CBC mode</td>\\n<td>approx. 119</td>\\n<td>64</td>\\n</tr>\\n<tr>\\n<td>aes-[128/192/256]-cbc</td>\\n<td>128/192/256 bit AES in CBC mode</td>\\n<td>128,192,256</td>\\n<td>128</td>\\n</tr>\\n<tr>\\n<td>aes-[128/192/256]</td>\\n<td>Alias for aes-[128/192/256]-cbc</td>\\n<td>128,192,256</td>\\n<td>128</td>\\n</tr>\\n<tr>\\n<td>aes-[128/192/256]-cfb</td>\\n<td>128/192/256 bit AES in 128 bit CFB mode</td>\\n<td>128,192,256</td>\\n<td>128</td>\\n</tr>\\n<tr>\\n<td>aes-[128/192/256]-cfb1</td>\\n<td>128/192/256 bit AES in 1 bit CFB mode</td>\\n<td>128,192,256</td>\\n<td>128</td>\\n</tr>\\n<tr>\\n<td>aes-[128/192/256]-cfb8</td>\\n<td>128/192/256 bit AES in 8 bit CFB mode</td>\\n<td>128,192,256</td>\\n<td>128</td>\\n</tr>\\n<tr>\\n<td>aes-[128/192/256]-ecb</td>\\n<td>128/192/256 bit AES in ECB mode</td>\\n<td>128,192,256</td>\\n<td>128</td>\\n</tr>\\n<tr>\\n<td>aes-[128/192/256]-ofb</td>\\n<td>128/192/256 bit AES in OFB mode</td>\\n<td>128,192,256</td>\\n<td>128</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifevpcipher.md\\\" title=\\\"ifEVPCipher\\\">ifEVPCipher</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roevpdigest.md":"{\n  \"content\": \"<h1 id=\\\"roevpdigest\\\">roEVPDigest</h1>\\n<p>The EVP Digest component provides an interface to the OpenSSL EVP library of message digest algorithms. The EVP library provides a high-level interface to cryptographic hash functions.</p>\\n<p>roEVPDigest processes an arbitrary amount of data and generates a hash of the data, using a selected algorithm.</p>\\n<blockquote>\\n<p>For additional information on the OpenSSL library of message digest algorithms see: <a href=\\\"http://www.openssl.org/docs/apps/dgst.html\\\">http://www.openssl.org/docs/apps/dgst.html</a></p>\\n</blockquote>\\n<p><strong>List of Supported Digest Algorithms</strong></p>\\n<ul>\\n<li>md5 - MD5 message digest algorithm (default)</li>\\n<li>sha1 - SHA-1 message digest algorithm</li>\\n<li>sha224 - SHA-2, 224 bit variant</li>\\n<li>sha256 - SHA-2, 256 bit variant</li>\\n<li>sha384 - SHA-2, 384 bit variant</li>\\n<li>sha512 - SHA-2, 512 bit variant</li>\\n</ul>\\n<p><strong>Example: SHA1 Message Digest with roEVPDigest</strong></p>\\n<pre><code>ba = CreateObject(\\\"roByteArray\\\")\\n' ...populate bytearray...\\ndigest = CreateObject(\\\"roEVPDigest\\\")\\ndigest.Setup(\\\"sha1\\\")\\nresult = digest.Process(ba)\\nprint result\\n</code></pre>\\n<p><strong>Example: MD5 Message Digest with roEVPDigest</strong></p>\\n<pre><code>ba1 = CreateOjbect(\\\"roByteArray\\\")\\n' ...populate ba1...\\nba2 = CreateObject(\\\"roByteArray\\\")\\nba2.FromAsciiString(somestring)\\ndigest = CreateObject(\\\"roEVPDigest\\\")\\ndigest.Setup(\\\"md5\\\")\\ndigest.Update(ba1)\\ndigest.Update(ba2)\\nresult = digest.Final()\\nprint result\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifevpdigest.md\\\" title=\\\"ifEVPDigest\\\">ifEVPDigest</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rofilesystem.md":"{\n  \"content\": \"<h1 id=\\\"rofilesystem\\\">roFileSystem</h1>\\n<p>The roFilesystem component implements common filesystem inspection and modificationroutines.</p>\\n<p>All paths are matched case-insensitively, regardless of the case-sensitivity of the underlying filesystem. The supported character set is limited to only those characters supported by vfat filesystems (valid Windows characters). The usbplayer sample application is a good example of roFileSystem usage. USB devices with VFAT, NTFS, HFS, and HFS Plus filesystems are supported. The USB filesystems are currently mounted read only. </p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roFileSystem\\\")</code></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iffilesystem.md\\\" title=\\\"ifFileSystem\\\">ifFileSystem</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rofilesystemevent.md\\\" title=\\\"roFileSystemEvent\\\">roFileSystemEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rofloat.md":"{\n  \"content\": \"<h1 id=\\\"rofloat\\\">roFloat</h1>\\n<p>roFloat is the object equivalent for intrinsic type 'Float'.</p>\\n<p>This is useful in the following situations:</p>\\n<ul>\\n<li>If any object exposes the ifFloat interface, that object can be used in any expression that expects an intrinsic value.</li>\\n</ul>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iffloat.md\\\" title=\\\"ifFloat\\\">ifFloat</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rofont.md":"{\n  \"content\": \"<h1 id=\\\"rofont\\\">roFont</h1>\\n<p>roFont represents a particular font, from a font-family (eg. Arial), with a particular pixel size (e.g 20), and a particular boldness or italicness. </p>\\n<p>It is used in conjunction with <a href=\\\"/docs/references/brightscript/components/rofontregistry.md\\\" title=\\\"roFontRegistry\\\">roFontRegistry</a> to create and manage fonts. Font files are registered with roFontRegistry and then various methods in roFontRegistry can be used to create roFont objects.  Applications should not create roFonts with CreateObject() but should always use roFontRegistry to create them. roFont objects in turn can be used with <a href=\\\"/docs/references/brightscript/interfaces/ifdraw2d.md#drawtextrgba-as-integer-x-as-integer-y-as-integer-text-as-string-font-as-object-as-boolean\\\" title=\\\"ifDraw2D.DrawText\\\">ifDraw2D.DrawText</a> to draw text on the screen or into bitmaps.</p>\\n<p><strong>Example</strong></p>\\n<pre><code>screen = CreateObject(\\\"roScreen\\\")\\nwhite = &#x26;hFFFFFFFF\\nblue = &#x26;h0000FFFF\\nfont_registry = CreateObject(\\\"roFontRegistry\\\")\\nfont = font_registry.GetDefaultFont()\\n\\n' Draw white text in a blue rectangle\\ntext = \\\"Hello world\\\"\\nw = font.GetOneLineWidth(text, screen.GetWidth())\\nh = font.GetOneLineHeight()\\nx = 200\\ny = 100\\nborder = 8\\nscreen.DrawRect(x, y, w + 2*border, h + 2*border, blue)\\nscreen.DrawText(text, x+border, y+border, white, font)\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iffont.md\\\" title=\\\"ifFont\\\">ifFont</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rofontmetrics.md":"{\n  \"content\": \"<h1 id=\\\"rofontmetrics\\\">roFontMetrics</h1>\\n<blockquote>\\n<p>This class is deprecated. Developers should use <a href=\\\"/docs/references/brightscript/components/roFont.md\\\" title=\\\"roFont\\\">roFont</a> methods (GetOneLineHeight and GetOneLineWidth).</p>\\n</blockquote>\\n<p>The roFontMetrics object allows you to get display size information for a specific font returned by the roFontRegistry.Get() method.</p>\\n<p>In order to use this object, you must first initialize the roFontMetrics object with a font name that had been previously registered with the roFontRegistry, then the total rendered size of strings in that font can be returned by roFontMetrics.Size(). </p>\\n<p>This object is created with a string that represents the font to use in its size calculations:</p>\\n<p><code>CreateObject(\\\"roFontMetrics\\\", String font)</code></p>\\n<p><strong>Example: Simple use of roFontRegistry and roFontMetrics to render a string on the roImageCanvas</strong></p>\\n<pre><code>helloString = \\\"Hello ImageCanvas\\\"\\n\\nfontReg = CreateObject(\\\"roFontRegistry\\\")\\nfontReg.Register(\\\"pkg:/fonts/LCDMono.ttf\\\")\\nfont = fontReg.Get(\\\"LCDMono\\\",36,50,false) ' 36pt, 50 is normal\\n                                          ' weight, no italics\\n\\nfontMetrics = CreateObject(\\\"roFontMetrics\\\", font)\\nstringSize = fontMetrics.size(helloString)\\n\\ncanvasItem = { \\n    Text:helloString\\n    TextAttrs:{Color:\\\"#FFCCCCCC\\\", Font:font, \\n    HAlign:\\\"HCenter\\\",\\n    VAlign:\\\"VCenter\\\", Direction:\\\"LeftToRight\\\"}\\n    TargetRect:{x:390,y:357, w:stringSize.w,h:stringSize.h}\\n}\\n\\ncanvas = CreateObject(\\\"roImageCanvas\\\")\\nport = CreateObject(\\\"roMessagePort\\\")\\ncanvas.SetMessagePort(m.port)\\n'Set opaque background\\ncanvas.SetLayer(0, {Color:\\\"#FF000000\\\", CompositionMode:\\\"Source\\\"})\\ncanvas.SetRequireAllImagesToDraw(true)\\ncanvas.SetLayer(1, canvasItem)\\ncanvas.Show()\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iffontmetrics.md\\\" title=\\\"ifFontMetrics\\\">ifFontMetrics</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rofontregistry.md":"{\n  \"content\": \"<h1 id=\\\"rofontregistry\\\">roFontRegistry</h1>\\n<p>The roFontRegistry object allows you to create roFont objects, either using the default font or using fonts in TrueType or OpenType files packaged with your application.</p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roFontRegistry\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>reg = CreateObject(\\\"roFontRegistry\\\")\\nfont = reg.GetDefaultFont(30, false, false)\\nscreen = CreateObject(\\\"roScreen\\\")\\nscreen.DrawText(\\\"hello world\\\", 100, 100, &#x26;hFFFFFFFF, font)\\n</code></pre>\\n<p><strong>Example using a font file</strong></p>\\n<pre><code>reg.Register(\\\"pkg:/fonts/myfont.ttf\\\")\\nfont = reg.GetFont(\\\"MyFont\\\", 30, false, false)\\nscreen = CreateObject(\\\"roScreen\\\")\\nscreen.DrawText(\\\"hello world\\\", 100, 100, &#x26;hFFFFFFFF, font)\\n</code></pre>\\n<p>Font files can quickly get very large, so be conscious of the size of the font files you include with your application. You should be able to find very good font files that are 50k or less. Anything larger is probably too big. The customvideoplayer sample application is a good example of usage.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iffontregistry.md\\\" title=\\\"ifFontRegistry\\\">ifFontRegistry</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rofunction.md":"{\n  \"content\": \"<h1 id=\\\"rofunction\\\">roFunction</h1>\\n<p>roFunction is the object equivalent for intrinsic type Function.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iffunction.md\\\" title=\\\"ifFunction\\\">ifFunction</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rogridscreen.md":"{\n  \"content\": \"<h1 id=\\\"rogridscreen\\\">roGridScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Grid Screen provides a graphical display of poster art from multiple content categories from within a single screen.</p>\\n<p>Users can browse within a category list by scrolling horizonally and between category lists by scrolling vertically. There is an optional callout box in the lower right corner of the screen that can display details about the focused item without leaving the screen. Each item in the grid screen is represented by an image (aka poster), so any type of item that can be visually represented by an image can be displayed in the poster screen. It is used to show lists of data to users and common patterns include content categories, movies, podcasts, pictures, and search results.\\nThe initial release of roGridScreen only enabled the default list style, \\\"portrait\\\", using the following art sizes:</p>\\n<ul>\\n<li>Artwork sizes: SD=110x150; HD=210x270</li>\\n</ul>\\n<p>It also required grid posters to be .jpg files.</p>\\n<p>Later Roku OS versions added mixed aspect ratio grids, and the <a href=\\\"/docs/references/brightscript/interfaces/ifgridscreen.md\\\" title=\\\"ifGridScreen\\\">ifGridScreen</a> interface <a href=\\\"/docs/references/brightscript/interfaces/ifgridscreen.md#setlistposterstylesstyles-as-object-as-void\\\" title=\\\"SetListPosterStyles()\\\">SetListPosterStyles()</a> to set the aspect ratio of each row in the grid. If you want a mixed aspect ratio grid, you must call SetListPosterStyles() before you call <a href=\\\"/docs/references/brightscript/interfaces/ifgridscreen.md#setcontentlistrowindex-as-integer-contentlist-as-object-as-void\\\" title=\\\"SetContentList()\\\">SetContentList()</a>, to avoid possible distortion of the graphic images in the grid.</p>\\n<p><strong>Since Roku OS version 2.8</strong></p>\\n<p>File types of .png and .gif files are now supported, though they are converted internally to .jpg by the roGridScreen so they have a performance penalty.</p>\\n<p>In v2.8, there are now multiple grid styles that are specified in the SetGridStyle()method below. It's also worth going back and reviewing the appManager theme parameters in <a href=\\\"/docs/references/brightscript/components/roappmanager.md\\\" title=\\\"roAppManager\\\">roAppManager</a>, as v2.8 adds some new grid parameters. The border around the focused poster screen can be customized with the GridScreenFocusBorder images in png format. PNG files can have a transparent color value that you will need to allow the focused poster image to show through the border image. The corresponding offsets should be negative offsets that would be up and to the left of the top left corner of the poster image. The width of the borders should be the absolute values of the offsets and the rest of the image should be transparent inside. The GridScreenDescriptionImage is also positioned relative to the top left corner of the focused image. It can be positioned up and to the left with negative x and y offsets, below and to the right with positive offsets, or in the other corners with mixed signed x and y offsets. It's recommended that you include a \\\"callout\\\" tip pointing to the focused image in the GridScreenDescriptionImage.</p>\\n<p><strong>Diagram: roGridScreen</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roGridScreen.png\\\" alt=\\\"Diagram: roGridScreen\\\" title=\\\"roGridScreen\\\"></p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roGridScreen\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>Function Main()\\n    port = CreateObject(\\\"roMessagePort\\\")\\n    grid = CreateObject(\\\"roGridScreen\\\")\\n    grid.SetMessagePort(port)\\n    rowTitles = CreateObject(\\\"roArray\\\", 10, true)\\n    for j = 0 to 10\\n        rowTitles.Push(\\\"[Row Title \\\" + j.toStr() + \\\" ] \\\")\\n    end for\\n    grid.SetupLists(rowTitles.Count())\\n    grid.SetListNames(rowTitles)\\n    for j = 0 to 10\\n    list = CreateObject(\\\"roArray\\\", 10, true)\\n    for i = 0 to 10\\n             o = CreateObject(\\\"roAssociativeArray\\\")\\n             o.ContentType = \\\"episode\\\"\\n             o.Title = \\\"[Title\\\" + i.toStr() + \\\"]\\\"\\n             o.ShortDescriptionLine1 = \\\"[ShortDescriptionLine1]\\\"\\n             o.ShortDescriptionLine2 = \\\"[ShortDescriptionLine2]\\\"\\n             o.Description = \\\"\\\"\\n             o.Description = \\\"[Description] \\\"\\n             o.Rating = \\\"NR\\\"\\n             o.StarRating = \\\"75\\\"\\n             o.ReleaseDate = \\\"[&#x3C;mm/dd/yyyy]\\\"\\n             o.Length = 5400\\n             o.Actors = []\\n             o.Actors.Push(\\\"[Actor1]\\\")\\n             o.Actors.Push(\\\"[Actor2]\\\")\\n             o.Actors.Push(\\\"[Actor3]\\\")\\n             o.Director = \\\"[Director]\\\"\\n             list.Push(o)\\n         end for\\n         grid.SetContentList(j, list)\\n     end for\\n     grid.Show()\\n     while true\\n         msg = wait(0, port)\\n         if type(msg) = \\\"roGridScreenEvent\\\" then\\n             if msg.isScreenClosed() then\\n                 return -1\\n             elseif msg.isListItemFocused()\\n                 print \\\"Focused msg: \\\";msg.GetMessage();\\\"row: \\\";msg.GetIndex();\\n                 print \\\" col: \\\";msg.GetData()\\n             elseif msg.isListItemSelected()\\n                 print \\\"Selected msg: \\\";msg.GetMessage();\\\"row: \\\";msg.GetIndex();\\n                 print \\\" col: \\\";msg.GetData()\\n             endif\\n         endif\\n     end while\\nEnd Function\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgridscreen.md\\\" title=\\\"ifGridScreen\\\">ifGridScreen</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rogridscreenevent.md\\\" title=\\\"roGridScreenEvent\\\">roGridScreenEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rohdmistatus.md":"{\n  \"content\": \"<h1 id=\\\"rohdmistatus\\\">roHdmiStatus</h1>\\n<p>The HDMI status component provides an interface to the current HDMI operational status.</p>\\n<p>This component allows you to query the status of the HDMI connection for the device through the ifHdmiStatus interface functions.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhdmistatus.md\\\" title=\\\"ifHdmiStatus\\\">ifHdmiStatus</a>                  </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>              </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rohmac.md":"{\n  \"content\": \"<h1 id=\\\"rohmac\\\">roHMAC</h1>\\n<p>The HMAC component provides an interface to the OpenSSL HMAC functions. These functions generate a Message Authentication Code (MAC) based on a key, in such a way that no one without the key could plausibly generate the MAC. HMAC uses a digest (hash) algorithm to generate the MAC.</p>\\n<blockquote>\\n<p>For additional information on the OpenSSL HMAC functions, please see: <a href=\\\"http://www.openssl.org/docs/crypto/hmac.html\\\">http://www.openssl.org/docs/crypto/hmac.html</a></p>\\n</blockquote>\\n<p><strong>Supported Digest Algorithms</strong></p>\\n<p>The supported digest algorithms are the same as those supported by <a href=\\\"/docs/references/brightscript/components/roevpdigest.md\\\" title=\\\"roEVPDigest\\\">roEVPDigest</a>.</p>\\n<p><strong>Example</strong></p>\\n<pre><code>hmac = CreateObject(\\\"roHMAC\\\")\\nsignature_key = CreateObject(\\\"roByteArray\\\")\\nsignature_key.fromAsciiString(getKey())\\nIf hmac.setup(\\\"sha1\\\", signature_key) = 0\\n    message = CreateObject(\\\"roByteArray\\\")\\n    message.fromAsciiString(getMessage())\\n    result = hmac.process(message)\\n    print result.toBase64String()\\nEnd If\\n\\n\\nhmac = CreateObject(\\\"roHMAC\\\")\\nsignature_key = CreateObject(\\\"roByteArray\\\")\\nsignature_key.fromAsciiString(getKey())\\nIf hmac.setup(\\\"sha1\\\", signature_key) = 0\\n    message1 = CreateObject(\\\"roByteArray\\\")\\n    message1.fromAsciiString(getMessage1())\\n    hmac.update(message1)\\n    message2 = CreateObject(\\\"roByteArray\\\")\\n    message2.fromAsciiString(getMessage2())\\n    hmac.update(message2)\\n    result = hmac.final()\\n    print result.toBase64String()\\nEnd If\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhmac.md\\\" title=\\\"ifHMAC\\\">ifHMAC</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rohttpagent.md":"{\n  \"content\": \"<h1 id=\\\"rohttpagent\\\">roHttpAgent</h1>\\n<p>All SceneGraph nodes can use the roHttpAgent component to support cookies, custom HTTP headers, and support secure HTTP file transfer protocols, such as passing certificates to the server as part of a URL transfer. An roHttpAgent component object is created by default for all SceneGraph nodes for this purpose. The roHttpAgent object supports the <a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a> interface used by many BrightScript components to allow secure HTTP file transfer protocols. Child nodes of a SceneGraph node automatically inherit the parent roHttpAgent object, unless a new roHttpAgent object is created, or an existing roHttpAgent is set for a child node. There are two roSGNode <a href=\\\"/docs/references/brightscript/interfaces/ifsgnodehttpagentaccess.md\\\" title=\\\"ifSGNodeHttpAgentAccess\\\">ifSGNodeHttpAgentAccess</a> interface methods that allow a specific roHttpAgent object to be selected and set for a specific SceneGraph node.</p>\\n<p>An roHttpAgent object is created automatically for all SceneGraph nodes, or can be created with no parameters:</p>\\n<p><code>CreateObject(\\\"roHttpAgent\\\")</code></p>\\n<blockquote>\\n<p>SceneGraph Audio and Video nodes always create a new roHttpAgent object and do not share it, and can use a different mechanism for HTTPS and cookie support, that involves setting certificates and cookies as Content Meta-Data attributes for the node ContentNode node.</p>\\n</blockquote>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roimagecanvas.md":"{\n  \"content\": \"<h1 id=\\\"roimagecanvas\\\">roImageCanvas</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roImageCanvas component provides an interface to render graphic elements at specific spots on the screen.</p>\\n<p>Although it is not intended to be a full-fledged graphics component for high-performance gaming, it does provide a simple interface for building custom animations out of arrays of images displayed on the screen.</p>\\n<p>An item (graphical element) may be one of three types: image, text, or colored rectangle. The item type is determined by the <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-data\\\">Content Meta-data</a> fields set on the item.</p>\\n<h4 id=\\\"image\\\">Image</h4>\\n<p>If the URL attribute is set, the item is displayed as an image.</p>\\n<p><strong>Attributes (see <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">Content Meta-Data</a>):</strong></p>\\n<ul>\\n<li>URL</li>\\n<li>CompositionMode</li>\\n<li>SourceRect</li>\\n<li>TargetRect</li>\\n<li>TargetTranslation</li>\\n<li>TargetRotation</li>\\n</ul>\\n<h4 id=\\\"text\\\">Text</h4>\\n<p>If the Text attribute is set, the item is displayed as text.</p>\\n<p><strong>Attributes (see <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">Content Meta-Data</a>):</strong></p>\\n<ul>\\n<li>Text</li>\\n<li>TextAttrs { Color, Font, HAlign, VAlign, Direction }</li>\\n<li>TargetRect</li>\\n</ul>\\n<h4 id=\\\"rectangle\\\">Rectangle</h4>\\n<p>If the Color attribute is set, the item is displayed as a filled rectangle.</p>\\n<p><strong>Attributes (see <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">Content Meta-data</a>):</strong></p>\\n<ul>\\n<li>Color</li>\\n<li>TargetRect</li>\\n</ul>\\n<p><strong>Example: Displays two images and some text on the screen</strong></p>\\n<pre><code>Sub showImageCanvas()\\n    canvasItems = [\\n        { \\n            url:\\\"http://192.168.1.23/boardwalk.jpg\\\"\\n            TargetRect:{x:100,y:100,w:400,h:300}\\n        },\\n        {  \\n            url:\\\"http://192.168.1.23/walking.jpg\\\"\\n            TargetRect:{x:500,y:400,w:400,h:300}\\n        },\\n        { \\n            Text:\\\"Hello ImageCanvas\\\"\\n            TextAttrs:{Color:\\\"#FFCCCCCC\\\", Font:\\\"Medium\\\",\\n            HAlign:\\\"HCenter\\\", VAlign:\\\"VCenter\\\",\\n            Direction:\\\"LeftToRight\\\"}\\n            TargetRect:{x:390,y:357,w:500,h:60}\\n        }\\n    ]\\n\\n   canvas = CreateObject(\\\"roImageCanvas\\\")\\n   port = CreateObject(\\\"roMessagePort\\\")\\n   canvas.SetMessagePort(port)\\n   'Set opaque background\\n   canvas.SetLayer(0, {Color:\\\"#FF000000\\\", CompositionMode:\\\"Source\\\"})\\n   canvas.SetRequireAllImagesToDraw(true)\\n   canvas.SetLayer(1, canvasItems)\\n   canvas.Show()\\n   while(true)\\n       msg = wait(0,port)\\n       if type(msg) = \\\"roImageCanvasEvent\\\" then\\n           if (msg.isRemoteKeyPressed()) then\\n               i = msg.GetIndex()\\n               print \\\"Key Pressed - \\\" ; msg.GetIndex()\\n               if (i = 2) then\\n                   ' Up - Close the screen.\\n                   canvas.close()\\n               end if\\n           else if (msg.isScreenClosed()) then\\n               print \\\"Closed\\\"\\n               return\\n           end if\\n       end if\\n   end while\\nEnd Sub\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifimagecanvas.md\\\" title=\\\"ifImageCanvas\\\">ifImageCanvas</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/roimagecanvasevent.md\\\" title=\\\"roImageCanvasEvent\\\">roImageCanvasEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roimagemetadata.md":"{\n  \"content\": \"<h1 id=\\\"roimagemetadata\\\">roImageMetadata</h1>\\n<p>The roImageMetadata component provides developers access to image file metadata included in many .jpg EXIF headers.</p>\\n<p>roImageMetadata currently only works with local file Urls. </p>\\n<p>This object is created without any arguments:</p>\\n<p><code>CreateObject(\\\"roImageMetadata\\\")</code></p>\\n<h4 id=\\\"exif-background\\\">EXIF Background</h4>\\n<p>Each EXIF tag represents one piece of metadata. Each tag is uniquely identified by a tag number and the IFD in which it was found. All the tags are grouped into a small set of IFDs (Image File Directory). The EXIF specification describes 5 IFDs:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Number</th>\\n<th>Name</th>\\n<th>Notes</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>0</td>\\n<td>image</td>\\n<td>Tags related to image structure and some additional basic information</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>thumbnail</td>\\n<td>Tags related to the thumbnail image structure</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>exif</td>\\n<td>Tags related to non-image structure data. I know this is an odd name. Usually stuff like ApertureValue that a digital camera would write</td>\\n</tr>\\n<tr>\\n<td>3</td>\\n<td>gps</td>\\n<td>Tags related to GPS</td>\\n</tr>\\n<tr>\\n<td>4</td>\\n<td>interoperability</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<p>The associative array returned by GetRawExif() function on the roImageMetadata component is organized as a tree where the first level consists of the IFDs, the second level is the tag name, and the third (leaf) level is tag associative array. </p>\\n<p>Each tag associative array contains the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Number</th>\\n<th>Name</th>\\n<th>Notes</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Tag</td>\\n<td>Integer</td>\\n<td>The tag number</td>\\n</tr>\\n<tr>\\n<td>Value</td>\\n<td>String</td>\\n<td>This is a string representation of the data regardless of the underlying data type</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>Tag values can be one of several types (string, bytes, rational, enum, etc.) We are using a that converts most values to a string. In the future or time permitting, we may add more values to the tag aa to give access to raw bytes. </p>\\n<p>The best way to illustrate how the EXIF data is accessed is through some concrete examples using the data in the reference section below. Assume that the associative array aa contains the results of the GetRawExif() function.</p>\\n<ul>\\n<li>To get the camera model: aa.image.model.value</li>\\n<li>To get the gps latitude: aa.gps.GPSLatitude.value</li>\\n</ul>\\n<h4 id=\\\"reference\\\">Reference</h4>\\n<p>For reference here are all the fields from an image taken from my camera (with the addition of GPS attributes I added using Picasa). </p>\\n<p>The format is IFD#, Tag#[Tag Name], Data Format, Value. The Value is a string representation of data. </p>\\n<pre><code>0, 272[ Model], ASCII,Canon PowerShot SD700 IS\\n0, 274[ Orientation], Short,top - left\\n0, 283[ YResolution], Rational,180.00\\n0, 296[ ResolutionUnit], Short,Inch\\n0, 305[ Software], ASCII,Picasa 3.0\\n0, 306[ DateTime], ASCII,2007:08:14 10:06:48\\n0, 531[ YCbCrPositioning], Short,centered\\n0, 282[ XResolution], Rational,72.00\\n1, 259[ Compression], Short,JPEG compression\\n1, 282[ XResolution], Rational,180.00\\n1, 283[ YResolution], Rational,180.00\\n1, 296[ ResolutionUnit], Short,Inch\\n2,33434[ ExposureTime], Rational,1/320 sec.\\n2,33437[ FNumber], Rational,f/2.8\\n2,36864[ ExifVersion], Undefined,Exif Version 2.2\\n2,36867[ DateTimeOriginal], ASCII,2007:08:14 10:06:48\\n2,36868[ DateTimeDigitized], ASCII,2007:08:14 10:06:48\\n2,37121[ ComponentsConfiguration], Undefined,Y Cb Cr -\\n2,37122[ CompressedBitsPerPixel], Rational,5.00\\n2,37377[ ShutterSpeedValue], SRational,8.31 EV (1/317 sec.)\\n2,37378[ ApertureValue], Rational,2.97 EV (f/2.8)\\n2,37380[ ExposureBiasValue], SRational,0.00 EV\\n2,37381[ MaxApertureValue], Rational,2.97 EV (f/2.8)\\n2,37383[ MeteringMode], Short,Pattern\\n2,37385[ Flash], Short,Flash did not fire, auto mode\\n2,37386[ FocalLength], Rational,5.8 mm\\n2,37500[ MakerNote], Undefined,1838 bytes undefined data\\n2,37510[ UserComment], Undefined,\\n2,40960[ FlashPixVersion], Undefined,FlashPix Version 1.0\\n2,40961[ ColorSpace], Short,sRGB\\n2,40962[ PixelXDimension], Short,2816\\n2,40963[ PixelYDimension], Short,2112\\n2,41486[ FocalPlaneXResolution], Rational,12515.56\\n2,41487[ FocalPlaneYResolution], Rational,12497.04\\n2,41488[ FocalPlaneResolutionUnit], Short,Inch\\n2,41495[ SensingMethod], Short,One-chip color area sensor\\n2,41728[ FileSource], Undefined,DSC\\n2,41985[ CustomRendered], Short,Normal process\\n2,41986[ ExposureMode], Short,Auto exposure\\n2,41987[ WhiteBalance], Short,Auto white balance\\n2,41988[ DigitalZoomRatio], Rational,1.00\\n2,41990[ SceneCaptureType], Short,Standard\\n2,42016[ ImageUniqueID], ASCII,ba6ad9a9d88ffd9576ea6155afa6c6ef\\n3, 0[ GPSVersionID], Byte,2.2.0.0\\n3, 1[ GPSLatitudeRef], ASCII,N\\n3, 2[ GPSLatitude], Rational,40.00, 12.00, 44.79\\n3, 3[ GPSLongitudeRef], ASCII,W\\n3, 4[ GPSLongitude], Rational,75.00, 37.00, 47.58\\n3, 5[ GPSAltitudeRef], Byte,Sea level\\n4, 1[ InteroperabilityIndex], ASCII,R98\\n4, 2[ InteroperabilityVersion], Undefined,0100\\n4, 4097[ RelatedImageWidth], Short,2816\\n4, 4098[ RelatedImageLength], Short,2112\\n</code></pre>\\n<p><strong>Example</strong></p>\\n<pre><code>REM printAA() is from generalUtils.brs in our sample apps\\nREM and used to print an associative Array\\nSub SaveExifImage(filename As String)\\n    meta = CreateObject(\\\"roImageMetadata\\\")\\n    meta.SetUrl(filename)\\n    print \\\"------------- GetRawExif() ----------------------\\\"\\n    allexif = meta.GetRawExif()\\n    printAA(allexif)\\n    print \\\"------------- GetMetadata() ---------------------\\\"\\n    simple = meta.GetMetadata()\\n    printAA(simple)\\n    print \\\"------------- GetRawExifTag() -------------------\\\"\\n    rawexiftag = meta.GetRawExifTag(2,36868)\\n    printAA(rawexiftag)\\n    print \\\"------------- GetThumbnail() --------------------\\\"\\n    thumbnail = meta.GetThumbnail()\\n    if (thumbnail &#x3C;> invalid) then\\n        if (thumbnail.bytes = invalid) then\\n            return\\n        end if\\n        imgtype = thumbnail.type\\n        image_ext=\\\"\\\"\\n        if (imgtype = \\\"image/jpeg\\\" or imgtype = \\\"jpg\\\") then\\n            image_ext = \\\"jpg\\\"\\n        else if (imgtype = \\\"image/png\\\" or imgtype = \\\"png\\\") then\\n            image_ext = \\\"png\\\"\\n        else\\n            image_ext = \\\"jpg\\\"\\n        end if\\n        tmp_img = \\\"tmp:/TmpExifImage\\\" + \\\".\\\" + image_ext\\n        if (tmp_img &#x3C;> invalid) then\\n            DeleteFile(tmp_img)\\n        end if\\n        thumbnail.bytes.Writefile(tmp_img)\\n    end if\\nEnd Sub\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifimagemetadata.md\\\" title=\\\"ifImageMetadata\\\">ifImageMetadata</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roinput.md":"{\n  \"content\": \"<h1 id=\\\"roinput\\\">roInput</h1>\\n<p>An roInput object can be used to receive events sent from a network client using the External Control Protocol (ECP), as described in <a href=\\\"/docs/developer-program/debugging/external-control-api.md\\\" title=\\\"External Control API\\\">External Control API</a>.</p>\\n<blockquote>\\n<p>The <a href=\\\"/docs/developer-program/getting-started/architecture/channel-manifest.md#launch-requirement-attributes\\\">supports_input_launch manifest flag</a> must be set for channels to accept deep linking parameters when already running. This flag enables deep linking into content without relaunching the channel. See the <a href=\\\"https://github.com/rokudev/deep-Linking-samples\\\">Deep Linking sample channel</a> for how to use roInput to handle deep links into content while the channel is already running.</p>\\n</blockquote>\\n<p>Refer to <a href=\\\"/docs/developer-program/debugging/external-control-api.md#external-control-service-commands\\\" title=\\\"External Control Service Commands\\\">External Control Service Commands</a> for information about the ECP input command.</p>\\n<p>This object is created without any arguments:</p>\\n<p><code>CreateObject(\\\"roInput\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<p>The following prints information received from an external device in JSON format. If the external device sends the following input command:</p>\\n<pre><code>curl -d '' '&#x3C;roku_target_device>:8060/input?my_event=My%20Test&#x26;x=100&#x26;y=200&#x26;action=start'\\n</code></pre>\\n<p>The following will be printed:</p>\\n<pre><code>{\\\"action\\\":\\\"start\\\",\\\"my_event\\\":\\\"My Test\\\",\\\"x\\\":\\\"100\\\",\\\"y\\\":\\\"200\\\"}\\n</code></pre>\\n<p><strong>roInput Example</strong></p>\\n<pre><code>msgPort = CreateObject(\\\"roMessagePort\\\")\\n\\ninput = CreateObject(\\\"roInput\\\")\\ninput.SetMessagePort(msgPort)\\n\\nprint \\\"Waiting for messages...\\\"\\nwhile true\\n  msg = wait(0, msgPort)\\n  if type(msg) = \\\"roInputEvent\\\"\\n    if msg.IsInput()\\n      info = msg.GetInfo()\\n      print \\\"Received input: \\\"; FormatJSON(info)\\n    end if\\n  end if\\nend while\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifinput.md\\\" title=\\\"ifInput\\\">ifInput</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/roinputevent.md\\\" title=\\\"roInputEvent\\\">roInputEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roint.md":"{\n  \"content\": \"<h1 id=\\\"roint\\\">roInt</h1>\\n<p>roInt is the object equivalent for intrinsic type Integer.</p>\\n<p>This is useful in the following situations:</p>\\n<ul>\\n<li>When an object is needed, instead of an intrinsic value. For example, \\\"roList\\\" maintains a list of objects. If an Integer is added to roList, it will be automatically wrapped in an roInt by the language interpreter. When a function that expects a BrightScript Component as a parameter is passed an int, BrightScript automatically creates the equivalent BrightScript Component.</li>\\n<li>If any object exposes the ifInt interface, that object can be used in any expression that expects an intrinsic value. For example, in this way an roTouchEvent can be used as an integer whose value is the userid of the roTouchEvent.</li>\\n</ul>\\n<blockquote>\\n<p>If o is an roInt, then the following statements have the following effects</p>\\n<p>print o ' prints o.GetInt()</p>\\n<p>i%=o ' assigns the integer i% the value of o.GetInt()</p>\\n<p>k=o 'presumably k is dynamic typed, so it becomes another reference to the roInt o</p>\\n<p>o=5 'this is NOT the same as o.SetInt(5). Instead it releases o, and 'changes the type of o to Integer (o is dynamically typed). And assigns it to 5.</p>\\n</blockquote>\\n<p><strong>Example</strong></p>\\n<pre><code>BrightScript> o=CreateObject(\\\"roInt\\\")\\nBrightScript> o.SetInt(555)\\nBrightScript> print o\\n555\\nBrightScript> print o.GetInt()\\n555\\nBrightScript> print o-55\\n500\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifint.md\\\" title=\\\"ifInt\\\">ifInt</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifintops.md\\\" title=\\\"ifIntOps\\\">ifIntOps</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roinvalid.md":"{\n  \"content\": \"<h1 id=\\\"roinvalid\\\">roInvalid</h1>\\n<p>roInvalid is the object equivalent for intrinsic type 'Invalid'.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rokeyboardscreen.md":"{\n  \"content\": \"<h1 id=\\\"rokeyboardscreen\\\">roKeyboardScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Keyboard Screen is designed to allow the user to enter an alpha-numeric string for searching, username/password registration or other purposes.</p>\\n<p>This component is generally used as part of a sequence of screens and the results are displayed on the subsequent screen in the sequence. In the case of a search screen, results are displayed on the roPosterScreen and categories may be used to segregate TV and Movie results.</p>\\n<p><strong>Diagram: roKeyboardScreen</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roKeyboardScreenImage1.png\\\" alt=\\\"**Diagram: roKeyboardScreen**\\\" title=\\\"roKeyboardScreenImage1\\\"></p>\\n<p><strong>Example</strong></p>\\n<pre><code>Sub Main()\\n     screen = CreateObject(\\\"roKeyboardScreen\\\")\\n     port = CreateObject(\\\"roMessagePort\\\")\\n     screen.SetMessagePort(port)\\n     screen.SetTitle(\\\"Search Screen\\\")\\n     screen.SetText(\\\"default\\\")\\n     screen.SetDisplayText(\\\"enter text to search\\\")\\n     screen.SetMaxLength(8)\\n     screen.AddButton(1, \\\"finished\\\")\\n     screen.AddButton(2, \\\"back\\\")\\n     screen.Show()\\n\\n     while true\\n         msg = wait(0, screen.GetMessagePort())\\n         print \\\"message received\\\"\\n         if type(msg) = \\\"roKeyboardScreenEvent\\\"\\n             if msg.isScreenClosed()\\n                 return\\n             else if msg.isButtonPressed() then\\n                 print \\\"Evt:\\\"; msg.GetMessage ();\\\" idx:\\\"; msg.GetIndex()\\n                 if msg.GetIndex() = 1\\n                     searchText = screen.GetText()\\n                     print \\\"search text: \\\"; searchText\\n                     return\\n                 endif\\n             endif\\n         endif\\n     end while\\nEnd Sub\\n</code></pre>\\n<p><strong>Image: roKeyboardScreen example results</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roKeyboardScreenImage2.png\\\" alt=\\\"Image: roKeyboardScreen example results\\\" title=\\\"roKeyboardScreenImage2\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifkeyboardscreen.md\\\" title=\\\"ifKeyboardScreen\\\">ifKeyboardScreen</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rokeyboardscreenevent.md\\\" title=\\\"roKeyboardScreenEvent\\\">roKeyboardScreenEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rolist.md":"{\n  \"content\": \"<h1 id=\\\"rolist\\\">roList</h1>\\n<p>The list object implements the interfaces: ifList, ifArray, ifEnum and therefore can behave like an array that can dynamically add members. The array operator [ ] can be used to access any element in the ordered list.</p>\\n<p><strong>Example</strong></p>\\n<p>Implementation:</p>\\n<pre><code>list = CreateObject(\\\"roList\\\")\\nlist.AddTail(\\\"a\\\")\\nlist.AddTail(\\\"b\\\")\\nlist.AddTail(\\\"c\\\")\\nlist.AddTail(\\\"d\\\")\\nlist.ResetIndex()\\nx= list.GetIndex()\\nwhile x &#x3C;> invalid\\n    print x\\n    x = list.GetIndex()\\nend while\\n\\n\\nprint list[2]\\n</code></pre>\\n<p>Output:</p>\\n<pre><code>a\\nb\\nc\\nd\\nc \\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported Interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iflist.md\\\" title=\\\"ifList\\\">ifList</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarray.md\\\" title=\\\"ifArray\\\">ifArray</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarrayget.md\\\" title=\\\"ifArrayGet\\\">ifArrayGet</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifarrayset.md\\\" title=\\\"ifArraySet\\\">ifArraySet</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifenum.md\\\" title=\\\"ifEnum\\\">ifEnum</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iflisttoarray.md\\\" title=\\\"ifListToArray\\\">ifListToArray</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rolistscreen.md":"{\n  \"content\": \"<h1 id=\\\"rolistscreen\\\">roListScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The List Screen provides a graphical display of content in a vertical list within a single screen.</p>\\n<p>Users can browse the content by scrolling the text list vertically. The vertical list is displayed on the left side of the screen and the poster is displayed on the right side of the screen.  As the user scrolls through the content, the poster is updated with the poster art of the focused list item. There is an optional short description text below the poster that can display the description of the focused item and gets updated as the user scrolls the list.                           </p>\\n<p>The poster art uses the following art sizes:</p>\\n<pre><code>         Artwork sizes: SD=136x124; HD=250x250\\n</code></pre>\\n<p> roListScreen has a default dark highlight for the focused list item. The highlight can be customized by including a .png file with the following dimensions:</p>\\n<pre><code>         Highlight sizes: SD=304x38; HD=511x54\\n</code></pre>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roListScreen.png\\\" alt=\\\"List Screen Draft\\\" title=\\\"roListScreen\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iflistscreen.md\\\" title=\\\"ifListScreen\\\">ifListScreen</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rolistscreenevent.md\\\" title=\\\"roListScreenEvent\\\">roListScreenEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rolocalization.md":"{\n  \"content\": \"<h1 id=\\\"rolocalization\\\">roLocalization</h1>\\n<p>The roLocalization object provides functions to assist in localization. This object provides functions to assist in localization.</p>\\n<p>It is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roLocalization\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>loc = CreateObject(\\\"roLocalization\\\")\\nimage = loc.GetLocalizedAsset(\\\"images\\\", \\\"splash.png\\\")\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iflocalization.md\\\" title=\\\"ifLocalization\\\">ifLocalization</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rolonginteger.md":"{\n  \"content\": \"<h1 id=\\\"rolonginteger\\\">roLongInteger</h1>\\n<p>roLongInteger is the object name corresponding to the intrinsic LongInteger object.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iflongint.md\\\" title=\\\"ifLongInt\\\">ifLongInt</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/romessagedialog.md":"{\n  \"content\": \"<h1 id=\\\"romessagedialog\\\">roMessageDialog</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Message Dialog displays a formatted, multi-line text message to the user. The dialog may optionally be displayed with a busy animation to indicate progress on a long running operation. The dialog will automatically handle formatting of text and resize to fit. It may also display buttons to get user acknowledgment or a selection choice.</p>\\n<p>The following example shows an roMessageDialog with a single done button. When the title, text and button are added, the dialog automatically formats and resizes the dialog as needed for display when Show() is called.</p>\\n<p><strong>Diagram: roMessageDialog</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roMessageDialog.png\\\" alt=\\\"Diagram: roMessageDialog\\\" title=\\\"roMessageDialog\\\"></p>\\n<p><strong>Example</strong></p>\\n<p>The following code example creates a message dialog and displays it to the user. Note that dialogs are not full screen and that the previous screen is dimmed and displays in the background. When the user presses the message dialog button, the dialog is dismissed and the previous screen comes to the foreground. Since dialog.EnableBackButton(true) is also called, the message dialog is dismissed when the remote control's back button is pressed as well.  You can of course add additional buttons to your message dialogs that do things other than dismiss the dialog. You would simply need to implement button specific event handling code for these cases in the dlgMsg.isButtonPressed() code block.</p>\\n<pre><code>Function ShowMessageDialog() As Void\\n    port = CreateObject(\\\"roMessagePort\\\")\\n    dialog = CreateObject(\\\"roMessageDialog\\\")\\n    dialog.SetMessagePort(port)\\n    dialog.SetTitle(\\\"[Message dialog title]\\\")\\n    dialog.SetText(\\\"[Message dialog text............]\\\")\\n\\n    dialog.AddButton(1, \\\"[button text]\\\")\\n    dialog.EnableBackButton(true)\\n    dialog.Show()\\n    While True\\n        dlgMsg = wait(0, dialog.GetMessagePort())\\n        If type(dlgMsg) = \\\"roMessageDialogEvent\\\"\\n            if dlgMsg.isButtonPressed()\\n                if dlgMsg.GetIndex() = 1\\n                    exit while\\n                end if\\n            else if dlgMsg.isScreenClosed()\\n                exit while\\n            end if\\n        end if\\n    end while\\nEnd Function\\n</code></pre>\\n<p><strong>Image: roMessageDialog example results</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roMessageDialogimage2.png\\\" alt=\\\"roMessageDialog example results\\\" title=\\\"roMessageDialogimage2\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifmessagedialog.md\\\" title=\\\"ifMessageDialog\\\">ifMessageDialog</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort \\\">ifGetMessagePort </a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/romessagedialogevent.md\\\" title=\\\"roMessageDialogEvent\\\">roMessageDialogEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/romessageport.md":"{\n  \"content\": \"<h1 id=\\\"romessageport\\\">roMessagePort</h1>\\n<p>A Message Port is the place messages (<a href=\\\"/docs/developer-program/core-concepts/event-loops.md\\\">events</a>) are sent. </p>\\n<p>When using BrightScript, you would not call these functions directly. Instead, use the \\\"Wait\\\" BrightScript statement.  </p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roMessagePort\\\")</code></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifmessageport.md\\\" title=\\\"ifMessagePort\\\">ifMessagePort</a> </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/romicrophone.md":"{\n  \"content\": \"<h1 id=\\\"romicrophone\\\">roMicrophone</h1>\\n<p>The roMicrophone API allows channel applications to receive audio data from the user’s microphone-supported remote control device or mobile phone. When a user initiates recording on their remote control device or mobile phone (via the Roku Mobile App) for the first time within the application, the application will request the user’s permission for the application to access the microphone by displaying a UI dialog box.</p>\\n<p>The application will only receive microphone access if the permission is granted by the user.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/microphone-access.jpg\\\" alt=\\\"microphone-access\\\" title=\\\"microphone-access\\\"></p>\\n<p>After the permission is granted, whenever a user activates the microphone, the application will display a notice informing the user that the microphone is currently being used by the application.</p>\\n<p>From the settings menu (Settings > Privacy > Microphone), the user can revoke microphone permissions from individual applications, at which time the particular application will not be able to access the microphone unless the user re-enables microphone permissions.</p>\\n<p>From the settings menu, the user may also:</p>\\n<ul>\\n<li>(a) enable universal microphone access permissions for all applications (thereby eliminating the need to request microphone permission on an application by application basis), and</li>\\n<li>(b) prohibit all applications from accessing the microphone.</li>\\n</ul>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/microphone-setting.jpg\\\" alt=\\\"microphone-setting\\\" title=\\\"microphone-setting\\\"></p>\\n<p>When integrating the roMicrophone API, you acknowledge and agree to the following:</p>\\n<ul>\\n<li>(i) that you will notify your users of your collection, use, and disclosure of any voice recordings or other derived data that you receive through the roMicrophone API;</li>\\n<li>(ii) you will not modify, circumvent, obscure, or otherwise diminish the notices provided by the roMicrophone API to users when they activate or enable microphone recording from their remote control device or mobile phone;</li>\\n<li>(iii) you will not collect any information from, or otherwise activate, the microphone on any remote control device or mobile phone using the roMicrophone API feature without receiving the requisite permissions from the user;</li>\\n<li>(iv) you have and will maintain a legally adequate privacy policy;</li>\\n<li>(v) you have and will maintain all necessary rights and consents from users to use the roMicrophone API features; and</li>\\n<li>(vi) your use of the roMicrophone API features will comply with all applicable laws, rules, and regulations.</li>\\n</ul>\\n<p>YOU FURTHER AGREE YOU WILL NOT USE THE roMicrophone API AND FEATURES IN CONNECTION WITH CONTENT OR CHANNELS DIRECTED TOWARD CHILDREN OR IN CONNECTION WITH USERS KNOWN TO BE CHILDREN. If Roku discovers or determines that you are using the roMicrophone API and features in connection with content or channels directed toward children or with users known to be children, Roku reserves the right to disable or otherwise limit your access to the roMicrophone API feature and related functionality.</p>\\n<p>YOU MAY NOT ENABLE THE roMicrophone API FEATURES IF YOU DO NOT AGREE TO ABOVE. PLEASE CONTACT ROKU FOR FURTHER INFORMATION.\\nImplementation</p>\\n<p>The application should display a focusable button or indicator in the UI that the user selects by pressing and holding the OK button. In response to the OK press event, the application can call:</p>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifmicrophone.md\\\" title=\\\"StartRecording\\\">StartRecording()</a> - to receive streamed audio data from the microphone asynchronously or</li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifmicrophone.md\\\" title=\\\"RecordToFile()\\\">RecordToFile()</a> - to have the audio data directly captured to a WAV format output file.</li>\\n</ul>\\n<blockquote>\\n<p>Roku OS will display a HUD to let the user initially consent to be recorded and to subsequently be informed when the microphone is being used. Recording is performed as long as the user holds down the OK button, or until a limit is reached or if an error should occur.</p>\\n</blockquote>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifmicrophone.md\\\" title=\\\"ifMicrophone\\\">ifMicrophone</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/romicrophoneevent.md\\\" title=\\\"roMicrophoneEvent\\\">roMicrophoneEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roonelinedialog.md":"{\n  \"content\": \"<h1 id=\\\"roonelinedialog\\\">roOneLineDialog</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The One Line Dialog is a special type of dialog optimized for single line text.</p>\\n<p>Unlike the message dialog (<a href=\\\"/docs/references/brightscript/components/roMessageDialog.md\\\" title=\\\"roMessageDialog\\\">roMessageDialog</a>) which displays formatted multi-line messages, roOneLineDialog displays a single line of text centered for the user.</p>\\n<p>This dialog is optimized for rendering of single-line text strings. It is generally used for displaying text to indicate that an operation is in progress. When the operation completes, the dialog is destroyed and the message dialog disappears.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifonelinedialog.md\\\" title=\\\"ifOneLineDialog\\\">ifOneLineDialog</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>   </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifGetMessagePort.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>   </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/roonelinedialogevent.md\\\" title=\\\"roOneLineDialogEvent\\\">roOneLineDialogEvent</a>  </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roparagraphscreen.md":"{\n  \"content\": \"<h1 id=\\\"roparagraphscreen\\\">roParagraphScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Paragraph Screen provides a way to display text and selection choices to the user.</p>\\n<p>This type of screen is frequently used for implementing wizard functionality to guide the user through a specific task. The caller may specify header text which is displayed at the top of the screen and one or more paragraphs of text on the screen. In addition, one or more buttons may be added to the screen to get user input or allow navigation. The screen is designed to automatically format the text, headings and buttons and create the photo-fit for them on screen. Some care must be taken to not provide too much text or clipping may occur.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roParagraphScreenImage1.png\\\" alt=\\\"roParagraphScreen image\\\" title=\\\"roParagraphScreenImage1\\\"></p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roParagraphScreen\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>Function ShowParagraphScreen() As Void\\n    port = CreateObject(\\\"roMessagePort\\\")\\n    screen = CreateObject(\\\"roParagraphScreen\\\")\\n    screen.SetMessagePort(port)\\n    screen.SetTitle(\\\"[Screen Title]\\\")\\n    screen.AddHeaderText(\\\"[Header Text]\\\")\\n    screen.AddParagraph(\\\"[Paragraph text 1 - Text in the paragraph screen is justified to the right and left edges]\\\")\\n    screen.AddParagraph(\\\"[Paragraph text 2 - Multiple paragraphs may be added to the screen by simply making additional calls]\\\")\\n    screen.AddButton(1, \\\"[button text 1]\\\")\\n    screen.AddButton(2, \\\"[button text 2]\\\")\\n    screen.Show()\\n    while true\\n        msg = wait(0, screen.GetMessagePort())\\n        if type(msg) = \\\" roParagraphScreenEvent\\\"\\n            exit while\\n        endif\\n    end while\\nEnd Function\\n</code></pre>\\n<p><strong>Image: roParagraphScreen example results</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roParagraphScreenImage2.png\\\" alt=\\\"Image: roParagraphScreen example results\\\" title=\\\"roParagraphScreenImage2\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifparagraphscreen.md\\\" title=\\\"ifParagraphScreen\\\">ifParagraphScreen</a>        </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>       </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>      </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/roparagraphscreenevent.md\\\" title=\\\"roParagraphScreenEvento\\\">roParagraphScreenEvent</a>     </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/ropath.md":"{\n  \"content\": \"<h1 id=\\\"ropath\\\">roPath</h1>\\n<p>The roPath component provides developers an easy way to create valid file system paths. </p>\\n<p>The roPath component is a convenience class that implements <a href=\\\"/docs/references/brightscript/interfaces/ifstring.md\\\" title=\\\"ifString\\\">ifString</a> while providing additional validation and path inspection functionality. See <a href=\\\"docs/developer-program/getting-started/architecture/file-system.md\\\" title=\\\"File System\\\">File System</a> for more information about valid path names.</p>\\n<p>This object is created with a string that represents the initial path:</p>\\n<p><code>CreateObject(\\\"roPath\\\", \\\"ext1:/vid\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>path = CreateObject(\\\"roPath\\\", filename)\\nparts = path.Split()\\nif parts.phy = \\\"tmp:\\\" then print \\\"this is a temp file\\\"\\nif parts.extension = \\\".bmp\\\" then print \\\"this is a bitmap file\\\"\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifpath.md\\\" title=\\\"ifPath\\\">ifPath</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifstring.md\\\" title=\\\"ifString\\\">ifString</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/ropinentrydialog.md":"{\n  \"content\": \"<h1 id=\\\"ropinentrydialog\\\">roPinEntryDialog</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Pin Entry Dialog is designed to allow the user to enter a numeric PIN for purchasing content.</p>\\n<p>Users establish a PIN on the partner's website for purchasing transactions. The roPinEntryDialog allows the script to present the user with a pop-up, modal dialog for PIN entry and then the script can subsequently call the API's to conclude the purchase transaction. When the last digit is entered, focus jumps to the first button.</p>\\n<p><strong>Image: roPinEntryDialog sample</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roPinEntryDialog.png\\\" alt=\\\"roPinEntryDialog\\\" title=\\\"roPinEntryDialog\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifpinentrydialog.md\\\">ifPinEntryDialog</a>              </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\">ifSetMessagePort</a>              </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\">ifGetMessagePort</a>              </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/ropinentrydialogevent.md\\\">roPinEntryDialogEvent</a>              </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roposterscreen.md":"{\n  \"content\": \"<h1 id=\\\"roposterscreen\\\">roPosterScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roPosterScreen\\\")</code></p>\\n<p>The Poster Screen provides a graphical display of poster art for content selection or can be used as a submenu to provide hierarchical structure to the application.</p>\\n<p>In some cases, applications may wish to present a flat single-level list of titles in a queue, but the Poster Screen can also be used at multiple levels in the application to provide hierarchical browsing. It also provides an optional \\\"filter banner\\\" for displaying categories representing filtered subsets of the data or categorized groups.</p>\\n<p>Each item in the poster screen is represented by an image (aka poster), so any type of item that can be visually represented by an image can be displayed in the poster screen. It is used to show lists of data to users and common patterns include content categories, movies, podcasts, and search results.</p>\\n<p>Just below the overhang is the filter banner. It allows a method of easily selecting or filtering content based on categories. The categories are set by the developer during screen initialization, and the script is notified when a new category is highlighted or selected. Based on the event notification, the script can set the desired content in the view. The filter banner is optional.</p>\\n<p><strong>Diagram: roPosterScreen (flat-category)</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roPosterScreenImage1.png\\\" alt=\\\"Diagram: roPosterScreen (flat-category)\\\" title=\\\"roPosterScreenImage1\\\"></p>\\n<p>ShortDescriptionLine1 from the content metadata. Generally the category title.</p>\\n<p>ShortDescriptionLine2 from the content metadata. Generally a description for the category.</p>\\n<p><strong>Diagram: roPosterScreen (arced-landscape)</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roPosterScreenImage2.png\\\" alt=\\\"Diagram: roPosterScreen (arced-landscape\\\" title=\\\"roPosterScreenImage2\\\"></p>\\n<p><strong>Diagram: roPosterScreen (arced-portrait)</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roPosterScreenImage3.png\\\" alt=\\\"Diagram: roPosterScreen (arced-portrait)\\\" title=\\\"roPosterScreenImage3\\\"></p>\\n<p><strong>Diagram: roPosterScreen (flat-episodic)</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roPosterScreenImage4.png\\\" alt=\\\"Diagram: roPosterScreen (flat-episodic)\\\" title=\\\"roPosterScreenImage4\\\"></p>\\n<p>TV content is often displayed as a series of episodes within a season. The flat-episodic screen type provides a standard way to display episodic content, such as a TV series.</p>\\n<p>There is also a flat-episodic-16x9-episodic screen type to display episodic content with 16x9 images.</p>\\n<p>The paragraph text allows the user to view the synopsis for the currently selected episode. As the user scrolls right/left to select a new episode, the paragraph text and the short description lines are updated to reflect the description of the highlighted episode</p>\\n<p>In order to see poster art in the side posters instead of episode numbers, please ensure that the SDPosterUrl and HDPosterUrl are defined for the content and that episodeNumber is not defined for that content. EpisodeNumber overrides the poster URL.</p>\\n<p><strong>Example</strong></p>\\n<pre><code>Function Main()\\n     port = CreateObject(\\\"roMessagePort\\\")\\n     poster = CreateObject(\\\"roPosterScreen\\\")\\n     poster.SetBreadcrumbText(\\\"[location1]\\\", \\\"[location2]\\\")\\n     poster.SetMessagePort(port)\\n     list = CreateObject(\\\"roArray\\\", 10, true)\\n     For i = 0 To 10\\n         o = CreateObject(\\\"roAssociativeArray\\\")\\n         o.ContentType = \\\"episode\\\"\\n         o.Title = \\\"[Title]\\\"\\n         o.ShortDescriptionLine1 = \\\"[ShortDescriptionLine1]\\\"\\n         o.ShortDescriptionLine2 = \\\"[ShortDescriptionLine2]\\\"\\n         o.Description = \\\"\\\"\\n         o.Description = \\\"[Description] \\\"\\n         o.Rating = \\\"NR\\\"\\n         o.StarRating = \\\"75\\\"\\n         o.ReleaseDate = \\\"[&#x3C;mm/dd/yyyy]\\\"\\n         o.Length = 5400\\n         o.Categories = []\\n         o.Categories.Push(\\\"[Category1]\\\")\\n         o.Categories.Push(\\\"[Category2]\\\")\\n         o.Categories.Push(\\\"[Category3]\\\")\\n         o.Actors = []\\n         o.Actors.Push(\\\"[Actor1]\\\")\\n         o.Actors.Push(\\\"[Actor2]\\\")\\n         o.Actors.Push(\\\"[Actor3]\\\")\\n         o.Director = \\\"[Director]\\\"\\n         list.Push(o)\\n     End For\\n     poster.SetContentList(list)\\n     poster.Show()\\n\\n     While True\\n         msg = wait(0, port)\\n         If msg.isScreenClosed() Then\\n             return -1\\n         ElseIf msg.isListItemSelected()\\n             print \\\"msg: \\\";msg.GetMessage();\\\"idx: \\\";msg.GetIndex()\\n         End If\\n     End While\\n End Function\\n</code></pre>\\n<p>The following screen is displayed when this code is executed:  </p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roPosterScreenImage5.png\\\" alt=\\\"Image: roPosterScreen example result\\\" title=\\\"roPosterScreenImage5\\\"></p>\\n<p><strong>Image: roPosterScreen example result</strong></p>\\n<p>Note that in this example, we did not set valid values for SDPosterUrl or HDPoster URL, so no artwork is displayed. We have also elected not to display the filter banner and did not call the SetListNames API, so no filter banner is displayed. The screen is fully functional in other respects and responds to user input, scrolls left/right and receives events as the poster selection changes.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifposterscreen.md\\\" title=\\\"ifPosterScreen\\\">ifPosterScreen</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/roposterscreenevent.md\\\" title=\\\"roPosterScreenEvent\\\">roPosterScreenEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roprogramguide.md":"{\n  \"content\": \"<h1 id=\\\"roprogramguide\\\">roProgramGuide</h1>\\n<p>Represents Electronic Program Guide (EPG) information from the tuner. </p>\\n<p>Some Roku devices incorporate a tuner giving access to broadcast TV and radio received over an antenna or cable. In addition to the video and audio data from the tuner, the Roku Player receives electronic program guide (EPG) data about the currently-broadcasting program, and the next few programs to be broadcast. The roProgramGuide object provides access to that guide data.</p>\\n<p>This object can be created with no parameters:</p>\\n<p><code>createObject(\\\"roProgramGuide\\\")</code></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported Interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifprogramguide.md\\\">ifProgramGuide</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roregex.md":"{\n  \"content\": \"<h1 id=\\\"roregex\\\">roRegex</h1>\\n<p>The roRegex component provides the powerful regular expression processing of the PCRE library to Brightscript strings.</p>\\n<blockquote>\\n<p>Please see the PCRE documentation (<a href=\\\"http://www.pcre.org/\\\">http://www.pcre.org/</a>) for documentation on the PCRE library used for regular expression matching.  See the <a href=\\\"http://perldoc.perl.org/perlre.html\\\">perlre documentation</a> for complete documentation of the possible regular expressions this library can parse and match. In general, most Perl compatible regular expressions are supported.</p>\\n</blockquote>\\n<p>This object is created with a string that represents the matching-pattern and a string to indicate flags that modify the behavior of the matching operation(s):</p>\\n<p><code>CreateObject(\\\"roRegex\\\", \\\"[a-z]+\\\", \\\"i\\\")</code></p>\\n<p>The match string (\\\"[a-z]+\\\" in the example above, which matches all lowercase letters) can include most Perl compatible regular expressions documented in the PCRE documentation (<a href=\\\"http://www.pcre.org/\\\">http://www.pcre.org/</a>).</p>\\n<p>Any combination of the following behavior flags (\\\"i\\\" in the example above which modifies to match upper and lowercase letters) is supported:</p>\\n<ul>\\n<li>\\\"i\\\" Case insensitive match</li>\\n<li>\\\"m\\\" Multiline mode. The start of line \\\"^\\\" and end of line \\\"$\\\" constructs match immediately following or before any newline in the subject string as well as the very start and end of the string. Normally, just the start and end of the string would match.</li>\\n<li>\\\"s\\\" Sets dot-all mode that includes newline in the \\\".*\\\" regular expression. This modifier is equivalent to Perl's /s modifier.</li>\\n<li>\\\"x\\\" Sets extended mode that ignores whitespace characters except when escaped or inside a character class. Characters between an unescaped # outside a character a character class and the next newline character, inclusive, are also ignored. This modifier is equivalent to Perl's /x modifier.</li>\\n</ul>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifregex.md\\\" title=\\\"ifRegex\\\">ifRegex</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roregion.md":"{\n  \"content\": \"<h1 id=\\\"roregion\\\">roRegion</h1>\\n<p>The roRegion component is used to represent a subsection of a bitmap.</p>\\n<p>The region is specified with an x,y, width, and height as well as a time field for use with animated sprites and a wrap field which causes the region to wrap during scrolling. The roRegion is a common parameter used by the drawing functions of <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a>. Wrap and Time are used by <a href=\\\"/docs/references/brightscript/components/roCompositor.md\\\" title=\\\"roCompositor\\\">roCompositor</a>. roRegion is also used to specify a pretranslation (x,y) for the draw, rotate, and scale operation. The pretranslation is normally used to specify the center of the region. The scaling operation is controlled by the scalemode specified in the region. </p>\\n<p>This object is created with parameters to initialize the x,y coordinates, width, height. If time and wrap are desired, use the SetTime() and SetWrap().</p>\\n<p><code>CreateObject(\\\"roRegion\\\", Object bitmap, Integer x, Integer y,Integer width, Integer height)</code></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifregion.md\\\" title=\\\"ifRegion\\\">ifRegion</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roregistry.md":"{\n  \"content\": \"<h1 id=\\\"roregistry\\\">roRegistry</h1>\\n<p>The Registry is an area of non-volatile storage where a small number of persistent settings can be stored.</p>\\n<p>The Registry provides a means for an application to write and read small amounts of data such as settings, scores, etc. The data persists even if the user exits the application and even if the player is rebooted.  Registry data is removed only when the application explicitly removes it, the user uninstalls the application, which remove the registry for the application, or the user performs a factory reset, which removes the registry for all applications.</p>\\n<p>Access to the registry is available through the roRegistry object. This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roRegistry\\\")</code></p>\\n<p>There is a separate registry for each <a href=\\\"/docs/developer-program/publishing/packaging-channels.md#step-3-run-the-genkey-utility-to-create-a-signing-key\\\" title=\\\"developer ID\\\">developer ID</a>. This allows multiple applications to use the registry without being able to read or modify the registry from other applications. If desired, a single registry can be shared across multiple applications by using the same developer ID to package the applications. This is the conventional way that an \\\"application suite\\\" with shared preferences and other shared information should work.  Each registry is divided into sections which are specified by the developer for organization and grouping of attributes. Methods in ifRegistry are provided to list the sections in the registry and to provide access to the data in each section. </p>\\n<blockquote>\\n<p>The maximum size of each zlib-compressed application registry is <strong>16K bytes</strong>. Channels should minimize the amount of data stored in the registry and the frequency in which they update it.</p>\\n<p>Use the <strong>ifRegistry.GetSpaceAvailable()</strong> function to check the number of bytes available in the registry.</p>\\n</blockquote>\\n<p>The Registry also supports the use of a special transient registry section. A registry section named \\\"Transient\\\" can be used to store attributes that have the lifetime of a single boot. Within a specific boot session, these values will be persistent to the application and stored as any other registry value. Whenever the user reboots the Roku Streaming Player, all \\\"Transient\\\" registry sections are removed and the values no longer persist. This technique is useful for caching data to minimize network access, yet still ensuring that this data is always fresh after a system reboot.</p>\\n<p>The registry is encrypted, and updates are relatively performance intensive and should be used sparingly. Note that all writes to the registry are delayed, and not committed to non-volatile storage until ifRegistry.Flush() or ifRegistrySection.Flush() is explicitly called. The platform may choose opportune times to flush data on its own, but no application is technically correct unless it explicitly calls Flush() at appropriate times. Flushing the registry is a relatively time-consuming operation, so it should be done as infrequently as possible. The Registry data is stored in a fault tolerant manner by preserving a backup for each write which is automatically rolled-back in the event of a failure.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifregistry.md\\\" title=\\\"ifRegistry\\\">ifRegistry</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roregistrysection.md":"{\n  \"content\": \"<h1 id=\\\"roregistrysection\\\">roRegistrySection</h1>\\n<p>A Registry Section enables the organization of settings within the registry. Different registry sections may have their own keys with the same name. In other words, key names are scoped within the registry section to which they belong.</p>\\n<p>This object must be supplied with a \\\"section\\\" name on creation. If no such section exists, it will be created. Section names are case sensitive, so sections named \\\"Settings\\\" and \\\"settings\\\" are two different sections.</p>\\n<p><code>CreateObject(\\\"roRegistrySection\\\", section as String)</code></p>\\n<p><strong>Example: Get and set some user authentication in the registry</strong></p>\\n<pre><code>Function GetAuthData() As Dynamic\\n     sec = CreateObject(\\\"roRegistrySection\\\", \\\"Authentication\\\")\\n     if sec.Exists(\\\"UserRegistrationToken\\\")\\n         return sec.Read(\\\"UserRegistrationToken\\\")\\n     endif\\n     return invalid\\nEnd Function\\n\\nFunction SetAuthData(userToken As String) As Void\\n    sec = CreateObject(\\\"roRegistrySection\\\", \\\"Authentication\\\")\\n    sec.Write(\\\"UserRegistrationToken\\\", userToken)\\n    sec.Flush()\\nEnd Function\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifregistrysection.md\\\" title=\\\"ifRegistrySection\\\">ifRegistrySection</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rorsa.md":"{\n  \"content\": \"<h1 id=\\\"rorsa\\\">roRSA</h1>\\n<p>The RSA component provides an interface to the OpenSSL RSA library of signing algorithms.</p>\\n<p>This component can be used to sign/verify using RSA.</p>\\n<p>Typically, you would use the roEVPDigest component to create a message digest, then use roRSA to sign it.</p>\\n<p><strong>Example: RSA signing using SHA1</strong></p>\\n<pre><code>ba = CreateObject(\\\"roByteArray\\\")\\n\\n' ...populate bytearray...\\n\\ndigest = CreateObject(\\\"roEVPDigest\\\")\\ndigest.Setup(\\\"sha1\\\")\\nhashString = digest.Process(ba)\\nhashBA = CreateObject(\\\"roByteArray\\\")\\nhashBA.FromHexString(hashString)\\nrsa = CreateObject(\\\"roRSA\\\")\\n\\n' ... save private key to tmp:/privateKey.txt\\n\\nrsa.SetPrivateKey(\\\"tmp:/privateKey.txt\\\")\\nrsa.SetDigestAlgorithm(\\\"sha1\\\")\\nsignature = rsa.Sign(hashBA)\\n</code></pre>\\n<p><strong>Example: RSA verification using SHA1</strong></p>\\n<pre><code>rsa = CreateObject(\\\"roRSA\\\")\\nrsa.SetPublicKey(:tmp:/publicKey.txt\\\")\\nrsa.SetDigestAlgorithm(\\\"sha1\\\")\\n\\n' see hashBA and signature from above example\\n\\nresult = rsa.Verify(hashBA, signature)\\nif (result = 1)\\n    print \\\"Verified\\\"\\nelse\\n    print \\\"Not verified, result = \\\" ; result\\nend if\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifrsa.md\\\" title=\\\"ifRSA\\\">ifRSA</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roscreen.md":"{\n  \"content\": \"<h1 id=\\\"roscreen\\\">roScreen</h1>\\n<p>The roScreen component provides a full screen drawing surface that can be stacked and that you can receive input events from.</p>\\n<p>You will need at least one roScreen component in your 2D game application to draw on and get events from. The origin (0,0) is the top left corner of the screen. The pixels are always RGBA 32 bits. Multiple roScreen components stack, and like other screen components only the top screen is viewable and gets events. An roScreen that is not the top most screen can still be drawn to. </p>\\n<blockquote>\\n<p>Once an roScreen is created, the display stack enters \\\"Game Mode\\\", and other screen components cannot be used. Screensavers will also be disabled and will appear as a black screen in its place. Other screen components cannot be intermixed with roScreens as the roScreen display stack is maintained independently from the main screen component display stack. When the final roScreen component is closed, other screen components can be used again.</p>\\n</blockquote>\\n<p>When the roScreen constructor is called, an optional double buffer flag, and an optional resolution can be passed. If the screen is double buffered, two buffers are fully allocated when CreateObject() succeeds. If the screen is single buffered only one buffer is allocated and the \\\"front\\\" and \\\"back\\\" buffers in method descriptions below are the same buffer. When a screen is created with a different resolution than the output display, it is scaled automatically to the output display resolution. </p>\\n<p>To maintain proper aspect ratio, and take care of the different pixel aspect ratio in HD vs SD; there is a fixed set of bitmap resolutions that are allowed to be created for screens:</p>\\n<p><strong>HD mode screensizes</strong></p>\\n<ul>\\n<li>1280x720PAR=1:1 (default for HD)</li>\\n<li>854x480 PAR=1:1 useful for higher performance HD games, also for 640x480 games</li>\\n<li>940x480 PAR=1.1:1 used for displaying a RokuSD (720x480) games</li>\\n</ul>\\n<p><strong>SD mode screensizes</strong></p>\\n<ul>\\n<li>720x480 PAR=1.1:1 (default for SD)</li>\\n<li>640x480 PAR=1:1 (used for 640x480 games)</li>\\n<li>854x626 PAR=1:1 (used for 854x480 HD games)</li>\\n</ul>\\n<p>The screen dimensions correspond to the drawable area that applications see. The dimensions were chosen so that applications do not need to compensate for screen aspect ratio or pixel aspect ratio. </p>\\n<p>It's likely that when porting games from other platforms, the active game area may be smaller and correspond to more traditional dimensions. In this case, the application can supply letterbox or pillarbox artwork and use an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> to define the active area. The roRegion will translate and clip graphics to the proper area for the game. Similarly, roRegions are used to describe the left and right pillars for an SD game in HD mode, or the upper and lower letterbox regions for an HD game in SD mode. </p>\\n<p>Games that require more performance should use smaller dimensions. Games should run in HD and SD mode. The screensizes HD 854x480 paired with SD 854x626 and HD 940x480 paired with SD 720x480 were designed for this purpose.</p>\\n<p>The game creates a single active game roRegion to do all graphics operations in. roRegions for pillar or letter boxes are used to fill the rest of the screen area depending on if the app is in HD or SD mode. Please refer to the dfSetupDisplayRegions() function in <a href=\\\"/docs/references/brightscript/language/component-architecture.md#v30bslcorebrs\\\" title=\\\"v30/bslDefender.brs\\\">v30/bslDefender.brs</a> for help in setting up the drawable regions in screen scaling. </p>\\n<p>There are some useful rules of thumb to be aware of to get the best performance when rendering your games:</p>\\n<ul>\\n<li>Alpha enabled regions are expensive to render</li>\\n</ul>\\n<p>It is a requirement that the destination be alpha enabled in order for non-rectangular sprites to be properly rendered with transparency. However the sprite used for a background would typically have all pixels be fully nontransparent. Since alpha blending is expensive, a quick way to blit the background in this scenario is to first disable alpha on the screen, manually draw the background, and then enable alpha for the screen before drawing the rest of the sprites.</p>\\n<ul>\\n<li>Use smaller resolution images wherever possible. Scaling a large image down at run time is expensive with no benefit to the user</li>\\n<li>Rendering text with DrawText() is expensive</li>\\n</ul>\\n<p>Fortunately, many of these calls are redundant and can be eliminated. The static text for a particular level can be drawn on the background once and this newly created background can be used for refreshing the screen. This will eliminate almost all text redraws. </p>\\n<p>A screen can be created with one of three constructors. If it is created with no parameters, the screen will be single buffered, and its output resolution will match the current display resolution (if the current resolution is specified in the manifest file ui_resolutions entry, otherwise the size will be 720p).</p>\\n<p><code>CreateObject(\\\"roScreen\\\")</code></p>\\n<p>If a single parameter is passed, it is a Boolean that indicates if the screen is double buffered or not. See SwapBuffers():</p>\\n<p><code>CreateObject(\\\"roScreen\\\", true) ' double buffered screen</code></p>\\n<p>If four parameters are passed, the last two specify the screen's resolution. The dimensions must be one of the screen sizes specified above:</p>\\n<p><code>CreateObject(\\\"roScreen\\\", true, 720, 480) ' db &#x26; SD res</code></p>\\n<p><strong>Example: Display an image</strong></p>\\n<pre><code>Screen=CreateObject(\\\"roScreen\\\")\\ndfDrawImage(screen, \\\"myphoto.jpg\\\",0,0)\\nScreen.Finish()\\n</code></pre>\\n<p><strong>Example: Alpha blending</strong></p>\\n<pre><code>white=&#x26;hFFFFFFFF\\nscreen0=CreateObject(\\\"roScreen\\\")\\nscreen0.SetAlphaEnable(true)\\nscreen0.Clear(white)\\nscreen0.DrawRect(100,100, screen0.GetWidth()-200, screen0.GetHeight()-200, &#x26;h80)\\n' &#x26;h80 is black with a 50% alpha mix (RGBA)\\nscreen0.finish()\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifscreen.md\\\" title=\\\"ifScreen\\\">ifScreen</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifdraw2d.md\\\" title=\\\"ifDraw2D\\\">ifDraw2D</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rosearchhistory.md":"{\n  \"content\": \"<h1 id=\\\"rosearchhistory\\\">roSearchHistory</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Search History object implements the system wide storage of search terms for use in implementing the roSearchScreen.</p>\\n<p>As the user searches for content, recent searches are placed into the search history. This allows the user to easily re-execute these commands later without typing on the keyboard. The initial list of recent searches is displayed on the roSearchScreen to assist the user in finding content to watch. This history is used system wide, so that the user can find references to their search in multiple types of content. </p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roSearchHistory\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>history = CreateObject(\\\"roSearchHistory\\\")\\nlist = history.GetAsArray()\\nprint \\\"There are \\\"; list.Count(); \\\" items in the history\\\"\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsearchhistory.md\\\" title=\\\"ifSearchHistory\\\">ifSearchHistory</a>            </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rosearchscreen.md":"{\n  \"content\": \"<h1 id=\\\"rosearchscreen\\\">roSearchScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Search Screen provides a standard way to allow users to enter text for searching.</p>\\n<p>This screen features a simplified keyboard (a-z, 0-9) designed to provide just the keys necessary to perform case-insensitive searches without punctuation.</p>\\n<p>Ideally, the user would enter a search string and the backend service would perform that query in a case-insensitive manner ignoring special characters like punctuation. The script is notified as each key is pressed so that a progress disclosure search can be performed if supported by the back-end service. In addition, the script can control the text displayed on the screen and will receive events when the text entry is complete.</p>\\n<p>In addition to entering search strings, this screen features a list that can be used to display search results or show the most recent searches. It's desirable for the screen to maintain a list of recent searches for the user to allow them to easily repeat a recent query without typing. In some implementations, it may be desirable to use this list to show a progressive set of results after each character while the user is typing.</p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roSearchScreen\\\")</code></p>\\n<p><strong>Example</strong></p>\\n<pre><code>REM ******************************************************\\nREM Main routine - example of search screen usage\\nREM ******************************************************\\nSub Main()\\n    print \\\"start\\\"\\n    'toggle the search suggestions vs. search history behavior\\n    'this allow you to generate both versions of the example below\\n    displayHistory = false\\n    history = CreateObject(\\\"roArray\\\", 1, true)\\n    'prepopulate the search history with sample results\\n    history.Push(\\\"seinfeld\\\")\\n    history.Push(\\\"fraiser\\\")\\n    history.Push(\\\"cheers\\\")\\n    port = CreateObject(\\\"roMessagePort\\\")\\n    screen = CreateObject(\\\"roSearchScreen\\\")\\n    'commenting out SetBreadcrumbText() hides breadcrumb on screen\\n    screen.SetBreadcrumbText(\\\"\\\", \\\"search\\\")\\n    screen.SetMessagePort(port)\\n    if displayHistory\\n        screen.SetSearchTermHeaderText(\\\"Recent Searches:\\\")\\n        screen.SetSearchButtonText(\\\"search\\\")\\n        screen.SetClearButtonText(\\\"clear history\\\")\\n        screen.SetClearButtonEnabled(true) 'defaults to true\\n        screen.SetSearchTerms(history)\\n    else\\n        screen.SetSearchTermHeaderText(\\\"Suggestions:\\\")\\n        screen.SetSearchButtonText(\\\"search\\\")\\n        screen.SetClearButtonEnabled(false)\\n    endif\\n    print \\\"Doing show screen...\\\"\\n    screen.Show()\\n    print \\\"Waiting for a message from the screen...\\\"\\n    ' search screen main event loop\\n    done = false\\n    while done = false\\n        msg = wait(0, screen.GetMessagePort())\\n        if type(msg) = \\\"roSearchScreenEvent\\\"\\n            if msg.isScreenClosed()\\n                print \\\"screen closed\\\"\\n                done = true\\n            else if msg.isCleared()\\n                print \\\"search terms cleared\\\"\\n                history.Clear()\\n            else if msg.isPartialResult()\\n                print \\\"partial search: \\\"; msg.GetMessage()\\n                if not displayHistory\\n                    screen.SetSearchTerms(GenerateSearchSuggestions(msg.GetMessage()))\\n                endif\\n            else if msg.isFullResult()\\n                print \\\"full search: \\\"; msg.GetMessage()\\n                history.Push(msg.GetMessage())\\n                if displayHistory\\n                    screen.AddSearchTerm(msg.GetMessage())\\n                end if\\n                'uncomment to exit the screen after a full search result:\\n                'done = true\\n            else\\n                print \\\"Unknown event: \\\"; msg.GetType(); \\\" msg: \\\"; msg.GetMessage()\\n            endif\\n        endif\\n    endwhile\\n    print \\\"Exiting...\\\"\\nEnd Sub\\n\\nFunction GenerateSearchSuggestions(partSearchText As String) As Object\\n    availableContent = [\\n        \\\"ghost in the shell\\\"\\n        \\\"parasite dolls\\\"\\n        \\\"final fantasy\\\"\\n        \\\"ninja scroll\\\"\\n        \\\"space ghost\\\"\\n        \\\"hellboy\\\"\\n        \\\"star wars\\\"\\n        \\\"terminator\\\"\\n        \\\"house of cards\\\"\\n        \\\"dexter\\\"\\n        ]\\n    suggestions = []\\n    if partSearchText &#x3C;> \\\"\\\"\\n        partSearchText = LCase(partSearchText)\\n        for each available in availableContent\\n            if available.Instr(partSearchText) >= 0\\n                suggestions.Push(available)\\n            end if\\n        end for\\n    end if\\n    return suggestions\\nEnd Function\\n</code></pre>\\n<p><strong>Image: roSearchScreen example results (search suggestions)</strong></p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/roSearchScreen.png\\\" alt=\\\"Image: roSearchScreen example results (search suggestions)\\\" title=\\\"roSearchScreen\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsearchscreen.md\\\" title=\\\"ifSearchScreen\\\">ifSearchScreen</a>                </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>              </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n</ul>\\n<blockquote>\\n<p>Some Roku OS versions may implement ifSearchScreen as ifRoSearchScreen.</p>\\n</blockquote>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rosearchscreenevent.md\\\" title=\\\"roSearchScreenEvent\\\">roSearchScreenEvent</a>             </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rosgnode.md":"{\n  \"content\": \"<h1 id=\\\"rosgnode\\\">roSGNode</h1>\\n<p>The roSGNode object is the BrightScript equivalent of SceneGraph XML\\nfile node creation. To create an roSGNode object for a specific node\\nclass, call:</p>\\n<p><code>CreateObject(\\\"roSGNode\\\", \\\"nodetype\\\")</code></p>\\n<p>Where nodetype is a string specifying the node class to be created.\\nFor example, the following creates an object of the SceneGraph\\nPoster node class:</p>\\n<p><code>CreateObject(\\\"roSGNode\\\", \\\"Poster\\\")</code></p>\\n<p>Reference information on all SceneGraph node classes can be found in\\n<a href=\\\"/docs/references/scenegraph/node.md\\\">SceneGraph API\\nReference</a>.</p>\\n<p>Prior to creating an roSGScreen object and calling its <code>show()</code>\\nfunction, creating roSGNode objects and using their interfaces is\\nnot guaranteed to work correctly. If you need to create some\\nroSGNode objects and/or use roSGNode interfaces prior to calling\\nan roSGScreen object <code>show()</code> function, you can use an\\nroSGScreen object <code>createScene()</code> function to create an instance of\\na SceneGraph XML component that does any required setup and\\ninitialization prior to the roSGScreen object being displayed.</p>\\n<p>In addition, roSGNode implements the ifAssociativeArray interface as a wrapper for ifSGNodeFIeld so that the convenient node.field notation may be using for setting, getting, and observing fields.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported Interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifassociativearray.md\\\">ifAssociativeArray</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsgnodechildren.md\\\">ifSGNodeChildren</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsgnodefield.md\\\">ifSGNodeField</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsgnodedict.md\\\">ifSGNodeDict</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsgnodefocus.md\\\">ifSGNodeFocus</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsgnodeboundingrect.md\\\">ifSGNodeBoundingRect</a></li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsgnodehttpagentaccess.md\\\">ifSGNodeHttpAgentAccess</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported Events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rosgnodeevent.md\\\">roSGNodeEvent</a></li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rosgscreen.md":"{\n  \"content\": \"<h1 id=\\\"rosgscreen\\\">roSGScreen</h1>\\n<p>The roSGScreen object is a SceneGraph canvas that displays the\\ncontents of a SceneGraph Scene node instance. The object is created\\nby calling:</p>\\n<p><code>CreateObject(\\\"roSGScreen\\\")</code></p>\\n<p><code>CreateScene()</code> takes one argument, the name of the scene component.  A\\nchannel will typically extend Scene to define its own channel specific\\nScene type (such as MyScene, etc.)  This Scene component name is passed\\nto <code>CreateScene().</code></p>\\n<p><strong>roSGScreen typical usage example</strong></p>\\n<pre><code>screen = CreateObject(\\\"roSGScreen\\\")\\nscene  = screen.CreateScene(\\\"Scene\\\")\\nscreen.show()\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsgscreen.md\\\" title=\\\"ifSgScreen\\\">ifSgScreen</a></li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rosgscreenevent.md\\\" title=\\\"roSGScreenEvent\\\">roSGScreenEvent</a>             </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roslideshow.md":"{\n  \"content\": \"<h1 id=\\\"roslideshow\\\">roSlideShow</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Slide Show screen provides the ability to setup a photo slide show to playback a series of images.</p>\\n<p>Images may be jpg, png or gif files. The developer can control the sequencing and timing of the slideshow. The object is designed to accept an array of <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">Content Meta-Data</a> objects, describing the images and providing URLs for accessing each image. TextOverlayUL, TextOverlayUR, and TextOverlayBody are content meta-data properties used to display a text overlay.  </p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roSlideShow\\\")</code></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifslideshow.md\\\" title=\\\"ifSlideShow\\\">ifSlideShow</a>            </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a>             </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/roslideshowevent.md\\\" title=\\\"roSlideShowEvent\\\">roSlideShowEvent</a> </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rosocketaddress.md":"{\n  \"content\": \"<h1 id=\\\"rosocketaddress\\\">roSocketAddress</h1>\\n<p>The roSocketAddress is used by the roStreamSocket and roDataGramSocket components for TCP and UDP traffic respectively.</p>\\n<p>This object is created without any arguments:</p>\\n<p><code>CreateObject(\\\"roSocketAddress\\\")</code></p>\\n<p>Methods in <a href=\\\"/docs/references/brightscript/interfaces/ifsocketaddress.md\\\" title=\\\"ifSocketAddress\\\">ifSocketAddress</a> are used to assign an IP address to the object. roSocketAddress currently supports only IPV4 addresses.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketaddress.md\\\" title=\\\"ifSocketAddress\\\">ifSocketAddress</a>            </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rospringboardscreen.md":"{\n  \"content\": \"<h1 id=\\\"rospringboardscreen\\\">roSpringboardScreen</h1>\\n<p>The Springboard Screen shows detailed information about an individual piece of content and provides options for actions that may be taken on that content.</p>\\n<p>The detailed description of the content is displayed with poster art for the title. Artwork may be displayed portrait or landscape orientation depending on the ContentType set in the <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">Content Meta-Data</a>.</p>\\n<p>The caller may add one or more buttons to the screen with actions such as Play, Resume, Purchase or More Info. The script is notified via an event when a button is selected and it is the responsibility of the script writer to handle that event as desired and perform the requested action.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/worddav3570180012b8208f098d035b989f8fa8.png\\\" alt=\\\"worddav-button-actions\\\" title=\\\"worddav3570180012b8208f098d035b989f8fa8\\\"></p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roSpringboardScreen\\\")</code></p>\\n<ul>\\n<li>\\n<p>Orientation for artwork is based on ContentType setting and may be portrait or landscape.</p>\\n</li>\\n<li>\\n<p>The audio springboard is capable of adding a progress bar.</p>\\n</li>\\n<li>\\n<p>If the ContentType is audio, the album art dimensions are:</p>\\n</li>\\n</ul>\\n<pre><code>    SD: 124 x 112\\n    HD: 188 x 188\\n</code></pre>\\n<ul>\\n<li>If the ContentType is episode, the album art dimensions are:</li>\\n</ul>\\n<pre><code>    SD: 180 x 122\\n    HD: 264 x 198\\n</code></pre>\\n<ul>\\n<li>If the ContentType is any other value, the album art dimensions are:</li>\\n</ul>\\n<pre><code>    SD: 112 x 142\\n    HD: 148 x 212\\n</code></pre>\\n<ul>\\n<li>\\n<p>Up to 5 user-defined buttons may be displayed. Buttons are displayed in the order they are added and always appear in a fixed region of the screen</p>\\n</li>\\n<li>\\n<p>The description text will be formatted and justified (right and left edges) to fit between the margins. When the maximum length is reached, the text will be clipped and terminated with an ellipsis. The font is variable pitch, so the maximum number of characters is dependent on the text. The spacing is approximately 85 characters per line x 4 lines = 340 characters. The fonts and character spacing for HD and SD are similar, and display approximately the same number of characters, but the relationship is not exactly 1:1.</p>\\n</li>\\n<li>\\n<p>The star rating can show either community StarRating (red) or UserStarRating (yellow). If both values are set, the control will display the UserStarRating. If ratings are not desired, it can be removed by calling SetStaticRatingEnabled(false), providing more space to display actor names.</p>\\n</li>\\n<li>\\n<p>The Length attribute will display a formatted string or show length. If the value is zero, this field will display 0m, if the attribute is not set/missing then this field will not be displayed.</p>\\n</li>\\n</ul>\\n<p><strong>Example</strong></p>\\n<p>The following example shows the process of creating an roSpringboardScreen, setting up the content meta-data, showing the screen and waiting for an event. This example is simplified for clarity and it's assumed the real-world applications will use techniques like getting data from web services using roUrlTransfer.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/springboard-audio.png\\\" alt=\\\"springboard-audio\\\" title=\\\"springboard-audio\\\"></p>\\n<pre><code>Function Main()\\n    port = CreateObject(\\\"roMessagePort\\\")\\n    springBoard = CreateObject(\\\"roSpringboardScreen\\\")\\n    springBoard.SetBreadcrumbText(\\\"[location 1]\\\", \\\"[location2]\\\")\\n    springBoard.SetMessagePort(port)\\n    o = CreateObject(\\\"roAssociativeArray\\\")\\n    o.ContentType = \\\"episode\\\"\\n    o.Title = \\\"[Title]\\\"\\n    o.ShortDescriptionLine1 = \\\"[ShortDescriptionLine1]\\\"\\n    o.ShortDescriptionLine2 = \\\"[ShortDescriptionLine2]\\\"\\n    o.Description = \\\"\\\"\\n    For i = 1 To 15\\n        o.Description = o.Description + \\\"[Description] \\\"\\n    End For\\n    o.SDPosterUrl = \\\"\\\"\\n    o.HDPosterUrl = \\\"\\\"\\n    o.Rating = \\\"NR\\\"\\n    o.StarRating = \\\"75\\\"\\n    o.ReleaseDate = \\\"[mm/dd/yyyy]\\\"\\n    o.Length = 5400\\n    o.Categories = CreateObject(\\\"roArray\\\", 10, true)\\n    o.Categories.Push(\\\"[Category1]\\\")\\n    o.Categories.Push(\\\"[Category2]\\\")\\n    o.Categories.Push(\\\"[Category3]\\\")\\n    o.Actors = CreateObject(\\\"roArray\\\", 10, true)\\n    o.Actors.Push(\\\"[Actor1]\\\")\\n    o.Actors.Push(\\\"[Actor2]\\\")\\n    o.Actors.Push(\\\"[Actor3]\\\")\\n    o.Director = \\\"[Director]\\\"\\n    springBoard.SetContent(o)\\n    springBoard.Show()\\n    While True\\n        msg = wait(0, port)\\n        If msg.isScreenClosed() Then\\n            Return -1\\n        Elseif msg.isButtonPressed()\\n            print \\\"msg: \\\"; msg.GetMessage(); \\\"idx: \\\"; msg.GetIndex()\\n        Endif\\n    End While\\nEnd Function\\n</code></pre>\\n<p>The following screen is displayed when this code is executed:</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/worddav256ada1e0e0cdc53d79428655ca7702b.png\\\" alt=\\\"worddav-code-displayed\\\" title=\\\"worddav256ada1e0e0cdc53d79428655ca7702b\\\"></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifspringboardscreen.md\\\" title=\\\"ifSpringboardScreen\\\">ifSpringboardScreen</a>                 </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a>                    </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rospringboardscreenevent.md\\\" title=\\\"roSpringboardScreenEvent\\\">roSpringboardScreenEvent</a>  </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rosprite.md":"{\n  \"content\": \"<h1 id=\\\"rosprite\\\">roSprite</h1>\\n<p>The roSprite object cannot be created directly with a CreateObject() call. It must be associated with a managing roCompositor object. This association is implicitly created by creating an roSprite object with the roCompositor methods NewSprite() or NewAnimatedSprite().</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsprite.md\\\" title=\\\"ifSprite\\\">ifSprite</a>              </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rostreamsocket.md":"{\n  \"content\": \"<h1 id=\\\"rostreamsocket\\\">roStreamSocket</h1>\\n<p>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them. The interface is modeled on and works much like standard Berkeley sockets.</p>\\n<p>This object is created without any arguments:</p>\\n<p><code>CreateObject(\\\"roStreamSocket\\\")</code></p>\\n<p><strong>Example: Open TCP Connection to Server</strong></p>\\n<pre><code>sendAddress = CreateObject(\\\"roSocketAddress\\\")\\nsendAddress.SetAddress(\\\"www.google.com:80\\\")\\nsocket = CreateObject(\\\"roStreamSocket\\\")\\nsocket.setSendToAddress(sendAddress)\\nIf socket.Connect()\\n    Print \\\"Connected Successfully\\\"\\nEnd If\\n</code></pre>\\n<p><strong>Example: Echo Server</strong></p>\\n<pre><code>function main()\\n    messagePort = CreateObject(\\\"roMessagePort\\\")\\n    connections = {}\\n    buffer = CreateObject(\\\"roByteArray\\\")\\n    buffer[512] = 0\\n    tcpListen = CreateObject(\\\"roStreamSocket\\\")\\n    tcpListen.setMessagePort(messagePort)\\n    addr = CreateObject(\\\"roSocketAddress\\\")\\n    addr.setPort(54321)\\n    tcpListen.setAddress(addr)\\n    tcpListen.notifyReadable(true)\\n    tcpListen.listen(4)\\n    if not tcpListen.eOK()\\n        print \\\"Error creating listen socket\\\"\\n        stop\\n    end if\\n    while True\\n        event = wait(0, messagePort)\\n        if type(event) = \\\"roSocketEvent\\\"\\n            changedID = event.getSocketID()\\n            if changedID = tcpListen.getID() and tcpListen.isReadable()\\n                ' New\\n                newConnection = tcpListen.accept()\\n                if newConnection = Invalid\\n                    print \\\"accept failed\\\"\\n                else\\n                    print \\\"accepted new connection \\\" newConnection.getID()\\n                    newConnection.notifyReadable(true)\\n                    newConnection.setMessagePort(messagePort)\\n                    connections[Stri(newConnection.getID())] = newConnection\\n                end if\\n            else\\n                ' Activity on an open connection\\n                connection = connections[Stri(changedID)]\\n                closed = False\\n                if connection.isReadable()\\n                    received = connection.receive(buffer, 0, 512)\\n                    print \\\"received is \\\" received\\n                    if received > 0\\n                        print \\\"Echo input: '\\\"; buffer.ToAsciiString(); \\\"'\\\"\\n                        ' If we are unable to send, just drop data for now.\\n                        ' You could use notifywritable and buffer data, but that is\\n                        ' omitted for clarity.\\n                        connection.send(buffer, 0, received)\\n                    else if received=0 ' client closed\\n                        closed = True\\n                    end if\\n                end if\\n                if closed or not connection.eOK()\\n                    print \\\"closing connection \\\" changedID\\n                    connection.close()\\n                    connections.delete(Stri(changedID))\\n                end if\\n            end if\\n        end if\\n    end while\\n\\n    print \\\"Main loop exited\\\"\\n    tcpListen.close()\\n    for each id in connections\\n        connections[id].close()\\n    end for\\nEnd Function\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketconnection.md\\\" title=\\\"ifSocketConnection\\\">ifSocketConnection</a>                   </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocket.md\\\" title=\\\"ifSocket\\\">ifSocket</a>                             </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketasync.md\\\" title=\\\"ifSocketAsync\\\">ifSocketAsync</a>                   </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketstatus.md\\\" title=\\\"ifSocketStatus\\\">ifSocketStatus</a>                        </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketconnectionstatus.md\\\" title=\\\"ifSocketConnectionStatus\\\">ifSocketConnectionStatus</a>              </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsocketconnectionoption.md\\\" title=\\\"ifSocketConnectionOption\\\">ifSocketConnectionOption</a>              </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rosocketevent.md\\\" title=\\\"roSocketEvent\\\">roSocketEvent</a>           </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rostring.md":"{\n  \"content\": \"<h1 id=\\\"rostring\\\">roString</h1>\\n<p>roString is the object equivalent for intrinsic type 'String'.</p>\\n<p>This is useful in the following situations:</p>\\n<ul>\\n<li>\\n<p>When an object is needed, instead of an intrinsic value. For example, \\\"roList\\\" maintains a list of objects. If an String is added to roList, it will be automatically wrapped in an roString by the language interpreter. When a function that expects a BrightScript Component as a parameter is passed a string, BrightScript automatically creates the equivalent BrightScript Component.</p>\\n</li>\\n<li>\\n<p>If any object exposes the ifString interface, that object can be used in any expression that expects an intrinsic value.</p>\\n</li>\\n</ul>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifstring.md\\\" title=\\\"ifString\\\">ifString</a>                </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifstringops.md\\\" title=\\\"ifStringOps\\\">ifStringOps</a>             </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftostr.md\\\" title=\\\"ifToStr\\\">ifToStr</a>                 </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rosystemlog.md":"{\n  \"content\": \"<h1 id=\\\"rosystemlog\\\">roSystemLog</h1>\\n<p>The roSystemLog component enables the application to receive events from the Roku Streaming Player that are intended for reporting errors and trends, rather than trigger a response to a user action.</p>\\n<p>All of the log event messages are sent to the roMessagePort that is registered on the <a href=\\\"/docs/references/brightscript/events/rosystemlogevent.md\\\" title=\\\"roSystemLogEvent\\\">roSystemLogEvent</a> object. See roSystemLogEvent for details on the messages.</p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roSystemLog\\\")</code></p>\\n<p>The roSystemLog component requires specific Design Patterns in your BrightScript Application. Take care to:</p>\\n<ul>\\n<li>Use one roMessagePort throughout the application (instead of creating a new roMessagePort for each screen).</li>\\n<li>Create one roSystemLog instance at startup that remains for the entire lifetime of the application.</li>\\n<li>Pass the global roMessagePort referenced in the first bullet point to SetMessagePort() on the roSystemLog component.</li>\\n<li>Enable the desired log types using EnableType().</li>\\n<li>Handle the <a href=\\\"/docs/references/brightscript/events/rosystemlogevent.md\\\" title=\\\"roSystemLogEvents\\\">roSystemLogEvents</a> in all message loops.</li>\\n</ul>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsystemlog.md\\\" title=\\\"ifSystemLog\\\">ifSystemLog</a>            </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rotextscreen.md":"{\n  \"content\": \"<h1 id=\\\"rotextscreen\\\">roTextScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>roTextScreen provides a way of displaying large amounts of scrollable text.</p>\\n<p>This type of screen can be used to display help text, credits, license agreements, or other large amounts of text that require scrolling.</p>\\n<p>The interface allows you to set the text and specify zero or more buttons.</p>\\n<p>If no buttons are specified, then the user can exit the screen by pressing BACK or OK.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftextscreen.md\\\" title=\\\"ifTextScreen\\\">ifTextScreen</a>                    </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rotextscreenevent.md\\\" title=\\\"roTextScreenEvent\\\">roTextScreenEvent</a>   </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rotexttospeech.md":"{\n  \"content\": \"<h1 id=\\\"rotexttospeech\\\">roTextToSpeech</h1>\\n<blockquote>\\n<p>Please note this component is only available on the following devices: Roku Streaming Stick (3600X), Roku Express (3700X) and Express+ (3710X), Roku Premiere (4620X) and Premiere+ (4630X), Roku Ultra (4640X), and any Roku TV running Roku OS version 7.2 and later.</p>\\n</blockquote>\\n<p>The roTextToSpeech component provides text to speech capabilities to applications.</p>\\n<p>An roTextToSpeech component object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roTextToSpeech\\\")</code></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftexttospeech.md\\\" title=\\\"ifTextToSpeech\\\">ifTextToSpeech</a>                 </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rotexttospeechevent.md\\\" title=\\\"ifTextToSpeechEvent\\\">roTextToSpeechEvent</a>  </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rotexturemanager.md":"{\n  \"content\": \"<h1 id=\\\"rotexturemanager\\\">roTextureManager</h1>\\n<p>The Texture Manager provides a set of API's for managing an roBitmap cache.</p>\\n<p><strong>Example: Requesting an roBitmap from the roTextureManager</strong></p>\\n<pre><code>Sub Main()\\n    mgr = CreateObject(\\\"roTextureManager\\\")\\n    msgport = CreateObject(\\\"roMessagePort\\\")\\n    mgr.SetMessagePort(msgport)\\n\\n    request = CreateObject(\\\"roTextureRequest\\\",\\\"pkg:/assets/comet.jpg\\\")\\n    mgr.RequestTexture(request)\\n\\n    msg=wait(0, msgport)\\n    if type(msg)=\\\"roTextureRequestEvent\\\" then\\n        print \\\"request id\\\";msg.GetId()\\n        print \\\"request state:\\\";msg.GetState()\\n        print \\\"request URI:\\\";msg.GetURI()\\n        state = msg.GetState()\\n        if state = 3 then\\n            bitmap = msg.GetBitmap()\\n            if type(bitmap)&#x3C;>\\\"roBitmap\\\" then\\n                print \\\"Unable to create robitmap\\\"\\n                stop   ' stop exits to the debugger\\n            end if\\n        end if\\n   end if\\nEnd Sub\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftexturemanager.md\\\" title=\\\"ifTextureManager\\\">ifTextureManager</a>                 </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a>   </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rotexturerequestevent.md\\\" title=\\\"roVideoPlayerEvent\\\">roTextureRequestEvent</a>  </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rotexturerequest.md":"{\n  \"content\": \"<h1 id=\\\"rotexturerequest\\\">roTextureRequest</h1>\\n<p>An roTextureRequest is used to make requests to the roTextureManager.</p>\\n<p>An roTextureRequest object is created using the CreateObject() method and passing it a URI string:</p>\\n<p><code>CreateObject(\\\"roTextureRequest\\\", \\\"pkg:/assets/comet.jpg\\\")</code></p>\\n<p><strong>Example: Requesting a URL from the roTextureManager</strong></p>\\n<pre><code>Sub Main()\\n    mgr = CreateObject(\\\"roTextureManager\\\")\\n    msgport = CreateObject(\\\"roMessagePort\\\")\\n    mgr.SetMessagePort(msgport)\\n\\n    request = CreateObject(\\\"roTextureRequest\\\",\\\"http://192.168.1.10/ball.png\\\")\\n    mgr.RequestTexture(request)\\n\\n    msg=wait(0, msgport)\\n    if type(msg)=\\\"roTextureRequestEvent\\\" then\\n        print \\\"request id\\\";msg.GetId()\\n        print \\\"request state:\\\";msg.GetState()\\n        print \\\"request URI:\\\";msg.GetURI()\\n        state = msg.GetState()\\n        if state = 3 then\\n            bitmap = msg.GetBitmap()\\n            if type(bitmap)&#x3C;>\\\"roBitmap\\\" then\\n                print \\\"Unable to create robitmap\\\"\\n                stop   ' stop exits to the debugger\\n            end if\\n        end if\\n   end if\\nEnd Sub\\n</code></pre>\\n<p><strong>Example: Requesting a scaled image from the roTextureManager</strong></p>\\n<pre><code>Sub Main()\\n    mgr = CreateObject(\\\"roTextureManager\\\")\\n    msgport = CreateObject(\\\"roMessagePort\\\")\\n    mgr.SetMessagePort(msgport)\\n\\n    request = CreateObject(\\\"roTextureRequest\\\",\\\"pkg:/assets/ball.png\\\")\\n    request.SetSize(100, 100)\\n    request.SetScaleMode(1)\\n    mgr.RequestTexture(request)\\nEnd Sub\\n</code></pre>\\n<p><strong>Example: Making an HTTPS request from the roTextureManager</strong></p>\\n<pre><code>Sub Main()\\n    mgr = CreateObject(\\\"roTextureManager\\\")\\n    msgport = CreateObject(\\\"roMessagePort\\\")\\n    mgr.SetMessagePort(msgport)\\n\\n    request = CreateObject(\\\"roTextureRequest\\\",\\\"https://192.168.1.10/ball.png\\\")\\n    request.SetCertificatesFile(\\\"common:/certs/ca-bundle.crt\\\")\\n    request.InitClientCertificates()\\n\\n    mgr.RequestTexture(request)\\nEnd Sub\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftexturerequest.md\\\" title=\\\"ifTextureRequest \\\">ifTextureRequest</a>                 </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a>           </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rotimespan.md":"{\n  \"content\": \"<h1 id=\\\"rotimespan\\\">roTimespan</h1>\\n<p>The Timespan object provides an interface to a simple timer for tracking the duration of activities. It's useful for tracking how an action has taken or if a specified time has elapsed from some starting event.</p>\\n<p><strong>Example: Timing an activity</strong></p>\\n<pre><code>REM ******************************************************\\nREM Compute the number of millisecs to perform a task\\nREM ******************************************************\\ntimer = CreateObject(\\\"roTimespan\\\")\\ntimer.Mark()\\nDoTimeConsumingTask()\\nPrint \\\"Task took: \\\" + timer.TotalMilliseconds().ToStr()\\n\\nREM ******************************************************\\nREM Compute how many seconds until rental expires\\nREM ******************************************************\\nFunction secondsLeft(String expirationDate) As Integer\\n    str = expirationDate\\n    if str = invalid return -1\\n    ts = CreateObject(\\\"roTimespan\\\")\\n    seconds = ts.GetSecondsToISO8601Date(str)\\n    print \\\"Expires: \\\" + str + \\\" secs: \\\" + Stri(seconds)\\n    return seconds\\nEnd Function\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iftimespan.md\\\" title=\\\"ifTimespan\\\">ifTimespan</a>             </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rourltransfer.md":"{\n  \"content\": \"<h1 id=\\\"rourltransfer\\\">roUrlTransfer</h1>\\n<p>A roUrlTransfer object transfers data to or from remote servers specified by URLs. It can perform mutual authentication with a web server.</p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roUrlTransfer\\\")</code></p>\\n<p>If using HTTPS, the developer must specify a certificate file by calling SetCertificatesFile() with a .pem file that includes the certificate authority cert (like Verisign, Thawte, etc., or your own with OpenSSL) that signed the web server certificate. This must be called before making a request. The developer can also use the Roku standard cert bundle (which contains certificates for most common signing authorities) stored in common:/certs/ca-bundle.crt; or download the CA certificate <a href=\\\"https://github.com/rokudev/ca-certificate/blob/master/ca-bundle.crt\\\">here</a>.</p>\\n<p>The web server can authenticate that the requested connection is from a Roku Streaming Player and that the request is from your application by taking the following actions:</p>\\n<ul>\\n<li>Add the Roku CA certificate to the web server's certificate authorities keychain, download the CA certificate.  </li>\\n<li>Configure your web server to reject any connection that does not have a valid client certificate.</li>\\n<li>Check the X-Roku-Reserved-Dev-Id header in the request. It should contain the Developer ID of your application. If it does not, another application on the Roku is attempting to access the server, and the request is rejected.</li>\\n</ul>\\n<p><strong>Example</strong></p>\\n<p>In order for your web server to perform the steps above to authenticate your Roku Streaming Player, your application needs to call the following functions before performing any https requests:</p>\\n<pre><code>object.SetCertificatesFile(\\\"common:/certs/ca-bundle.crt\\\")\\nobject.AddHeader(\\\"X-Roku-Reserved-Dev-Id\\\", \\\"\\\")\\nobject.InitClientCertificates()\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md\\\" title=\\\"ifUrlTransfer\\\">ifUrlTransfer</a>                 </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a>                    </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rourlevent.md\\\" title=\\\"roUrlEvent\\\">roUrlEvent</a>  </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rovideoplayer.md":"{\n  \"content\": \"<h1 id=\\\"rovideoplayer\\\">roVideoPlayer</h1>\\n<p>The roVideoPlayer component implements a video player with more programmatic control, but less user control than the roVideoScreen component.</p>\\n<p>The roVideoPlayer can be used in conjunction with the roImageCanvas to do graphical overlays, windowed video, zoom, and programmatic control of playlists and trick play. When using with the roImageCanvas, you can put the roVideoPlayer is at a lower z-order layer than other imageCanvas layers and implement overlays on top of the playing video. </p>\\n<p>Unlike the roVideoScreen component roVideoPlayer does not have automatic trick play modes and built in controls to support that trick play. Any trick play requires the developer to build his own controls using buttons on the roImageCanvas. </p>\\n<p>Note that all the video playback notes under roVideoScreen apply to the roVideoPlayer. The customvideoplayer sample application is a good example of roVideoPlayer usage.</p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roVideoPlayer\\\")</code></p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifvideoplayer.md\\\" title=\\\"ifVideoPlayer\\\">ifVideoPlayer</a>                 </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a>                    </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rovideoplayerevent.md\\\" title=\\\"roVideoPlayerEvent\\\">roVideoPlayerEvent</a>              </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/rovideoscreen.md":"{\n  \"content\": \"<h1 id=\\\"rovideoscreen\\\">roVideoScreen</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The Video Screen object implements the video playback portion of the user interface.</p>\\n<p>This object is created with no parameters:</p>\\n<p><code>CreateObject(\\\"roVideoScreen\\\")</code></p>\\n<p>The API's to the video screen allow the developer to setup a fully featured playback environment with minimal coding. The developer is responsible for initial playback setup and providing the required data (e.g. StreamURLs, SteamsBitrates, etc.) as part of the <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">Content Meta-Data</a>. Once created and displayed, the screen will respond to events and manage the playback experience for the user.</p>\\n<p>The roVideoScreen is designed for streaming content. The preferred implementation should provide multiple bitrates (ideally four) of video to provide a high quality user experience under a variety of network conditions. Using the StreamBitrates and StreamURLs provided in the content meta-data for the item, the roVideoScreen will automatically monitor and select the best stream based on the users measured bandwidth. If network performance changes, the system will adapt and rebuffer to stream at a different bandwidth if necessary. Note that the StreamURLs, StreamBitrates, StreamQualities and StreamStickyHttpRedirects are all arrays that are aligned with each other. For example, the first stream listed would be the 0th element of all of these arrays.</p>\\n<p>The bitrates should represent the actual bitrate of the stream. The bitrate is used for both the display of the dots as well as the stream selection algorithm. The dots work a follows; If the stream bitrate equals:</p>\\n<ul>\\n<li>0 = no dots</li>\\n<li>&#x3C; 500 Kbps= 1 dot</li>\\n<li>&#x3C; 800 Kbps = 2 dots</li>\\n<li>&#x3C;1.1 Mbps = 3 dots</li>\\n<li>\\n<blockquote>\\n<p>= 1.1 Mbps = 4 dots</p>\\n</blockquote>\\n</li>\\n</ul>\\n<p>The dots are displayed automatically based on the bitrate of the stream selected unless there is a single stream and the bitrate is set to zero, then it won't show any dots. The StreamQuality attribute is used to select streams and indicates if a stream is HD or not. If the attribute for HDBranded is set to true and the stream is HD, the HD icon will show beside the quality dots. If the StreamQuality is set to HD, and the user display type is set to SD, the HD stream will not be selected.</p>\\n<p>The roVideoScreen automatically provides trick mode for all supported content types. There are two type of trick modes supported; scene based selection and time-based selection. If BIF image files are provided for a title, scene-based trick modes will appear. (See the BIF File format Documentation for more information) The user will be presented with the images and progress bar needed for SEEK, FF, REW within a stream. The following image shows how trick modes are rendered with BIF files:</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/worddavdc8a50b63d70082736fbebee19c18eff.png\\\" alt=\\\"IMAGE\\\" title=\\\"worddavdc8a50b63d70082736fbebee19c18eff\\\"></p>\\n<p>The FF/REW functionality provides three speeds; slow, medium and fast. At slower speeds, the system displays the current frame in the center of the screen and additional frames on the side for contextual information. At higher speeds, the side frames disappear and only the center image is displayed. The I-frames within the video do not need to precisely align with the time stamp of the image frames in the BIF file. When the user stops and selects a frame, the video playback begins at the first I-frame less than or equal to the time position of the selected frame.</p>\\n<p>When BIF images are not available, the system will default to a time based trick play behavior. The user control is still the same, but only the progress bar is displayed and the user will not see individual scenes within the video. This mode is the default, so if images are not available for an individual title, the system will always provide this functionality by default.</p>\\n<p>The system will only seek to locations on an I-Frame boundary. Window Media (WMA9 or VC-1) uses the simple index object to determine the I-frame locations and H.264 uses the MOOV atom to determine the correct offsets. If the BIF images are at a consistent time intervals which do not align to I-Frame boundaries, the system will use the nearest I-Frame less than or equal to the time of the BIF image. MP4 or Windows Media are the preferred formats.</p>\\n<p><strong>Important Notes on Video Playback</strong></p>\\n<ul>\\n<li>\\n<p>The dimensions vary on a title-by-title basis depending on the source material and the target aspect ratio for the encode (e.g. 4:3 or 16:9).  Content is always encoded at full width and the height is adjusted.  For example, a 1.66 aspect ratio source is encoded as a 720x432 video and displayed as letterboxed for a 4:3 display.</p>\\n</li>\\n<li>\\n<p>The frame rate used for encoding is dependent on the source material. Film content is generally 23.976 fps, while video content is generally at 29.97.</p>\\n</li>\\n<li>\\n<p>For typical streaming video applications, we recommend a range of <sub>384Kbps to </sub>4.5Mbps. For USB playback, we recommend that you stay under 8.0 Mbps. This provides a good balance between quality and support for a wide number of users. In some cases lower and higher bitrates have been used, but this frequently results in poor quality or limits the % of the installed base that can view this encoding.</p>\\n</li>\\n<li>\\n<p>It is critical that the StreamURLs, StreamBitrates, StreamQualities and StreamStickyHttpRedirects arrays are all aligned with each other. For example, the first stream listed would be the 0th element of all of these arrays. You may have multiple streams in the arrays and the system will automatically pick the most appropriate stream based on the users available bandwidth and video settings.</p>\\n</li>\\n<li>\\n<p>The StreamQualities array identifies streams as either SD or HD. If the user is configured for SD the system will not select HD streams for playback.</p>\\n</li>\\n<li>\\n<p>The optional StreamStartTimeOffset is the offset into the stream which is considered to be the new origin of playback.</p>\\n</li>\\n<li>\\n<p>Live – declares the video as live and replaces the time remaining text in the progress bar with \\\"live\\\".</p>\\n</li>\\n<li>\\n<p>HLS Http Live Streaming support is included in the Roku OS (Introduced in Roku OS2.6). We currently support version 3 of the Http Live Streaming protocol (Pantos – Draft submitted to IETF November 19, 2010 <a href=\\\"http://tools.ietf.org/html/draft-pantos-http-live-streaming-05\\\">http://tools.ietf.org/html/draft-pantos-http-live-streaming-05</a> ). When using HLS, the StreamUrls and StreamQualities array should each have exactly one element.  If the HLS stream has only a single bitrate stream, the StreamBitrates array should contain one element specifying that bitrate.  If the stream contains more than one variant stream at multiple bitrates, the StreamBitrates array should contain one element with a value of zero. Please see the Video Encoding Guide for information about creating HLS .m3u8 files and segmented .ts files from your current h264 encoded video or distributing live video over HLS to the Roku box.</p>\\n</li>\\n<li>\\n<p>In addition to the support for version 2 of the HLS Pantos draft spec, the Roku box supports .m3u8 files that are compressed via deflate or gzip.</p>\\n<ul>\\n<li>The HTTP response for a query that returns a gzip-compressed file must contain the header: Content-Encoding: gzip</li>\\n<li>The HTTP response for a query that returns a deflate-compressed file must contain the header: Content-Encoding: deflate</li>\\n</ul>\\n</li>\\n<li>\\n<p>\\\"Trick Modes\\\" and seeking work a little differently with HLS streams. There are a couple of ways that seeking works with HLS and they are different than other streams.</p>\\n<p>  One way of seeking uses the \\\"target duration\\\" specified in the .m3u8 file. The first segment in an m3u8 file is assigned a time offset:</p>\\n<p>  T = G * N</p>\\n<p>  where G is the \\\"target duration\\\" value and N is the sequence number of the segment. Each subsequent segment is assigned a time offset equal to T (the time offset of the first segment) plus the duration value of all earlier segments. The duration of a segment is determined by the EXTINF line before that segment.</p>\\n</li>\\n<li>\\n<p>Smooth Streaming (since v4.7) and later by setting the StreamFormat to \\\"ism\\\" and setting the streamURL to the MANIFEST url.</p>\\n<ul>\\n<li>The player type (ContentMetaData.StreamFormat) is \\\"ism\\\"</li>\\n<li>The stream URL is the URL that points to the manifest</li>\\n<li>Only H.264 and/or AAC encoding formats are currently supported.</li>\\n<li>Only direct PlayReady licensing is supported. Indirect licensing is currently unsupported. That is, for decryption to work, the ProtectionHeader must be available in the manifest and the LA_URL should contain a valid URL to an accessible PlayReady license server.</li>\\n<li>If there are multiple audio tracks, a track will be chosen based on the StreamIndex.Language attribute in the manifest. If the StreamIndex.Language attribute is not populated, the audio track will be chosen arbitrarily. To select a specific audio track before playback, set the ContentMetaData.TrackIDAudio field to the desired track's StreamIndex.Name attribute.</li>\\n<li>If there are multiple video tracks, a track will be chosen arbitrarily. To select a specific video track before playback, set the ContentMetaData.TrackIDVideo field to the desired track's StreamIndex.Name attribute.</li>\\n</ul>\\n</li>\\n<li>\\n<p>Standard PlayReady SDK 2.0 Direct License Acquisition Over-the-Air (since v4.8) works by reading the Rights Management Protection Header in the Smooth Streaming Manifest Url.  The Roku OS retrieves the license from the PlayReady license server at the license acquisition url endpoint in the Protection Header.</p>\\n</li>\\n</ul>\\n<pre><code>#EXT-X_TARGETDURATION:10\\n#EXT-X-MEDIA-SEQUENCE:37\\n#EXTINF:10\\nurl1\\n#EXTINF:8\\nurl2\\n#EXTINF:10\\nurl3\\n</code></pre>\\n<p>The segment url1 has a time offset of 370, url2 is 380, and url3 is 388. Note that if no TARGETDURATION is specified, the default is 1, so the first segment in the file will have a nonzero time offset (equal to the target duration). The PlayStart content-meta data value allows direct seeking to an offset that is valid within the window of data in the current .m3u8 file.</p>\\n<p>There is a second way to seek in an HLS stream. If the m3u8 file has #EXT-X-PROGRAM-DATE-TIME entries, you can seek to a particular date/time by passing a value equal to a modified Unix epoch value. The modified epoch is 1/1/2004 rather than the standard Unix epoch of 1/1/1970. A Unix time value can be converted to an HLS seek time by subtracting 1072915200 (the number of seconds between 1/1/1970 and 1/1/2004). Once again, setting the PlayStart content meta data value allows direct seeking to a specific time offset.</p>\\n<p>For example, to seek to the segment marked with the date/time of 7/4/2010 11:30, set PlayStart to 205327800. An example shell expression showing this arithmetic is:</p>\\n<pre><code>% expr `date -d \\\"7/4/2010Z11:30:00.000\\\" +%s` - 1072915200\\n205327800\\n</code></pre>\\n<p>In BrightScript, the same calculation might be:</p>\\n<pre><code>dt = CreateObject(\\\"roDateTime\\\")\\ndt.fromISO8601String(\\\"7/4/2010T11:30:00.000\\\")\\nitemContentMetaData.PlayStart = dt. asSeconds() - 1072915200 '205327800\\n</code></pre>\\n<ol>\\n<li>\\n<p>In Roku OS version 2.6, we've introduced support for SRT files. Please see the content meta-data parameter SubtitleUrl for pointing to a matching SRT file for your video content.</p>\\n</li>\\n<li>\\n<p>In Roku OS version 2.7, we've introduced 1080p support. Please see the content meta-data parameter FullHD for specifying 1080p resolution. Playback at 1080p resolution will only occur when the user has set the display type to HDTV 1080p. Another content meta-data parameter, FrameRate, specifies the frames per second of the video. Valid values are 24 and 30. If the user's display type is set to 1080p and FullHD for the content is false or not set, HD playback will be at 720p resolution. If the user's display type is set to HDTV 720p and FullHD content is set to 1080p resolution, the box will downscale the content to 720p resolution.</p>\\n</li>\\n</ol>\\n<p><strong>Example</strong></p>\\n<pre><code>'**********************************************************************\\n' This example function is passed an associative array representing a ' piece of content (e.g. a TV episode) There are other attributes\\n' (title, description, etc.) but this example focuses on showing\\n' attributes required for initiating playback. It creates a video\\n' screen, sets the content and starts playback by calling Show()\\n'**********************************************************************\\nFunction showVideoScreen(episode As Object)\\n    if type(episode) &#x3C;> \\\"roAssociativeArray\\\" then\\n        print \\\"invalid data passed to showVideoScreen\\\"\\n        return -1\\n    endif\\n    port = CreateObject(\\\"roMessagePort\\\")\\n    screen = CreateObject(\\\"roVideoScreen\\\")\\n   ' Note: HDBranded controls whether the \\\"HD\\\" logo is displayed for a\\n   '       title. This is separate from IsHD because its possible to\\n' have an HD title where you don't want to show the HD logo\\n' branding for the title. Set these two as appropriate for\\n' your content\\n   episode.HDBranded = false\\n   episode.IsHD = false\\n   ' Note: The preferred way to specify stream info in v2.6 is to use\\n' the Stream roAssociativeArray content meta data parameter.\\n\\nepisode.Stream = { url:\\\"http://myserver.mydomain.com/mycontent.mp4\\\",\\nbitrate:2000\\nquality:false\\ncontentid:\\\"mycontent-2000\\\"\\n}\\nepisode.StreamFormat: \\\"mp4\\\"\\n   ' now just tell the screen about the title to be played, set the\\n   ' message port for where you will receive events and call show to\\n   ' begin playback.  You should see a buffering screen and then\\n   ' playback will start immediately when we have enough data buffered.\\n    screen.SetContent(episode)\\n    screen.SetMessagePort(port)\\n    screen.Show()\\n   ' Wait in a loop on the message port for events to be received.\\n   ' We will just quit the loop and return to the calling function\\n   ' when the users terminates playback, but there are other things\\n   ' you could do here like monitor playback position and see events\\n   ' from the streaming player.  Look for status messages from the video\\n   ' player for status and failure events that occur during playback\\n    while true\\n       msg = wait(0, port)\\n\\n       if type(msg) = \\\"roVideoScreenEvent\\\" then\\n           print \\\"showVideoScreen | msg = \\\"; msg.GetMessage() \\\" | index = \\\"; msg.GetIndex()\\n           if msg.isScreenClosed()\\n               print \\\"Screen closed\\\"\\n               exit while\\n            else if msg.isStatusMessage()\\n                  print \\\"status message: \\\"; msg.GetMessage()\\n            else if msg.isPlaybackPosition()\\n                  print \\\"playback position: \\\"; msg.GetIndex()\\n            else if msg.isFullResult()\\n                  print \\\"playback completed\\\"\\n                  exit while\\n            else if msg.isPartialResult()\\n                  print \\\"playback interrupted\\\"\\n                  exit while\\n            else if msg.isRequestFailed()\\n                  print \\\"request failed - error: \\\"; msg.GetIndex();\\\" - \\\"; msg.GetMessage()\\n                  exit while\\n            end if\\n       end if\\n    end while\\nEnd Function\\n</code></pre>\\n<h4 id=\\\"closed-captions\\\">Closed captions</h4>\\n<p>roVideoScreen supports a variety of options for displaying closed captions. Refer to <a href=\\\"/docs/specs/media/streaming-specifications.md\\\" title=\\\"Closed Caption Support\\\">Closed Caption Support</a> for complete details.</p>\\n<h4 id=\\\"id3-tag-support\\\">ID3 Tag Support</h4>\\n<p>The 5.2 firmware release added ID3 tag support to the Roku platform to provide access to timed metadata that may be included in ausio and video streams.  In addition to roVideoScreen, support for ID3 tags is also available in roVideoPlayer and roAudioPlayer.  Timed metadata is used to embed information such as ad tracking beacons, links to additional information about the content being played such as IMDB entries of movies, player stats in sports channels, current song album art, or any other metadata with associated timecodes that match the audio or video.  Roku supports ID3 tags in HLS, Smooth Streams, MPEG-4 video and MP3 audio.</p>\\n<p>A BrightScript channel registers its interest ID3 tags in a stream by calling the SetTimedMetaDataForKeys() function defined on the ifVideoScreen, ifVideoPlayer, and ifAudioPlayer interfaces.  The channel passes an array of metadata key names to this function that corresponds to the set of metadata the channel wants to read.  When the PTS timecode of an ID3 tag equals the current PTS, the video or audio player component fires an isTimedMetaData() event which contains the details of the metadata.  See <a href=\\\"/docs/references/brightscript/events/rovideoplayerevent.md\\\" title=\\\"roVideoPlayerEvent\\\">roVideoPlayerEvent</a> and <a href=\\\"/docs/references/brightscript/interfaces/ifvideoscreen.md#settimedmetadataforkeyskeys-as-dynamic-as-void\\\" title=\\\"SetTimedMetaDataForKeys\\\">SetTimedMetaDataForKeys</a> for details.</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifvideoscreen.md\\\" title=\\\"ifVideoScreen\\\">ifVideoScreen</a>                 </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifhttpagent.md\\\" title=\\\"ifHttpAgent\\\">ifHttpAgent</a>                    </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\" title=\\\"ifSetMessagePort\\\">ifSetMessagePort</a>               </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifgetmessageport.md\\\" title=\\\"ifGetMessagePort\\\">ifGetMessagePort</a>               </li>\\n</ul>\\n<h2 id=\\\"supported-events\\\">Supported events</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/events/rovideoscreenevent.md\\\" title=\\\"roVideoScreenEvent\\\">roVideoScreenEvent</a>              </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roxmlelement.md":"{\n  \"content\": \"<h1 id=\\\"roxmlelement\\\">roXMLElement</h1>\\n<p>roXMLElement is used to contain an XML tree. </p>\\n<p>For instance,</p>\\n<pre><code>&#x3C;tag1>this is some text&#x3C;/tag1>\\n</code></pre>\\n<p>Would parse such that:</p>\\n<pre><code>    Name = \\\"tag1\\\"\\n    Attributes = invalid\\n    Body = roString with \\\"this is some text\\\"\\n</code></pre>\\n<p><strong>Example</strong></p>\\n<pre><code>&#x3C;emptytag caveman=\\\"barney\\\" /> \\n</code></pre>\\n<p>Would parse such that:</p>\\n<pre><code>    Name = \\\"emptytag\\\"\\n    Attributes = roAssociativeArray, with one entry { caveman: \\\"barney\\\" }\\n    Body = invalid\\n</code></pre>\\n<p>If the tag contains other tags, body will be of type roXMLList. </p>\\n<p>To generate XML, create an roXMLElement, then use functions like SetName(), AddAttribute(), SetBody(), AddElementWithBody(), AddElement(), AddBodyElement(), and AddText() functions to build the XML object hierarchy.</p>\\n<p>Then call GenXML() to return the XML as a string.</p>\\n<p>GenXML() takes one parameter (boolean) that indicates whether the generated xml should have the &#x3C;?xml …> tag at the top.</p>\\n<p><strong>Example: Subroutine to print out the contents of an roXMLElement tree</strong></p>\\n<pre><code>PrintXML(root, 0)\\n\\nSub PrintXML(element As Object, depth As Integer)\\n    print tab(depth*3);\\\"Name: \\\";element.GetName()\\n    if not element.GetAttributes().IsEmpty() then\\n        print tab(depth*3);\\\"Attributes: \\\";\\n        for each a in element.GetAttributes()\\n            print a;\\\"=\\\";left(element.GetAttributes()[a], 20);\\n            if element.GetAttributes().IsNext() then print \\\", \\\";\\n        end for\\n        print\\n    end if\\n    if element.GetText()&#x3C;>invalid then\\n        print tab(depth*3);\\\"Contains Text: \\\";left(element.GetText(), 40)\\n    end if\\n    if element.GetChildElements()&#x3C;>invalid\\n        print tab(depth*3);\\\"Contains roXMLList:\\\"\\n        for each e in element.GetChildElements()\\n            PrintXML(e, depth+1)\\n        end for\\n    end if\\n    print\\nend sub\\n</code></pre>\\n<p><strong>Example: Generating XML</strong></p>\\n<pre><code>root.SetName(\\\"myroot\\\")\\nroot.AddAttribute(\\\"key1\\\", \\\"value1\\\")\\nroot.AddAttribute(\\\"key2\\\", \\\"value2\\\")\\nne = root.AddBodyElement()\\nne.SetName(\\\"sub\\\")\\nne.SetBody(\\\"this is the sub1 text\\\")\\nne = root.AddBodyElement()\\nne.SetName(\\\"subelement2\\\")\\nne.SetBody(\\\"more sub text\\\")\\nne.AddAttribute(\\\"k\\\", \\\"v\\\")\\nne = root.AddElement(\\\"subelement3\\\")\\nne.SetBody(\\\"more sub text 3\\\")\\nroot.AddElementWithBody(\\\"sub\\\", \\\"another sub (#4)\\\")\\nPrintXML(root, 0)\\nprint root.GenXML(false)\\n</code></pre>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifxmlelement.md\\\" title=\\\"ifXMLElement\\\">ifXMLElement</a>        </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/components/roxmllist.md":"{\n  \"content\": \"<h1 id=\\\"roxmllist\\\">roXMLList</h1>\\n<p>Contains a list of roXML objects.</p>\\n<p>Normally roXMLList objects are not created via CreateObject(), but are returned from various ifXMLElement functions such as GetChildElements() and GetBod</p>\\n<h2 id=\\\"supported-interfaces\\\">Supported interfaces</h2>\\n<ul>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iflist.md\\\" title=\\\"ifList\\\">ifList</a>                    </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/ifxmllist.md\\\" title=\\\"ifXMLList\\\">ifXMLList</a>                  </li>\\n<li><a href=\\\"/docs/references/brightscript/interfaces/iflisttoarray.md\\\" title=\\\"ifListToArray\\\">ifListToArray</a>             </li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifappinfo.md":"{\n  \"content\": \"<h1 id=\\\"ifappinfo\\\">ifAppInfo</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>roAppInfo</td>\\n<td>Returns information about the application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getid-as-string\\\">GetID() As String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the app's channel ID.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Channel ID; e.g., \\\"12345\\\" or \\\"dev\\\"</p>\\n<h3 id=\\\"isdev-as-boolean\\\">IsDev() As Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns true if the application is sideloaded, i.e. the channel ID is \\\"dev\\\".</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>True/ False</p>\\n<h3 id=\\\"getversion-as-string\\\">GetVersion() As String</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the conglomerate version number from the manifest, as formatted major_version + minor_version + build_version.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>Channel version number. e.g. \\\"1.2.3\\\"</p>\\n<h3 id=\\\"gettitle-as-string\\\">GetTitle() As String</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the title value from the manifest.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>Title of the channel</p>\\n<h3 id=\\\"getsubtitle-as-string\\\">GetSubtitle() As String</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the subtitle value from the manifest.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>Possible subtitle configuration</p>\\n<h3 id=\\\"getdevid-as-string\\\">GetDevID() As String</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns the app's developer ID, or the keyed developer ID, if the application is sideloaded.</p>\\n<blockquote>\\n<p>If the device has not been keyed, this method returns \\\"34c6fceca75e456f25e7e99531e2425c6c1de443\\\" for sideloaded channels.</p>\\n</blockquote>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>Channel's Developer ID</p>\\n<h3 id=\\\"getvaluekey-as-string-as-string\\\">GetValue(key As String) As String</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the named manifest value, or an empty string if the entry is does not exist.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Key</td>\\n<td>String</td>\\n<td>The manifest value to be returned.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>Manifest value; empty string</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifappmanager.md":"{\n  \"content\": \"<h1 id=\\\"ifappmanager\\\">ifAppManager</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roappmanager.md\\\" title=\\\"roAppManager\\\">roAppManager</a></td>\\n<td>Returns information about the application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setthemeattributearray-as-object-as-void\\\">SetTheme(attributeArray as Object) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets a group of theme attributes for the application.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>attributeArray</td>\\n<td>Object</td>\\n<td>The attributeArray is an <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> of attribute/value pairs. The program may create the roAssociativeArray at runtime or read it from an XML file using the <a href=\\\"/docs/references/brightscript/components/roxmlelement.md\\\" title=\\\"roXMLElement\\\">roXMLElement</a> object. Existing values for attributes will be overwritten by the values provided. Any values set by a previous SetTheme or SetThemeAttribute call, but not included in the array currently provided by with the subsequent call will remain unchanged. See <a href=\\\"/docs/references/brightscript/components/roappmanager.md\\\" title=\\\"roAppManager\\\">roAppManager</a> the list of valid attributes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setthemeattributeattributename-as-string-attributevalue-as-string-as-void\\\">SetThemeAttribute(attributeName as String, attributeValue as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Set an individual theme attribute for the application.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>attributeValue</td>\\n<td>String</td>\\n<td>This attributeValue will override the default value for that attribute or modify the value provided by a previous SetTheme or SetThemeAttribute call to the new value provided.</td>\\n</tr>\\n<tr>\\n<td>attributeName</td>\\n<td>String</td>\\n<td>The attributeName is the name of one of the settable theme attributes and the value is the desired setting. If the attributeName is not valid, no action is performed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearthemeattributeattributename-as-string-as-void\\\">ClearThemeAttribute(attributeName as String) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Clears a previously set attribute and reverts to its default value.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>attributeName</td>\\n<td>String</td>\\n<td>The theme attribute to be cleared.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getuptime-as-object\\\">GetUptime() as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/rotimespan.md\\\" title=\\\"roTimespan\\\">roTimespan</a> object, which is \\\"marked\\\" when the user clicked on the application button on the home screen.Calling the TotalMilliseconds() method on the returned roTimespan object returns the total number of milliseconds since the application started.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/rotimespan.md\\\" title=\\\"roTimespan\\\">roTimespan</a> object.</p>\\n<h3 id=\\\"getscreensavertimeout-as-integer\\\">GetScreensaverTimeout() as Integer</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the user's screensaver wait time setting in number of minutes, or zero if the screensaver is disabled.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The number of minutes set for the screensaver wait time.</p>\\n<h3 id=\\\"setusersignedinsignedin-as-boolean-as-void\\\">SetUserSignedIn(signedIn as Boolean) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>This method allows a channel to tell Roku when the user is signed in or signed out of the channelIf the channel is removed, the Roku OS will call SetUserSignedIn(false) on the channel's behalf.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>signedIn</td>\\n<td>Boolean</td>\\n<td>Set to true to indicate that the user is signed in; set to false to indicate the user is signed out.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setautomaticaudioguideenabledenabled-as-boolean-as-void\\\">SetAutomaticAudioGuideEnabled(enabled as Boolean) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Enables or disables automatic Audio Guide and override any manifest setting.This is useful for channels that want to temporarily turn off automatic Audio Guide for specific screens.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enabled</td>\\n<td>Boolean</td>\\n<td>A flag indicating whether to enable or disable the automatic audio guide.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"launchappchannelid-as-string-version-as-string-params-as-object-as-void\\\">LaunchApp(channelID as String, version as String, params as Object) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Launches the channel with the specified channelID and the specified version, with the playback experience upon launching the channel based on the provided params.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>channelId</td>\\n<td>String</td>\\n<td>The unique ID of the channel to be launched.</td>\\n</tr>\\n<tr>\\n<td>version</td>\\n<td>String</td>\\n<td>The minimum version of the channel required to launch the channel. If the specified version (or later) is not being used, the channel is not launched. To skip the version check, pass an empty string.</td>\\n</tr>\\n<tr>\\n<td>params</td>\\n<td>roAssociative Array</td>\\n<td>Key-value pairs specifying the playback experience upon launching the channel. <br /><br />For example, if deep linking parameters are passed into the method, the content ID specifies the content to be played upon launching the channel, and the mediaType determines whether the content is launched directly into playback, launched into playback using bookmarks, or an episode selection screen for the content is displayed).<br /><br />To launch the channel store springboard of a channel, use the <strong>ShowChannelStoreSpringboard()</strong> method. You can also do this by passing  a channelID of \\\"11\\\" is passed into this method (<code>LaunchApp(\\\"11\\\", \\\"\\\", params)</code>). In this case, the params field would include a content ID (<code>params = {contentID: \\\"myAwesomeMovie_123\\\"}</code>).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"showchannelstorespringboardchannelid-as-string-as-void\\\">ShowChannelStoreSpringboard(channelID As String) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Launches the channel store springboard of the specified channel. The channel store springboard contains detailed information about the channel, including ratings, version, date of last update, developer name, and a description.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>channelId</td>\\n<td>String</td>\\n<td>The unique ID of the channel to be launched.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isappinstalledchannelid-as-string-version-as-string-as-boolean\\\">IsAppInstalled(channelID as String, version As String) as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>This method returns true if a channel with the specified channelID and the minimum version required is installed.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>channelID</td>\\n<td>String</td>\\n<td>The unique id of the channel.</td>\\n</tr>\\n<tr>\\n<td>version</td>\\n<td>String</td>\\n<td>The minimum version number of the channel to be used for the query.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A boolean indicating whether the specified channel is installed.</p>\\n<h3 id=\\\"setnowplayingcontentmetadatacontentmetadata-as-object-as-void\\\">SetNowPlayingContentMetaData(contentMetaData as Object) as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Updates video or audio <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\">content metadata</a> during playback. This method takes a subset of content metadata parameters to be updated. These values override any previously ones sent to the Roku Media Player, and they are used until this function is called again or until the <a href=\\\"/docs/references/brightscript/components/roappmanager.md\\\"><strong>roAppManager</strong></a> instance is deleted.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentMetaData</td>\\n<td>roAssociativeArray</td>\\n<td>The video or audio <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\">content metadata</a> parameters to be updated (for example, the title and contentType)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>appmgr = CreateObject(\\\"roAppManager\\\")\\nappmgr.SetNowPlayingContentMetaData({\\n title: \\\"The Gambler\\\",\\n contentType: \\\"movie\\\"\\n})\\n</code></pre>\\n<p>To revert an update, pass <code>invalid</code> in this method:</p>\\n<pre><code>appmgr.SetNowPlayingContentMetaData(invalid)\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifarray.md":"{\n  \"content\": \"<h1 id=\\\"ifarray\\\">ifArray</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a></td>\\n<td>An array stores an indexed collection of BrightScript objects. Each entry of an array can be a different type, or they may all of the same type</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a></td>\\n<td>The byte array component is used to contain and manipulate an arbitrary array of bytes</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a></td>\\n<td>The list object implements the interfaces: ifList, ifArray, ifEnum and therefore can behave like an array that can dynamically add members</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a></td>\\n<td>Contains a list of roXML objects</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"peek-as-dynamic\\\">Peek() As Dynamic</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the last (highest index) array entry without removing it. If the array is empty, returns invalid</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Invalid</p>\\n<h3 id=\\\"pop-as-dynamic\\\">Pop() As Dynamic</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the last entry (highest index) from the array and removes it from the array. If the array is empty, returns invalid and does not change the array.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The last (highest index) array entry.</p>\\n<h3 id=\\\"pushtvalue-as-dynamic-as-void\\\">Push(tvalue As Dynamic) As Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Adds the specified value to the end of the array.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>tvalue</td>\\n<td>Dynamic</td>\\n<td>The value to be added to the beginning of the array.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"shift-as-dynamic\\\">Shift() As Dynamic</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Removes the first entry (zero index) from the beginning of the array and shifts the other entries up. This method is similar to the <a href=\\\"#pushtvalue-as-dynamic-as-void\\\">Pop method</a>, but removes the first entry in the array instead of the last.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The first entry (zero index) removed from the array.</p>\\n<h3 id=\\\"unshifttvalue-as-dynamic-as-void\\\">Unshift(tvalue As Dynamic) As Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds the specified value to the beginning of the array (at the zero index) and shifts the other entries down. This method is similar to the <a href=\\\"#push-as-dynamic\\\">Push method</a>, but removes the first entry in the array instead of the last. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>tvalue</td>\\n<td>Dynamic</td>\\n<td>The value to be added to the beginning of the array.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"deleteindex-as-integer-as-boolean\\\">Delete(index as Integer) As Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Deletes the indicated array entry, and shifts all entries up. This decreases the array length by one.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the specified array entry has been removed.  If the entry was successfully deleted, returns true. If index is out of range, returns false and does not change the array. </p>\\n<h3 id=\\\"count-as-integer\\\">Count() As Integer</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the length of the array, which is one more than the index of highest entry.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The length of the array. </p>\\n<h3 id=\\\"clear-as-void\\\">Clear() As Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Deletes all the entries in the array.</p>\\n<h3 id=\\\"appendarray-as-object-as-void\\\">Append(array As Object) As Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Appends the entries in one <strong>roArray</strong> to another. If the passed array contains entries that have not been set to a value, they are not appended.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>array</td>\\n<td>Object</td>\\n<td>The <strong>roArray</strong> to be appended to the target array.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifarrayget.md":"{\n  \"content\": \"<h1 id=\\\"ifarrayget\\\">ifArrayGet</h1>\\n<p>The ifArrayGet interface supports the array indexing operator [ ]</p>\\n<p>(See <a href=\\\"/docs/references/brightscript/language/expressions-variables-types.md#effects-of-type-conversions-on-accuracy\\\" title=\\\"Array Operator\\\">Array Operator</a>)</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a></td>\\n<td>An array stores an indexed collection of BrightScript objects. Each entry of an array can be a different type, or they may all of the same type</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a></td>\\n<td>The byte array component is used to contain and manipulate an arbitrary array of bytes</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a></td>\\n<td>The list object implements the interfaces: ifList, ifArray, ifEnum and therefore can behave like an array that can dynamically add members</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a></td>\\n<td>Contains a list of roXML objects</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getentryindex-as-integer-as-dynamic\\\">GetEntry(index As Integer) As Dynamic</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns an array entry based on the provided index.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the array entry to be returned.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The array entry corresponding to the provided index, or invalid if the entry has not been set.  </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifarrayjoin.md":"{\n  \"content\": \"<h1 id=\\\"ifarrayjoin\\\">ifArrayJoin</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a></td>\\n<td>Returns information about the application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"joinseparator-as-string-as-string\\\">Join(separator as String) as String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Creates a string by joining all array elements together separated by the specified separator. All elements must be of type string; otherwise, an empty string is returned</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>separator</td>\\n<td>String</td>\\n<td>The string used to separate elements in an array.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A String containing the array elements. </p>\\n<h4 id=\\\"examples\\\">Examples</h4>\\n<pre><code>    a = [\\\"ant\\\",\\\"bat\\\",\\\"cat\\\"] \\n    s = a.Join(\\\",\\\")\\n    print \\\"\\\"\\\"\\\" + s + \\\"\\\"\\\"\\\"\\n    REM \\\"ant,bat,cat\\\"\\n\\n    a = \\\"abc\\\".Split(\\\"\\\")\\n    s = a.Join(\\\"--\\\")\\n    print \\\"\\\"\\\"\\\" + s + \\\"\\\"\\\"\\\"\\n    REM \\\"a--b--c\\\"\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifarrayset.md":"{\n  \"content\": \"<h1 id=\\\"ifarrayset\\\">ifArraySet</h1>\\n<p>The ifArraySet interface supports the array indexing operator [].</p>\\n<p>(See ArrayOperator)</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a></td>\\n<td>An array stores an indexed collection of BrightScript objects. Each entry of an array can be a different type, or they may all of the same type</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a></td>\\n<td>The byte array component is used to contain and manipulate an arbitrary array of bytes</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a></td>\\n<td>The list object implements the interfaces: ifList, ifArray, ifEnum and therefore can behave like an array that can dynamically add members</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a></td>\\n<td>Contains a list of roXML objects</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setentryindex-as-integer-tvalue-as-dynamic-as-void\\\">SetEntry(index As Integer, tvalue As Dynamic) As Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets an entry at a given index to the passed value. If index is beyond the bounds of the array, the array is expanded to accommodate it.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The entry to be updated.</td>\\n</tr>\\n<tr>\\n<td>tvalue</td>\\n<td>Dynamic</td>\\n<td>The new value for the specified entry.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifarraysort.md":"{\n  \"content\": \"<h1 id=\\\"ifarraysort\\\">ifArraySort</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a></td>\\n<td>Returns information about the application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"sortflags-as-string---as-void\\\">Sort(flags as String = \\\"\\\") as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p> Performs a stable sort on an array. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>flags</td>\\n<td>Dynamic</td>\\n<td>Items are arbitrarily grouped by comparable type of number or string, and are sorted within the group with a logical comparison.<br /><br />If \\\"r\\\" is included in flags, a reverse sort is performed. If \\\"i\\\" is included in flags, a case-insensitive sort is performed. If invalid flags are specified, the sort is not performed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"examples\\\">Examples</h4>\\n<pre><code>    a=[3, 1, 2] \\n    a.Sort()\\n    print a  \\n    REM sets the array to [1, 2, 3]\\n\\n    a=[3, 1, 2.5] \\n    a.Sort(\\\"r\\\")  REM reverse order sort\\n    print a\\n    REM sets the array to [3, 2.5, 1]\\n\\n    a=[\\\"cat\\\", \\\"DOG\\\", \\\"bee\\\"] \\n    a.Sort()  REM case-sensitive sort by default\\n    print a\\n    REM sets the array to [\\\"DOG\\\", \\\"bee\\\", \\\"cat\\\"]\\n\\n    a=[\\\"cat\\\", \\\"DOG\\\", \\\"bee\\\"]  \\n    a.Sort(\\\"i\\\")  REM case-insensitive sort\\n    print a\\n    REM sets the array to [\\\"bee\\\", \\\"cat\\\", \\\"DOG\\\"]\\n\\n    a=[\\\"cat\\\", \\\"DOG\\\", \\\"bee\\\"]  \\n    a.Sort(\\\"ir\\\")  REM case-insensitive, reverse order sort\\n    print a\\n    REM sets the array to [\\\"DOG\\\", \\\"cat\\\", \\\"bee\\\"]\\n</code></pre>\\n<h3 id=\\\"sortbyfieldname-as-string-flags-as-string---as-void\\\">SortBy(fieldName as String, flags as String = \\\"\\\") as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Performs a stable sort of an array of associative arrays by value of a common field.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The field to be used for sorting.</td>\\n</tr>\\n<tr>\\n<td>flags</td>\\n<td>Dynamic</td>\\n<td>Items are arbitrarily grouped by comparable type of number or string, and are sorted within the group with a logical comparison.<br /><br />If \\\"r\\\" is included in flags, a reverse sort is performed. If \\\"i\\\" is included in flags, a case-insensitive sort is performed. If invalid flags are specified, the sort is not performed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"examples-1\\\">Examples</h4>\\n<pre><code>    a=[ {id:3, name:\\\"Betty\\\"}, {id:1, name:\\\"Carol\\\"}, {id:2, name:\\\"Anne\\\"} ]\\n    a.SortBy(\\\"name\\\") \\n    REM sets the array to [ {id:2, name:\\\"Anne\\\"}, {id:3, name:\\\"Betty\\\"}, {id:1, name:\\\"Carol\\\"} ]\\n    a.SortBy(\\\"id\\\") \\n    REM sets the array to [ {id:1, name:\\\"Carol\\\"}, {id:2, name:\\\"Anne\\\"}, {id:3, name:\\\"Betty\\\"} ]\\n    a.SortBy(\\\"name\\\", \\\"r\\\")  REM reverse order sort\\n    REM sets the array to [ {id:1, name:\\\"Carol\\\"}, {id:3, name:\\\"Betty\\\"}, {id:2, name:\\\"Anne\\\"} ]\\n</code></pre>\\n<h3 id=\\\"reverse-as-void\\\">Reverse() as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Reverses the order of elements in an array.</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>    a=[1, \\\"one\\\", 2, \\\"two\\\"] \\n    a.Reverse() \\n    REM sets the array to [\\\"two\\\", 2, \\\"one\\\", 1]\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifassociativearray.md":"{\n  \"content\": \"<h1 id=\\\"ifassociativearray\\\">ifAssociativeArray</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a></td>\\n<td>An associative array allows objects to be associated with string keys</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNode\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"addreplacekey-as-string-value-as-dynamic-as-void\\\">AddReplace(key as String, value as Dynamic) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Adds a new entry to the array associating the supplied value with the supplied key string. Only one value may be associated with a key. If the key is already associated with a value, the existing value is discarded.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>value</td>\\n<td>Dynamic</td>\\n<td>The value of the key to be added to the associative array.</td>\\n</tr>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key to be added to the associative array.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"lookupkey-as-string-as-dynamic\\\">Lookup(key as String) as Dynamic</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the value in the array associated with the specified key. The key comparison is case-insensitive, unless the <strong>SetModeCaseSensitive()</strong> method has been called.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key associated with the value to be retrieved from the associative array.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Returns the value in the array associated with the specified key. If there is no value associated with the key,   the type \\\"invalid\\\" is returned. </p>\\n<h3 id=\\\"lookupcikey-as-string-as-dynamic\\\">LookupCI(key as String) as Dynamic</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Same as the <a href=\\\"#lookupkey-as-string-as-dynamic\\\">Lookup()</a> method except that the key comparison is always case insensitive, regardless of the case mode.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key (case-insensitive) associated with the value to be retrieved from the associative array.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Returns the value in the array associated with the specified key. If there is no value associated with the key,   the type \\\"invalid\\\" is returned. </p>\\n<h3 id=\\\"doesexistkey-as-string-as-boolean\\\">DoesExist(key as String) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Looks for an entry in the associative array associated with the specified key. </p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key associated with the entry to be checked.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether an entry is associated with the specified key exists. If there is no associated object then false is returned. If there is such an object then true is returned.</p>\\n<h3 id=\\\"deletekey-as-string-as-boolean\\\">Delete(key as String) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Deletes an entry from an associative array based on the key. </p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key associated with the entry to be deleted.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether an entry is associated with the specified key exists. If there is no associated object then false is returned. If there is such an object then true is returned.</p>\\n<h3 id=\\\"clear-as-void\\\">Clear() as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Remove all key/values from the associative array. </p>\\n<h3 id=\\\"keys-as-object\\\">Keys() as Object</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns an array containing the associative array keys in lexicographical order. </p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>An array of associative array keys.</p>\\n<h3 id=\\\"items-as-object\\\">Items() as Object</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns an array containing the associative array key/value pairs in lexicographical order of key. </p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>An array of associative array keys/value pairs. </p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>    aa = {one:1, two:2, three:3}\\n    for each item in aa.Items()\\n        print item.key, item.value\\n    end for\\n    REM prints \\\"one  1\\\", \\\"three  3\\\", \\\"two  2\\\"\\n</code></pre>\\n<h3 id=\\\"setmodecasesensitive-as-void\\\">SetModeCaseSensitive() as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Makes all subsequent associative array lookups case sensitive (by default, lookups are case insensitive).</p>\\n<h3 id=\\\"appendaa-as-object\\\">Append(aa as Object)</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Appends an associative array to this calling object. If any key in the <strong>aa</strong> parameter is already associated with a value in the calling object, the current value is discarded and is replaced with the value provided in the <strong>aa</strong> parameter. </p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>aa</td>\\n<td>Object</td>\\n<td>The associative array to be appended to the calling object.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"count-as-integer\\\">Count() As Integer</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Returns the number of keys in the associative array. </p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The number of keys in the associative array.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifaudioguide.md":"{\n  \"content\": \"<h1 id=\\\"ifaudioguide\\\">ifAudioGuide</h1>\\n<blockquote>\\n<p>Please note this component is only available on the following devices: Roku Streaming Stick (3600X), Roku Express (3700X) and Express+ (3710X), Roku Premiere (4620X) and Premiere+ (4630X), Roku Ultra (4640X), and any Roku TV running Roku OS version 7.5 and later.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roaudioguide.md\\\" title=\\\"roAudioGuide\\\">roAudioGuide</a></td>\\n<td>Returns information about the application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"saytext-as-string-flushspeech-as-boolean-dontrepeat-as-boolean-as-integer\\\">Say(text as String, flushSpeech as Boolean, dontRepeat as Boolean) as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns an ID for the spoken string to notify observer callbacks about a specific spoken string. This ID can be used with the <a href=\\\"/docs/references/brightscript/events/rotexttospeechevent.md\\\" title=\\\"roTextToSpeechEvent\\\">roTextToSpeechEvent</a>.This method will automatically split up text to reduce lag. Due to this automatic splitting, the roTextToSpeechEvent 0 (\\\"Started speech\\\") event for the returned ID may not be sent until later than expected. The roTextToSpeechEvents 1 (\\\"Speech has completed\\\") and 2 (\\\"Speech has been flushed\\\") events are sent at the expected times.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The string to be spoken.</td>\\n</tr>\\n<tr>\\n<td>flushSpeech</td>\\n<td>Boolean</td>\\n<td>Set to true to make the Audio Guide immediately stop speaking any other speech before speaking. <br /><br />Set to false to make the Audio Guide wait until any current speech is done before speaking.</td>\\n</tr>\\n<tr>\\n<td>dontRepeat</td>\\n<td>Boolean</td>\\n<td>Set to true to ignore calls to the say() method with the same text.<br /><br />Set to false to speak when calls to the say() method are sent with the same text.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An ID associated with the spoken string to be used to notify observer callbacks.</p>\\n<h3 id=\\\"flush\\\">Flush()</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Interrupts and stops any current text to speech spoken string, to be used when the application does not want the text to speech to continue.</p>\\n<blockquote>\\n<p>This call is equivalent to the <a href=\\\"/docs/references/brightscript/interfaces/iftexttospeech.md#flush\\\">roTextToSpeech.Flush()</a> method, and stops speech started by the <a href=\\\"#saytext-as-string-flushspeech-as-boolean-dontrepeat-as-boolean-as-integer\\\">roAudioGuide.Say()</a> and <a href=\\\"/docs/references/brightscript/interfaces/iftexttospeech.md#saytext-as-string-as-integer\\\">roTextToSpeech.Say()</a> methods.</p>\\n</blockquote>\\n<h3 id=\\\"silenceduration-as-integer-as-integer\\\">Silence(duration as Integer) as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>If Audio Guide is enabled, causes text to speech to continue to suppress any application background sound for the amount of time specified by duration (in milliseconds).This can be used to add clarity for longer spoken text that may have pauses that might otherwise allow application background sound to be heard. This method does nothing if Audio Guide is currently disabled.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>duration</td>\\n<td>Integer</td>\\n<td>The number of milliseconds to suppress application background sounds.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The number of milliseconds that the background sound has been silenced. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifaudiometadata.md":"{\n  \"content\": \"<h1 id=\\\"ifaudiometadata\\\">ifAudioMetadata</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roaudiometadata.md\\\" title=\\\"roAudioMetadata\\\">roAudioMetadata</a></td>\\n<td>This component provides developers access to audio file metadata included in many audio files</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"seturlurl-as-string-as-void\\\">SetUrl(url as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the URL to the audio file. Only file URLs are initially supported</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>url</td>\\n<td>String</td>\\n<td>The URL of the audio file.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"gettags-as-object\\\">GetTags() as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns an associative array that contains a simple set of tags that are common to most audio formats.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An associative array that may be set to one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Notes</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>artist</td>\\n<td>String</td>\\n<td>Returns the first artist found even though many titles have multiple artists</td>\\n</tr>\\n<tr>\\n<td>album</td>\\n<td>String</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>composer</td>\\n<td>String</td>\\n<td>Returns the first composer found even though many titles have multiple composers</td>\\n</tr>\\n<tr>\\n<td>comment</td>\\n<td>String</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>genre</td>\\n<td>String</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>year</td>\\n<td>Integer</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>track</td>\\n<td>Integer</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getaudioproperties-as-object\\\">GetAudioProperties() as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns an associative array with a simple set of audio properties.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An associative array that may be set to one of the following values (these are values that may involve reading a larger portion of the file and thus may take longer to retrieve than tags):</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>Duration in seconds</td>\\n</tr>\\n<tr>\\n<td>bitrate</td>\\n<td>Integer</td>\\n<td>In kilobytes per second</td>\\n</tr>\\n<tr>\\n<td>samplerate</td>\\n<td>Integer</td>\\n<td>Samples per second. For example: 44100 for CD sample rate</td>\\n</tr>\\n<tr>\\n<td>channels</td>\\n<td>Integer</td>\\n<td>Number of channels. For example: 2 for stereo</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getcoverart-as-object\\\">GetCoverArt() as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the cover art, if available.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An associative array with two entries: \\\"bytes\\\" and \\\"type\\\".</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifaudioplayer.md":"{\n  \"content\": \"<h1 id=\\\"ifaudioplayer\\\">ifAudioPlayer</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roaudiometadata.md\\\" title=\\\"roAudioMetadata\\\">roAudioMetadata</a></td>\\n<td>The Audio Player object provides the ability to setup the playing of a series of audio streams</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setcontentlistcontentlist-as-object-as-void\\\">SetContentList(contentList as Object) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the content list to be played by the Audio Player.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<p>An array of associative arrays (Content Meta-Data objects) representing the information for each stream to be played. See <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">Content Meta-Data</a> for details on the attributes for each element in the array.</p>\\n<h3 id=\\\"addcontentcontentitem-as-object-as-void\\\">AddContent(contentItem as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Adds a new ContentMetaData item to the end of the content list for the Audio Player. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentItem</td>\\n<td>Object</td>\\n<td>The new ContentMetaData item to be added to the content list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearcontent-as-void\\\">ClearContent() as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Clears the content list.</p>\\n<h3 id=\\\"play-as-boolean\\\">Play() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Puts the Audio Player into play mode starting at the current item in the Content List. This will stop any currently playing content.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the Audio Player was successfully set to play mode. </p>\\n<h3 id=\\\"stop-as-boolean\\\">Stop() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Stops the Audio Player from playing or pausing and cleanup.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the Audio Player was successfully stopped. </p>\\n<h3 id=\\\"pause-as-boolean\\\">Pause() as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Puts the Audio Player into pause mode. It is an error to Pause if player is not in play mode.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the Audio Player was successfully set to pause mode.</p>\\n<h3 id=\\\"resume-as-boolean\\\">Resume() as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Puts the Audio Player into play mode starting from the pause point. It is an error to Resume if the player is not in pause mode.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the Audio Player was successfully set to play mode.</p>\\n<h3 id=\\\"setloopenable-as-boolean-as-void\\\">SetLoop(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Enables/disables the automatic replaying of the Content List.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>Set to true to have the Audio Player automatically begin playing the first item in the content list after playing the last item.<br /><br />Set to false to have the Audio Player stop after playing the last item in the content list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setnextitem-as-integer-as-void\\\">SetNext(item as Integer) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Sets the next item in the Content List to be played.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>item</td>\\n<td>Integer</td>\\n<td>Item is the zero-based index of the item in the content list. This item will be played after the currently playing item finishes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"seekoffsetms-as-integer-as-boolean\\\">Seek(offsetMs as Integer) as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Set the start point of playback for the current item to offsetMs milliseconds. </p>\\n<ul>\\n<li>If the item is currently playing, playback will be interrupted and will restart at the specified offset. </li>\\n<li>If the item is not currently playing, playback will begin at the specified offset when Play() is called.</li>\\n</ul>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Type</th>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Integer</td>\\n<td>offsetMs</td>\\n<td>The offset to be used to determine the start point of the current content item.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the Audio Player was successfully set to the specified offset.</p>\\n<h3 id=\\\"settimedmetadataforkeyskeys-as-dynamic-as-void\\\">SetTimedMetaDataForKeys(keys[] as Dynamic) as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Specifies the timedMetaData keys that the channel is interested in receiving from the timedMetaData event.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>keys[]</td>\\n<td>Dynamic</td>\\n<td>The set of keys to be received from the timedMetaData event.<br /><br />If the keys array is empty, all the timed metadata associated with the current stream is sent with the isTimedMetaData event.<br /><br />If the keys array is invalid, then do not return any keys to the BrightScript channel.<br /><br />Any keys not specified with this method are deleted by the Roku OS and never returned to the BrightScript application.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifaudioresource.md":"{\n  \"content\": \"<h1 id=\\\"ifaudioresource\\\">ifAudioResource</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roaudioresource.md\\\" title=\\\"roAudioResource\\\">roAudioResource</a></td>\\n<td>The roAudioResouce allows .wav files to be cached to memory and quickly played at any time</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"triggervolume-as-integer-as-void\\\">Trigger(volume as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>This method triggers the start of the audio resource sound playback. The effect of Trigger(volume) is identical to Trigger(volume, 0).</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>volume</td>\\n<td>Integer</td>\\n<td>The volume is a number between 0 and 100 (percentage of full volume). A value of 50 should be used for normal volume.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"triggervolume-as-integer-index-as-integer-as-void\\\">Trigger(volume as Integer, index as Integer) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Triggers the start of the audio resource sound playback. This method will interrupt any playing sound when the index is the same. It will mix with any playing sound if the index is different.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>volume</td>\\n<td>Integer</td>\\n<td>The volume is a number between 0 and 100 (percentage of full volume). 50 should be used for normal volume.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index is a value between 0  and <a href=\\\"#maxsimulstreams-as-integer\\\">MaxSimulStreams()</a> allowing for multiple sounds to be mixed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isplaying-as-boolean\\\">IsPlaying() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks whether this audio resource is currently playing.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the calling audio resource is playing. </p>\\n<h3 id=\\\"stop-as-void\\\">Stop() as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Stops playing the audio resource. If the resource is not currently playing, has no effect.</p>\\n<h3 id=\\\"maxsimulstreams-as-integer\\\">MaxSimulStreams() as Integer</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the device-dependent maximum number of audio streams that can be mixed together and presented simultaneously.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Typically, 1-2. </p>\\n<h3 id=\\\"getmetadata-as-object\\\">GetMetaData() as Object</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> array containing the indicated metadata parameters about the audio resource.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An associative array with the following integer values:</p>\\n<ul>\\n<li>Length (number of samples)</li>\\n<li>SamplesPerSecond</li>\\n<li>NumChannels</li>\\n<li>BitsPerSample</li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifboolean.md":"{\n  \"content\": \"<h1 id=\\\"ifboolean\\\">ifBoolean</h1>\\n<p>Interface equivalent for intrinsic type Boolean.</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roboolean.md\\\" title=\\\"roBoolean\\\">roBoolean</a></td>\\n<td>Object equivalent for intrinsic type Boolean</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getboolean-as-boolean\\\">GetBoolean() As Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Gets the boolean value stored in the calling boolean object. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The boolean value stored in the calling boolean object. </p>\\n<h3 id=\\\"setbooleanvalue-as-boolean-as-void\\\">SetBoolean(value As Boolean) As Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the calling boolean object to the specified true/false value. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>value</td>\\n<td>Boolean</td>\\n<td>True/false.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifbytearray.md":"{\n  \"content\": \"<h1 id=\\\"ifbytearray\\\">ifByteArray</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a></td>\\n<td>The byte array component is used to contain and manipulate an arbitrary array of bytes</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"writefilepath-as-string-as-boolean\\\">WriteFile(path as String) As Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Writes the bytes contained in the Byte Array to the specified file.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path to the file to which the bytes are to be written.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the bytes were successfully written to the file.</p>\\n<h3 id=\\\"writefilepath-as-string-start_index-as-integer-length-as-integer-as-boolean\\\">WriteFile(path as String, start_index as Integer, length as Integer) As Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Writes a subset of the bytes contained in the Byte Array to the specified file.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path to the file to which the bytes are to be written.</td>\\n</tr>\\n<tr>\\n<td>start_index</td>\\n<td>Integer</td>\\n<td>The index of the calling ByteArray from which to start writing bytes.</td>\\n</tr>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The length of the bytes to be written to the file, starting from the specified index.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the bytes were successfully written to the file.</p>\\n<h3 id=\\\"readfilepath-as-string-as-boolean\\\">ReadFile(path as String) As Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Reads the specified file into the Byte Array. Any data currently in the Byte Array is discarded.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path to the file to be read.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the bytes were successfully read into the Byte Array.</p>\\n<h3 id=\\\"readfilepath-as-string-start_pos-as-integer-length-as-integer-as-boolean\\\">ReadFile(path as String, start_pos as Integer, length as Integer) As Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Reads the specified file into the Byte Array. Any data currently in the Byte Array is discarded.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path to the file to be read.</td>\\n</tr>\\n<tr>\\n<td>start_pos</td>\\n<td>Integer</td>\\n<td>The index of the file from which to start reading bytes.</td>\\n</tr>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The length of the bytes to be read from the file, starting from the specified starting position.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the bytes were successfully read into the Byte Array.</p>\\n<h3 id=\\\"appendfilepath-as-string-as-boolean\\\">AppendFile(path as String) As Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Appends the contents of the Byte Array to the specified file.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path to the file to be appended to the ByteArray.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the file was successfully appended to the calling ByteArray.</p>\\n<h3 id=\\\"appendfilepath-as-string-start_pos-as-integer-length-as-integer-as-boolean\\\">AppendFile(path as String, start_pos as Integer, length as Integer) As Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Appends the contents of the Byte Array to the specified file.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path to the file to be appended to the Byte Array.</td>\\n</tr>\\n<tr>\\n<td>start_pos</td>\\n<td>Integer</td>\\n<td>The position in the file from which to start appending bytes.</td>\\n</tr>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The length of the bytes to be appended to the Byte Array, starting from the specified starting position.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the file was successfully appended to the calling ByteArray.</p>\\n<h3 id=\\\"setresizemin_size-as-integer-auto_resize-as-boolean-as-void\\\">SetResize(min_size as Integer, auto_resize as Boolean) As Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>If the size of the Byte Array is less than min_size, expands the Byte Array to min_size. Also sets the auto-resize attribute of the Byte Array to the specified value.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>min_size</td>\\n<td>Integer</td>\\n<td>The minimum size to which the calling Byte Array is to be expanded.</td>\\n</tr>\\n<tr>\\n<td>auto_resize</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether auto resize is enabled on the calling Byte Array.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"tohexstring-as-string\\\">ToHexString() As String</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns a hexadecimal string representing the contents of the Byte Array, two digits per byte.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A hexadecimal string.</p>\\n<h3 id=\\\"fromhexstringhexstring-as-string-as-void\\\">FromHexString(hexstring as String) As Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Sets the contents of the Byte Array to the specified value. Any data currently in the Byte Array is discarded.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>hexstring</td>\\n<td>String</td>\\n<td>An even number of hexadecimal digits. The string must contain valid hexadecimal digits, or the result is undefined</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"tobase64string-as-string\\\">ToBase64String() As String</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns a base-64 string representing the contents of the Byte Array.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>A base-64 string representing the contents of the Byte Array.</p>\\n<h3 id=\\\"frombase64strings-as-string-as-void\\\">FromBase64String(s as String) As Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets the contents of the Byte Array to the specified value. Any data currently in the Byte Array is discarded.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>s</td>\\n<td>String</td>\\n<td>A valid base-64 encoding</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"toasciistring-as-string\\\">ToAsciiString() As String</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Returns the contents of the Byte Array as a string. The contents must be valid UTF-8 (or ASCII subset), or the result is undefined</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>A String containing the contents of the ByteArray.</p>\\n<h3 id=\\\"fromasciistrings-as-string\\\">FromAsciiString(s as String)</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Sets the contents of the Byte Array to the specified string using UTF-8 encoding. Any data currently in the Byte Array is discarded.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>s</td>\\n<td>String</td>\\n<td>The string to which the ByteArray is to be set.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getsignedbyteindex-as-integer-as-integer\\\">GetSignedByte(index as Integer) As Integer</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Returns the signed byte at the specified zero-based index in the Byte ArrayUse the <a href=\\\"/docs/references/brightscript/interfaces/ifarrayget.md#getentryindex-as-integer-as-dynamic\\\">ifArrayGet.GetEntry()</a> method or the [ ] array operator to read an unsigned byte in the Byte Array.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the signed byte to be returned.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>The signed byte at the specified zero-based index in the Byte Array.</p>\\n<h3 id=\\\"getsignedlongindex-as-integer-as-integer\\\">GetSignedLong(index as Integer) As Integer</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Returns the signed long (four bytes) starting at the specified zero-based index in the Byte Array.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the ByteArray from which to start retrieving the signed long.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>A signed long. </p>\\n<h3 id=\\\"getcrc32-as-integer\\\">GetCRC32() as Integer</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Calculates a CRC-32 of the contents of the Byte Array.</p>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>The calculated CRC-32 checksum. </p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>    ba = CreateObject(\\\"roByteArray\\\") \\n    ba.FromAsciiString(\\\"Hello world!\\\")\\n    n = ba.GetCrc32()\\n    print n, \\\"0x\\\" ; StrI(n, 16)\\n    REM 461707669 0x1b851995\\n</code></pre>\\n<h3 id=\\\"getcrc32start-as-integer-length-as-integer-as-integer\\\">GetCRC32(start as Integer, length as Integer) As Integer</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Calculates a CRC-32 of a subset of bytes within the Byte Array.</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>start</td>\\n<td>Integer</td>\\n<td>The starting index of the subset of bytes to be used in the CRC-32 calculation.</td>\\n</tr>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The length of the bytes to be included.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-12\\\">Return Value</h4>\\n<p>The calculated CRC-32 checksum. </p>\\n<h3 id=\\\"islittleendiancpu-as-boolean\\\">IsLittleEndianCPU() As Boolean</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Returns true if the CPU architecture is little-endian.</p>\\n<h4 id=\\\"return-value-13\\\">Return Value</h4>\\n<p>A flag indicating whether the CPU architecture is little-endian.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifcaptionrenderer.md":"{\n  \"content\": \"<h1 id=\\\"ifcaptionrenderer\\\">ifCaptionRenderer</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.Beginning July 1st, 2017, any new channels using this component will be rejected during certification.Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rocaptionrenderer.md\\\" title=\\\"roCaptionRenderer\\\">roCaptionRenderer</a></td>\\n<td>Returns information about the application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setmodemode-as-integer-as-void\\\">SetMode(mode as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the rendering mode for the <a href=\\\"/docs/references/brightscript/components/rocaptionrenderer.md\\\" title=\\\"roCaptionRenderer\\\">roCaptionRenderer</a>.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<p>An integer representing the rendering mode, which may be set to one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Mode</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>1</td>\\n<td>The Roku OS does all of the closed caption rendering. The BrightScript code only needs to call SetScreen and / or UpdateCaptions, depending on the type of screen being used. <br /><br />If the mode is 1, the BrightScript must call the <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#setscreenscreen-as-object-as-void\\\">SetScreen()</a> method to tell the Roku OS where to draw. Additionally, if the channel is rendering captions in an <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\">roScreen</a> instance (as opposed to an <a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\">roImageCanvas</a> instance) the script must also call <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#updatecaption-as-void\\\">UpdateCaption()</a> to tell the Roku OS to draw the caption text.  An <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\">roScreen</a> should call <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#updatecaption-as-void\\\">UpdateCaption()</a> in response to the isCaptionUpdateRequest event.</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>The channel is responsible for all caption rendering operations<br /><br />If the mode is 2, regardless of whether captions are to be rendered in an <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\">roScreen</a> or an <a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\">roImageCanvas</a> instance, the BrightScript code is responsible for doing all of the caption text rendering.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setscreenscreen-as-object-as-void\\\">SetScreen(screen as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the  <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\">roScreen</a> or <a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\">roImageCanvas</a> instance associated with this caption renderer.This function only needs to be called if the roCaptionRenderer mode is set to 1 (the default value). In this case, the Roku OS is responsible for all of the closed caption text rendering, and thus must know what screen to draw on.If the mode is set to 2, the BrightScript channel is responsible for all of the caption drawing, and thus the Roku OS does not need to be informed as to what screen is being rendered on.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>screen</td>\\n<td>roScreen or roImageCanvas</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\">roScreen</a> or <a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\">roImageCanvas</a> instance to be associated with this caption renderer.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setmessageportport-as-object-as-void\\\">SetMessagePort(port as Object) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Sets the <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\">roMessagePort</a> that should receive <a href=\\\"/docs/references/brightscript/events/rocaptionrendererevent.md\\\">roCaptionRendererEvents</a> from the roCaptionRenderer.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>SetMessagePort</td>\\n<td>Void</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>port</td>\\n<td>roMessagePort</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\">roMessagePort</a> that should receive the <a href=\\\"/docs/references/brightscript/events/rocaptionrendererevent.md\\\">roCaptionRendererEvents</a>.</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"showsubtitleenable-as-boolean-as-void\\\">ShowSubtitle(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Specifies whether the roCaptionRenderer displays captions. This function behaves the same as <a href=\\\"/docs/references/brightscript/interfaces/ifvideoscreen.md\\\" title=\\\"ifVideoScreen.ShowSubtitle/(/)\\\">ifVideoScreen.ShowSubtitle()</a>.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag indicating whether the roCaptionRenderer displays captions.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"updatecaption-as-void\\\">UpdateCaption() as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>For roCaptionRenderer instances with the mode set to 1, this method tells the Roku OS to render the current caption. If the mode is 2, this function does nothing</p>\\n<h3 id=\\\"getsubtitletracks-as-object\\\">GetSubtitleTracks() as Object</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns an roArray of roAssociativeArrays for each closed caption track found in the stream. This function can also be used to retrieve caption URLs for external (sideloaded) caption files. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Each associative array in the returned array contains track information similar to that specified in the SubtitleTracks content metadata structure:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Language</td>\\n<td>Specifies the ISO 639.2B 3 character language code of the corresponding text track</td>\\n</tr>\\n<tr>\\n<td>Description</td>\\n<td>Description specifies the text that will be shown for the corresponding track in the closed caption configuration dialog</td>\\n</tr>\\n<tr>\\n<td>TrackName</td>\\n<td>TrackName contains the name of the caption track. This string is a concatenation of the track source and track id, separated by a \\\"/\\\". Valid track sources are: \\\"ism\\\", \\\"mkv\\\", \\\"eia608\\\", and \\\"dvb\\\". For example if a smooth stream manifest file has a caption track called “textstream_eng” the TrackName value would be \\\"ism/textstream_eng”. For sideloaded caption tracks the TrackName is the url from where the caption track is downloaded. If the track source is \\\"dvb\\\", \\\"_sdh\\\" is appended for subtitles for the deaf and hard of hearing (for example, \\\"dvb/eng_sdh\\\" specifies subtitles for the deaf and hard of hearing in English, \\\"dvb/nor\\\" specifies Norwegian subtitles, and so forth)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"changesubtitletracktrack-as-string-as-void\\\">ChangeSubtitleTrack(track as String) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>The ChangeSubtitleTrack function is used to change the caption source after playback has begun.</p>\\n<blockquote>\\n<p>When content playback starts, the subtitle track specified in the TrackIdSubtitle content metadata value is used to determine which set of captions to display.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>track</td>\\n<td>String</td>\\n<td>One of the 608 channels or ttml text tracks to be selected. The 608 channels are specified as 'eia608/' where  is 1, 2, 3, or 4. The ttml text tracks are specified as 'ism/&#x3C;track_name>'.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifchannelstore.md":"{\n  \"content\": \"<h1 id=\\\"ifchannelstore\\\">ifChannelStore</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rochannelstore.md\\\" title=\\\"roChannelStore\\\">roChannelStore</a></td>\\n<td>allows the application to perform a purchase of an In-Channel Product or upgrade a channel</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getidentity-as-integer\\\">GetIdentity() as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns a unique number for this object that can be used to identify whether a roChannelStoreEvent event originated from this object, by comparing with the roChannelStoreEvent object's GetSourceIdentity() value.</p>\\n<blockquote>\\n<p> The value can be any arbitrary value as assigned by the Roku OS, and should only be used for comparison purposes. For example, the value should not be used as an array index.For use as a look-up key, you can use GetIdentity().ToStr() as an associative array key.</p>\\n</blockquote>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The unique number generated for the object.</p>\\n<h3 id=\\\"getcatalog-as-void\\\">GetCatalog() as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Requests the list of In-Channel products that are linked to the running channel.</p>\\n<p>If successful, a subsequent <a href=\\\"/docs/references/brightscript/events/rochannelstoreevent.md\\\" title=\\\"roChannelStoreEvent\\\">roChannelStoreEvent</a> will be received that contains an roList of roAssociativeArray items. Each associative array will contain the following parameter names with specified value type:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Parameter</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>code</td>\\n<td>string</td>\\n<td>The product catalog number (this code will also be set as the ID).</td>\\n</tr>\\n<tr>\\n<td>name</td>\\n<td>string</td>\\n<td>The item name (this name will also be set as the description).</td>\\n</tr>\\n<tr>\\n<td>quantity</td>\\n<td>Integer</td>\\n<td>For one-time purchase/consumable products only. The number of the product purchased (for example \\\"1000\\\" game points, \\\"3\\\" viewings of a movie rental).</td>\\n</tr>\\n<tr>\\n<td>productType</td>\\n<td>string</td>\\n<td>The product type (ex. \\\"MonthlySub\\\")</td>\\n</tr>\\n<tr>\\n<td>cost</td>\\n<td>string</td>\\n<td>Localized cost of the product with local currency symbol</td>\\n</tr>\\n<tr>\\n<td>freeTrialQuantity</td>\\n<td>integer</td>\\n<td>If the product has a free trial offer, the length of the trial period. For example, <strong>1</strong> for a 1-month free trial or <strong>7</strong> for a 7-day free trial.</td>\\n</tr>\\n<tr>\\n<td>freeTrialType</td>\\n<td>string</td>\\n<td>If the product has a free trial offer, the unit of time used by the trial (\\\"Days\\\" or \\\"Months\\\")</td>\\n</tr>\\n<tr>\\n<td>trialCost</td>\\n<td>integer</td>\\n<td>If the product uses introductory pricing, the discounted price.</td>\\n</tr>\\n<tr>\\n<td>trialQuantity</td>\\n<td>integer</td>\\n<td>If the product uses introductory pricing, the number of months the discounted pricing is applicable.</td>\\n</tr>\\n<tr>\\n<td>trialType</td>\\n<td>string</td>\\n<td>Set to \\\"months\\\" for all products. All products using introductory pricing use \\\"months\\\" as the unit of time for the trial.</td>\\n</tr>\\n<tr>\\n<td>status</td>\\n<td>string</td>\\n<td>Indicates whether the product has been \\\"saved\\\" or \\\"approved for sale\\\".</td>\\n</tr>\\n<tr>\\n<td>purchaseDate</td>\\n<td>String</td>\\n<td>The subscription purchase date</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getstorecatalog-as-void\\\">GetStoreCatalog() as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Requests the list of globally available In-Channel products, which are available to all channels.</p>\\n<p>If successful, a subsequent <a href=\\\"/docs/references/brightscript/events/rochannelstoreevent.md\\\" title=\\\"roChannelStoreEvent\\\">roChannelStoreEvent</a> will be received that contains an roList of roAssociativeArray items. Each associative array will contain the following parameter names with specified value type:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Parameter</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>code</td>\\n<td>string</td>\\n<td>The product identifier</td>\\n</tr>\\n<tr>\\n<td>cost</td>\\n<td>String</td>\\n<td>The localized cost of the item with local currency symbol.</td>\\n</tr>\\n<tr>\\n<td>name</td>\\n<td>string</td>\\n<td>The item name</td>\\n</tr>\\n<tr>\\n<td>description</td>\\n<td>String</td>\\n<td>The product description.</td>\\n</tr>\\n<tr>\\n<td>SDPosterUrl</td>\\n<td>string</td>\\n<td>The URL for the standard definition image of the product.</td>\\n</tr>\\n<tr>\\n<td>HDPosterUrl</td>\\n<td>string</td>\\n<td>The URL for the high definition image of the product.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getpurchases-as-void\\\">GetPurchases() as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Requests the list of purchases associated with the current user account.</p>\\n<p>If successful, a subsequent <a href=\\\"/docs/references/brightscript/events/rochannelstoreevent.md\\\" title=\\\"roChannelStoreEvent\\\">roChannelStoreEvent</a> will be received that contains an roList of roAssociativeArray items. Each associative array will contain the following parameter names with specified value type:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Parameter</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>amount</td>\\n<td>string</td>\\n<td>Localized amount of the item purchased (post transaction) with local currency symbol</td>\\n</tr>\\n<tr>\\n<td>code</td>\\n<td>string</td>\\n<td>The product identifier (this code will also be set as the ID of the <strong>ContentNode</strong>)</td>\\n</tr>\\n<tr>\\n<td>cost</td>\\n<td>string</td>\\n<td>Localized cost of the item (prior to purchase) with local currency symbol</td>\\n</tr>\\n<tr>\\n<td>expirationDate</td>\\n<td>string</td>\\n<td>The subscription expiration date (<a href=\\\"https://www.iso.org/iso-8601-date-and-time-format.html\\\">ISO 8601</a> format)</td>\\n</tr>\\n<tr>\\n<td>freeTrialQuantity</td>\\n<td>integer</td>\\n<td>The free trial amount associated with the freeTrialType. For example, <strong>1</strong> for a 1-month free trial or <strong>7</strong> for a 7-day free trial.</td>\\n</tr>\\n<tr>\\n<td>freeTrialType</td>\\n<td>string</td>\\n<td>The free trial type (\\\"Days\\\" or \\\"Months\\\")</td>\\n</tr>\\n<tr>\\n<td>name</td>\\n<td>string</td>\\n<td>The item name (this name will also be set as the description).</td>\\n</tr>\\n<tr>\\n<td>productType</td>\\n<td>string</td>\\n<td>The product type (ex. \\\"MonthlySub\\\")</td>\\n</tr>\\n<tr>\\n<td>purchaseDate</td>\\n<td>string</td>\\n<td>The purchase date (<a href=\\\"https://www.iso.org/iso-8601-date-and-time-format.html\\\">ISO 8601</a> format)</td>\\n</tr>\\n<tr>\\n<td>purchaseId</td>\\n<td>string</td>\\n<td>The transaction ID</td>\\n</tr>\\n<tr>\\n<td>qty</td>\\n<td>integer</td>\\n<td>The quantity purchased</td>\\n</tr>\\n<tr>\\n<td>renewalDate</td>\\n<td>string</td>\\n<td>The subscription renewal date (<a href=\\\"https://www.iso.org/iso-8601-date-and-time-format.html\\\">ISO 8601</a> format)</td>\\n</tr>\\n<tr>\\n<td>total</td>\\n<td>string</td>\\n<td>Localized total of the item purchased (including tax if applicable) with local currency symbol</td>\\n</tr>\\n<tr>\\n<td>trialCost</td>\\n<td>integer</td>\\n<td>If the product uses introductory pricing, the discounted price.</td>\\n</tr>\\n<tr>\\n<td>trialQuantity</td>\\n<td>integer</td>\\n<td>If the product uses introductory pricing, the number of months the discounted pricing is applicable.</td>\\n</tr>\\n<tr>\\n<td>trialType</td>\\n<td>string</td>\\n<td>Set to \\\"months\\\" for all products. All products using introductory pricing use \\\"months\\\" as the unit of time for the trial.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setorderorder-as-object-orderinfo-as-object-as-void\\\">SetOrder(order as Object, orderInfo as Object) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the current Order (shopping cart) to the elements specified in the parameter, which must be an roList of roAssociativeArray items.Passing an empty roList clears the Order, like calling ClearOrder().</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>order</td>\\n<td>roList of roAssociativeArray items</td>\\n<td>Each roAssociativeArray in the roList contains the following fields: <table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>code</td>\\n<td>String</td>\\n<td>The product identifier</td>\\n</tr>\\n<tr>\\n<td>qty</td>\\n<td>Integer</td>\\n<td>The quantity purchased</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n<tr>\\n<td>orderInfo</td>\\n<td>roAssociativeArray</td>\\n<td><em>Available since Roku OS 9.3</em><br /><br />This parameter is used for subscription upgrades and downgrades. If it is not specified, the action is a product purchase. It contains the following fields: <table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>action</td>\\n<td>String</td>\\n<td>The action to be performed, which may be one of the following: <ul>\\n<li>\\\"Upgrade\\\": The order is an upgrade from one subscription product to another.</li>\\n<li>\\\"Downgrade\\\": The order is a subscription downgrade.</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table><br /><strong>Example</strong> <pre><code>m.store = CreateObject(\\\"roChannelStore\\\")​\\n' Populate myOrderItems\\nmyOrderInfo.action = \\\"Upgrade\\\"\\nm.store.setOrder(myOrderItems, myOrderInfo)\\n</code></pre><br />See <a href=\\\"/docs/developer-program/roku-pay/implementation/on-device-upgrade-downgrade.md#calling-the-roku-web-service-validate-transaction-api\\\">On-device upgrade and downgrade</a> for how to implement Roku Pay web services for upgrades/downgrades.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearorder-as-void\\\">ClearOrder() as Void</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ClearOrder</td>\\n<td>Void</td>\\n<td>Clears the current Order (shopping cart). After this call, the Order is empty</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"deltaordercode-as-object-qty-as-integer-as-integer\\\">DeltaOrder(code as Object, qty as Integer) as Integer</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Applies a change in quantity to one item in the current Order (shopping cart).</p>\\n<ul>\\n<li>If the item identified by code is not in the <strong>Order</strong>, it is added with the specified <strong>qty</strong>.</li>\\n<li>If the item already exists in the <strong>Order</strong>, <strong>qty</strong> is added to the quantity of this item in the <strong>Order</strong>.</li>\\n</ul>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>code</td>\\n<td>String</td>\\n<td>The product identifier.</td>\\n</tr>\\n<tr>\\n<td>qty</td>\\n<td>Integer</td>\\n<td>The quantity purchased. This may be a negative number.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-type\\\">Return Type</h4>\\n<p>The quantity of the item remaining in the Order after applying the change. If the returned value is zero or negative, the item is deleted from the Order.</p>\\n<h3 id=\\\"getorder-as-object\\\">GetOrder() as Object</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Retrieves the current Order.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The returned object is an roList of roAssociativeArray items, where each item contains the following parameter names with specified value type:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>code</td>\\n<td>String</td>\\n<td>The product identifier.</td>\\n</tr>\\n<tr>\\n<td>qty</td>\\n<td>Integer</td>\\n<td>The quantity purchased.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"doorder-as-boolean\\\">DoOrder() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Displays the Roku Channel Store Product Purchase Screen populated with information from the current Order.</p>\\n<p>The user can then either approve and complete the purchase, or cancel the purchase. In the case that the user approves, the channel should wait for and respond to the roChannelStoreEvent.isRequestSucceeded event to get the details of the completed transaction.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the user approved the order (true if the order was approved; false otherwise).</p>\\n<h3 id=\\\"fakeserverenable-as-boolean-as-void\\\">FakeServer(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>This test mode short circuits communication to the Roku Channel store. It makes other methods get their responses to async queries and operations from configuration files, rather than actual server communication.</p>\\n<blockquote>\\n<p>Do not call this method in a production channel. <a href=\\\"https://blog.roku.com/developer/2013/06/06/supporting-in-app-purchases-in-your-roku-brightscript-channels\\\" title=\\\"Developer Blog, &#x22;Supporting In App Purchases in Your Roku BrightScript Channels\\\">Developer Blog, \\\"Supporting In App Purchases in Your Roku BrightScript Channels\\\"</a> has more information regarding test mode.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>If enable is true, enables a test mode for the roChannelStore component.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getuserdata-as-object\\\">GetUserData() as Object</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>The GetUserData() function provides a way to request user authorization to share the user’s account information with the calling channel.</p>\\n<p>The primary use case of this method is to facilitate partner account creation/updating within channels that have a customer billing relationship with Roku.</p>\\n<p>For example, a developer may have a Roku channel that offers a VOD subscription to users. This subscription may require an account with the content provider. The GetUserData() method could be called to read the user’s account information in order to prepopulate an account registration screen.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>When called, the method presents a dialog screen containing the user’s account information, along with two buttons labeled Share and Don’t Share.</p>\\n<ul>\\n<li>If the user presses the <strong>Cancel</strong> button, GetUserData() returns invalid.</li>\\n<li>\\n<p>If the user presses the <strong>Continue</strong> button, GetUserData() returns an roAssociativeArray containing the following Roku account information for the channel user (all values are Strings):</p>\\n<ul>\\n<li>firstname</li>\\n<li>lastname</li>\\n<li>email</li>\\n<li>street</li>\\n<li>city</li>\\n<li>state</li>\\n<li>zip</li>\\n<li>country</li>\\n<li>phone</li>\\n<li>birth (<em>Available since Roku OS 10.0</em>)</li>\\n<li>gender (<em>Available since Roku OS 10.0</em>)</li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\\"getpartialuserdataproperties-as-string-requestinfo-as-object-as-object\\\">GetPartialUserData(properties as String, requestInfo as Object) as Object</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>This function works like GetUserData(), but allows the caller to specify which user data elements to return. The specified values are also displayed in the user data dialog screen.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>properties</td>\\n<td>String</td>\\n<td>A comma-separated list of the attribute names to be returned. For example, to return only the email address and first name of the user's account, you would call GetPartialUserData(\\\"email, firstname\\\"). The full set of user account properties that can be queried with the function is:<br /><ul>\\n<li>firstname</li>\\n<li>lastname</li>\\n<li>email</li>\\n<li>street</li>\\n<li>city</li>\\n<li>state</li>\\n<li>zip</li>\\n<li>country</li>\\n<li>phone</li>\\n<li>birth (<em>Available since Roku OS 10.0</em>)</li>\\n<li>gender (<em>Available since Roku OS 10.0</em>)</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>requestInfo (<em>Available since Roku OS 10.0</em>)</td>\\n<td>roAssociativeArray</td>\\n<td>Specifies whether the RFI screen is used for customer sign-ups or sign-ins. This may be one of the following values:<br /><table>\\n<thead>\\n<tr>\\n<th>Field</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>context</td>\\n<td>string</td>\\n<td>\\\"signup\\\"</td>\\n<td>Specifies the context of the RFI screen, which may be one of the following values:<br /><ul>\\n<li>\\\"signup\\\": The RFI screen displays a \\\"Let's create your account\\\" title and lists the customer information specified in the <a href=\\\"#requesteduserdata\\\"><strong>requestedUserData</strong> field</a>. The RFI screen uses the sign-up context by default.</li>\\n<li>\\\"signin: \\\"The RFI screen displays a \\\"Sign in\\\" title and lists only email and phone attributes, if specified in the <a href=\\\"#requesteduserdata\\\"><strong>requestedUserData</strong> field</a>. Other attributes are ignored, even if specified.</li>\\n</ul><br />See the <a href=\\\"#sign-in-example\\\">Sign-in example</a> for how to use this field.</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>An roAssociativeArray containing the Roku account information passed in the method.</p>\\n<h4 id=\\\"sign-up-example\\\">Sign-up example</h4>\\n<pre><code>store = CreateObject(\\\"roChannelStore\\\")\\n\\n' Request user's email, phone, first name, and last name for sign-up\\nuserData = store.GetPartialUserData(\\\"email, phone, firstname, lastname\\\")\\n</code></pre>\\n<h4 id=\\\"sign-in-example\\\">Sign-in example</h4>\\n<pre><code>store = CreateObject(\\\"roChannelStore\\\")\\n\\n' Request user's email for sign-in\\nuserData = store.GetPartialUserData(\\\"email\\\", {context: \\\"signin\\\"})\\n</code></pre>\\n<h3 id=\\\"getuserregiondata-as-object\\\">GetUserRegionData() as Object</h3>\\n<p><em>Available since Roku OS 10.0</em></p>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Retrieves the state, zip code, and country associated with the customer's Roku account. The location information returned by this command can be used to determine a customer's eligibility for regional-specific subscription products and content.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>An associative array that contains the following fields:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Field</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>state</td>\\n<td>string</td>\\n<td>The state associated with the customer's Roku account.</td>\\n</tr>\\n<tr>\\n<td>zip</td>\\n<td>string</td>\\n<td>The zip code associated with the customer's Roku account.</td>\\n</tr>\\n<tr>\\n<td>country</td>\\n<td>String</td>\\n<td>The country associated with the customer's Roku account.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"storechannelcreddatadata-as-string-as-object\\\">StoreChannelCredData(data as String) as Object</h3>\\n<p><em>Available since Roku OS 8.1</em></p>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Stores an access token, oAuth token, or other authentication artifact that can be retrieved by calling the <a href=\\\"/docs/references/brightscript/interfaces/ifchannelstore.md#getchannelcred-as-object\\\">GetChannelCred()</a>method. This data is stored securely in the Roku cloud and can be retrieved by other devices linked to the same Roku account. This method can be used to store an authentication artifact with Roku for a signed in user, associating that user with a particular Roku account. For more information, see <a href=\\\"/docs/developer-program/authentication/universal-authentication-protocol-for-single-sign-on.md\\\">Automatic Account Link</a>.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>data</td>\\n<td>String</td>\\n<td>An OAuth token, custom token, or other custom data to be stored.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>This command returns an roAssociativeArray with the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>response</td>\\n<td>json</td>\\n<td>A string in JSON format, with the following key-value pairs: <br /><table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>status</td>\\n<td>string</td>\\n<td>The request status, which may be \\\"success\\\" or \\\"failure\\\".</td>\\n</tr>\\n<tr>\\n<td>error</td>\\n<td>string</td>\\n<td>A description of the error (if any). This will be set to \\\"none\\\" for a successful request.</td>\\n</tr>\\n<tr>\\n<td>error_detail</td>\\n<td>string</td>\\n<td>A detailed description of the service error (if any). This value will be null (uninitialized) for a successful request.</td>\\n</tr>\\n</tbody>\\n</table><br /><br />if billing is not enabled for the channel, this field will include a string with a service error message.</td>\\n</tr>\\n<tr>\\n<td>status</td>\\n<td>Integer</td>\\n<td>An integer representing the request status. A successful request will return a status of 0.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getchannelcred-as-object\\\">GetChannelCred() as Object</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Retrieves a Roku Partner Unique Customer Identifier (roku_pucid), or retrieves an access token, oAuth token, or other authentication artifact (channel_data).</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>An associative array that contains the following fields:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>channelID</td>\\n<td>string</td>\\n<td>The channel ID (ex. \\\"2213\\\" for Roku Media Player)</td>\\n</tr>\\n<tr>\\n<td>errorCode</td>\\n<td>string</td>\\n<td>A description of the service error (if any). This will be an empty string for a successful request.</td>\\n</tr>\\n<tr>\\n<td>json</td>\\n<td>string</td>\\n<td>A string in JSON format, with the following key-value pairs: <table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>error</td>\\n<td>string</td>\\n<td>A string containing an error message (if any). This value will be <code>null</code> (uninitialized) for a successful request.</td>\\n</tr>\\n<tr>\\n<td>roku_pucid</td>\\n<td>string</td>\\n<td>This is an agnostic ID (in UUID format) representing the user. This value will be identical when retrieved in the same channel across devices linked to the same Roku account.<br /><br />The PUCID can be used in place of requiring the user to enter their email address or username again (for example, when setting up a new device on the same Roku account).</td>\\n</tr>\\n<tr>\\n<td>token_type</td>\\n<td>string</td>\\n<td>Type of the returned token, e.g. <code>\\\"urn:roku:pucid:token_type:pucid_token\\\"</code></td>\\n</tr>\\n<tr>\\n<td>channel_data</td>\\n<td>string</td>\\n<td>The access token, oAuth token, or other authentication artifact stored in the Roku cloud.<br /><br />This field is not returned if the <a href=\\\"#storechannelcreddata\\\">StoreChannelCredData</a> command is not used to store an artifact in the Roku cloud.</td>\\n</tr>\\n</tbody>\\n</table> <br />If the request fails, this json string will be empty.</td>\\n</tr>\\n<tr>\\n<td>publisherDeviceID</td>\\n<td>string</td>\\n<td>A unique identifier of the device.</td>\\n</tr>\\n<tr>\\n<td>status</td>\\n<td>integer</td>\\n<td>An integer representing the request status. A successful request will return a status of 0.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"requestpartnerorderorderinfo-as-roassociativearray-productid-as-string-as-object\\\">RequestPartnerOrder(orderInfo as roAssociativeArray, productID as String) as Object</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Checks the user's billing status and is a prerequisite for ConfirmPartnerOrder() when doing transactional purchases.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>orderInfo</td>\\n<td>roAssociativeArray</td>\\n<td>Specifies the product to be ordered from a TVOD channel. The order contains the following fields:<br /><table>\\n<thead>\\n<tr>\\n<th>Field</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>priceDisplay</td>\\n<td>string</td>\\n<td>The original price of the product.</td>\\n</tr>\\n<tr>\\n<td>price</td>\\n<td>string</td>\\n<td>The final price of the product, including any discounts.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>string</td>\\n<td>A description of the product (for example, the name of a rental movie).</td>\\n</tr>\\n<tr>\\n<td>couponCode</td>\\n<td>string</td>\\n<td>An alphanumeric string entered by the customer to receive a discounted price on the product.</td>\\n</tr>\\n<tr>\\n<td>contentKey</td>\\n<td>string</td>\\n<td>The publisher-specific SKU (or other unique identifier) for the product.</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n<tr>\\n<td>productID</td>\\n<td>String</td>\\n<td>The product identifier as entered on the Developer Dashboard when the product was created</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>If the order is successful, an roAssociativeArray is returned that contains the following keys with string values:</p>\\n<ul>\\n<li><strong>id</strong>.  This ID must be passed in the confirmOrderInfo parameter in ConfirmPartnerOrder() method.</li>\\n<li><strong>status</strong>. Success.</li>\\n<li><strong>tax</strong>. Cost of tax (if applicable).</li>\\n<li><strong>total</strong>. Total cost of transaction.</li>\\n</ul>\\n<p>If the order fails, an roAssociativeArray is returned that contains the following keys with string values:</p>\\n<ul>\\n<li><strong>errorCode</strong>. An error code representing why the transaction failed.</li>\\n<li><strong>errorMessage</strong>. An error message explaining why the transaction failed.</li>\\n<li><strong>failed</strong>. Failure.</li>\\n</ul>\\n<h3 id=\\\"confirmpartnerorderconfirmorderinfo-as-roassociativearray-productid-as-string-as-object\\\">ConfirmPartnerOrder(confirmOrderInfo as roAssociativeArray, productID as String) as Object</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>This function is equivalent to doOrder() for transactional purchases. The user's billing status must first be confirmed with RequestPartnerOrder() prior to calling this function.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>confirmOrderInfo</td>\\n<td>roAssociativeArray</td>\\n<td>Confirms the product being ordered from a TVOD channel. The order contains the following fields:<br /><table>\\n<thead>\\n<tr>\\n<th>Field</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>orderId</td>\\n<td>string</td>\\n<td>The orderID generated by Roku, which is included in the roAssociativeArray returned by the <a href=\\\"#requestpartnerorderorderinfo-as-roassociativearray-productid-as-string-as-object\\\">RequestPartnerOrder()</a> method.</td>\\n</tr>\\n<tr>\\n<td>priceDisplay</td>\\n<td>string</td>\\n<td>The original price of the product.</td>\\n</tr>\\n<tr>\\n<td>price</td>\\n<td>string</td>\\n<td>The final price of the product, including any discounts.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>string</td>\\n<td>The name of the product to be displayed on customers' invoices.</td>\\n</tr>\\n<tr>\\n<td>couponCode</td>\\n<td>string</td>\\n<td>An alphanumeric string entered by the customer to receive a discounted price on the product.</td>\\n</tr>\\n<tr>\\n<td>contentKey</td>\\n<td>string</td>\\n<td>The publisher-specific SKU (or other unique identifier) for the product.</td>\\n</tr>\\n</tbody>\\n</table><br />The currency symbol may not be included in the <strong>price</strong> or <strong>priceDisplay</strong> values.</td>\\n</tr>\\n<tr>\\n<td>productID</td>\\n<td>String</td>\\n<td>The product identifier as entered on the Developer Dashboard when the product was created</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>If the order is successful, an roAssociativeArray is returned that contains the following keys with string values:</p>\\n<ul>\\n<li><strong>purchaseId</strong>.  The transaction ID..</li>\\n<li><strong>status</strong>. Success.</li>\\n</ul>\\n<p>If the order fails, an roAssociativeArray is returned that contains the following keys with string values:</p>\\n<ul>\\n<li><strong>errorCode</strong>. An error code representing why the transaction failed.</li>\\n<li><strong>errorMessage</strong>. An error message explaining why the transaction failed.</li>\\n<li><strong>status</strong>. Failure.</li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifcoderegistrationscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifcoderegistrationscreen\\\">ifCodeRegistrationScreen</h1>\\n<blockquote>\\n<p>This component is deprecated.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rocoderegistrationscreen.md\\\" title=\\\"roCodeRegistrationScreen\\\">roCodeRegistrationScreen</a></td>\\n<td>The Code Registration Screen is designed to present the user a registration code, and the information required to instruct the user on how to register with a service provider</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the title for the screen to the specified string. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title to be displayed on the code registration screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addheadertexttext-as-string-as-void\\\">AddHeaderText(text as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Add a string of bold, high visibility text to the screen as a header to introduce the subsequent paragraph(s).</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be displayed in the header of the code registration screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addparagraphtext-as-string-as-void\\\">AddParagraph(text as String) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Adds a paragraph of text to the screen. A paragraph is specified as a single string and are ordered on the screen in the same order as they are added. The roCodeRegistrationScreen handles all text formatting and justification. Spacing is automatically inserted between paragraphs for readability.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The paragraph of text to be displayed on the code registration screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-boolean\\\">AddButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Adds a button to the screen identified by the title and ID provided. The buttons are at the bottom of the screen and appear in the order added</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the button.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>When the button is pressed, the script will receive an event from the application indicating the ID of the button pressed.</p>\\n<h3 id=\\\"addfocaltexttext-as-string-spacingformat-as-string-as-void\\\">AddFocalText(text as String, spacingFormat as String) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds high visibility focal text to the screen to be placed above the registration code.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>This text is intended to provide the user important instructions on where to use the registration code. It is generally a few words of instruction followed by the URL for the registration site on the web.</td>\\n</tr>\\n<tr>\\n<td>spacingFormat</td>\\n<td>String</td>\\n<td>Multiple lines of text may be added and the spacing between each is controlled by specifying the spacing format as one of the following: spacing-dense, spacing–normal or spacing-sparse.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbtextstring-location1-string-location2-as-void\\\">SetBreadcrumbText(String location1, String location2) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Breadcrumbs allow the application to display a two-part navigational title which shows the current and the previous locations in the application hierarchy (e.g. TV – Friends). If both location values are set, the application will display the title in breadcrumb format. If only the first location is set, the application will display the specified text in the title area like the SetTitle API call</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>String</td>\\n<td>location1</td>\\n<td>The first location value.</td>\\n</tr>\\n<tr>\\n<td>String</td>\\n<td>location2</td>\\n<td>The second location value.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setregistrationcoderegcode-as-string-as-void\\\">SetRegistrationCode(regCode as String) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Sets the registration code (e.g. XM3RT) or text (e.g. retrieving…) to be displayed on the screen.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>SetRegistrationCode</td>\\n<td>Void</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>regCode</td>\\n<td>String</td>\\n<td>The registration code or text to be displayed on the screen.</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the screen is displayed (returns true if the screen is displayed, otherwise false).</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifcompositor.md":"{\n  \"content\": \"<h1 id=\\\"ifcompositor\\\">ifCompositor</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rocompositor.md\\\" title=\\\"roCompositor\\\">roCompositor</a></td>\\n<td>The roCompositor allows the composition and animation of multiple roBitmaps and roRegions</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setdrawtodestbitmap-as-object-rgbabackground-as-integer-as-void\\\">SetDrawTo(destBitmap as Object, rgbaBackground as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the destBitmap (<a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\" title=\\\"roScreen\\\">roScreen</a>) and the background color.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>destBitmap</td>\\n<td>Object</td>\\n<td>The bitmap to be drawn.</td>\\n</tr>\\n<tr>\\n<td>rgbaBackground</td>\\n<td>Integer</td>\\n<td>The background color to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"draw-as-void\\\">Draw() as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Draws any dirty sprites (that is, whatever is new or has changed since the last Draw). No compositor or sprite operations will be reflected on the display until Draw() is called. After calling Draw(), you must call Finish() (if single buffered) or SwapBuffers() (if double buffered) before the changes will be user visible</p>\\n<h3 id=\\\"drawall-as-void\\\">DrawAll() as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Redraws all sprites even if not dirty. After calling Draw(), you must call Finish() (if single buffered) or SwapBuffers() (if double buffered) before the changes will be user visible</p>\\n<h3 id=\\\"newspritex-as-integer-y-as-integer-region-as-object-z-as-integer-as-object\\\">NewSprite(x as Integer, y as Integer, region as Object, z as Integer) as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Creates a new sprite, using an roRegion to define the sprite's bitmap. Position the sprite at coordinate x,y. If z is provided, position the sprite in front of all other sprites with equal or lower z value. Sprites with negative z values are not rendered or displayed on the screen.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the sprite.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the sprite.</td>\\n</tr>\\n<tr>\\n<td>region</td>\\n<td>Object</td>\\n<td>The region to be used to define the sprite's bitmap.</td>\\n</tr>\\n<tr>\\n<td>z</td>\\n<td>Integer</td>\\n<td>The z-coordinate of the sprite.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/rosprite.md\\\" title=\\\"roSprite\\\">roSprite</a> object.</p>\\n<h3 id=\\\"newanimatedspritex-as-integer-y-as-integer-regionarray-as-object-z-as-integer-as-object\\\">NewAnimatedSprite(x as Integer, y as Integer, regionArray as Object, z as Integer) as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Creates a new sprite that consists of a sequence of frames to be animated. The frames are defined by the regionArray which is an <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegions\\\">roRegions</a>. Position the sprite at coordinate x,y. If z is provided, position the sprite in front of all other sprites with equal or lower z value</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the sprite.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the sprite.</td>\\n</tr>\\n<tr>\\n<td>regionArray</td>\\n<td>Object</td>\\n<td>The frames to be animated.</td>\\n</tr>\\n<tr>\\n<td>z</td>\\n<td>Integer</td>\\n<td>The z-coordinate of the sprite.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/rosprite.md\\\" title=\\\"roSprite\\\">roSprite</a> object.</p>\\n<h3 id=\\\"animationtickduration-as-integer-as-void\\\">AnimationTick(duration as Integer) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Moves all animated sprites. Sprites will not animate unless you call this function regularly.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>duration</td>\\n<td>Integer</td>\\n<td>The number of ms since the last call.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"changematchingregionsoldregion-as-object-newregion-as-object-as-void\\\">ChangeMatchingRegions(oldRegion as Object, newRegion as Object) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Provides a global search and replace of sprite <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegions\\\">roRegions</a>. Replaces regions that match oldRegion with newRegion</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>oldRegion</td>\\n<td>Object</td>\\n<td>The sprite roRegion to be replaced.</td>\\n</tr>\\n<tr>\\n<td>newRegion</td>\\n<td>Object</td>\\n<td>The new sprite roRegion to be used.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifdatetime.md":"{\n  \"content\": \"<h1 id=\\\"ifdatetime\\\">ifDateTime</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodatetime.md\\\" title=\\\"roDateTime\\\">roDateTime</a></td>\\n<td>The roDateTime provides an interface to obtain the current date/time for the player and manipulate date/times</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"mark-as-void\\\">Mark() as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the date/time value to the current UTC date and time.</p>\\n<blockquote>\\n<p>roDateTime objects are automatically marked on creation.</p>\\n</blockquote>\\n<h3 id=\\\"tolocaltime-as-void\\\">ToLocalTime() as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Offsets the date/time value from an assumed UTC date/time to a local date/time using the system time zone setting. This function is not idempotent, and multiple calls will do multiple timezone adjustments to the time yielding an incorrect result.</p>\\n<h3 id=\\\"gettimezoneoffset-as-integer\\\">GetTimeZoneOffset() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the offset in minutes from the system time zone to UTC. For example, if the system time zone is in PDT / UTC-7 the value returned would be 420.</p>\\n<blockquote>\\n<p>The time zone offset is returned for the current date/time, regardless of the object's date/time value.</p>\\n</blockquote>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Minutes of offset as Integer.</p>\\n<h3 id=\\\"asseconds-as-integer\\\">AsSeconds() as Integer</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the date/time as the number of seconds from the Unix epoch (00:00:00 1/1/1970 GMT).</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Number of seconds as Integer.</p>\\n<h3 id=\\\"fromsecondsnumseconds-as-integer-as-void\\\">FromSeconds(numSeconds as Integer) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the date/time value using the number of seconds from the Unix epoch.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>numSeconds</td>\\n<td>Integer</td>\\n<td>The number of seconds from the Unix epoch.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"toisostring-as-string\\\">ToISOString() as String</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns an ISO 8601 representation of the date/time value. As of Roku OS 10.0, this now resolves to milliseconds.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>ISO 8601 as String, e.g. \\\"2021-03-25T18:53:03+0000\\\"</p>\\n<h3 id=\\\"fromiso8601stringdatestring-as-string-as-void\\\">FromISO8601String(dateString as String) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Sets the date/time using a string in the ISO 8601 format. For example \\\"YYYY-MM-DD HH:MM:SS\\\" e.g \\\"2009-01-01 01:00:00.000\\\" or \\\"2009-01-01T01:00:00.000\\\".</p>\\n<blockquote>\\n<p>This function is unaware of the local time zone, so these time formats are effectively UTC even though the ISO 8601 spec says they should be in local time. The above formats are also the only formats recognized by this function, even though the ISO 8601 spec contains other valid formats.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>dateString</td>\\n<td>String</td>\\n<td>The ISO-8601 string to be used to set the date and time.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"asdatestringformat-as-string-as-string\\\">AsDateString(format as String) as String</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns the date/time formatted string.</p>\\n<blockquote>\\n<p> Day names, month names, separators, and order of fields may vary depending on the current locale.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>format</td>\\n<td>String</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Format</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>long-date</td>\\n</tr>\\n<tr>\\n<td>short-weekday</td>\\n</tr>\\n<tr>\\n<td>no-weekday</td>\\n</tr>\\n<tr>\\n<td>short-month</td>\\n</tr>\\n<tr>\\n<td>short-month-short-weekday</td>\\n</tr>\\n<tr>\\n<td>short-month-no-weekday</td>\\n</tr>\\n<tr>\\n<td>short-date</td>\\n</tr>\\n<tr>\\n<td>short-date-dashes</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A dateString corresponding to the specified format.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Format</th>\\n<th>Example dateString</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>long-date</td>\\n<td>Tuesday October 9, 2012</td>\\n</tr>\\n<tr>\\n<td>short-weekday</td>\\n<td>Tue October 9, 2012</td>\\n</tr>\\n<tr>\\n<td>no-weekday</td>\\n<td>October 9, 2012</td>\\n</tr>\\n<tr>\\n<td>short-month</td>\\n<td>Tuesday Oct 9, 2012</td>\\n</tr>\\n<tr>\\n<td>short-month-short-weekday</td>\\n<td>Tue Oct 9, 2012</td>\\n</tr>\\n<tr>\\n<td>short-month-no-weekday</td>\\n<td>Oct 9, 2012</td>\\n</tr>\\n<tr>\\n<td>short-date</td>\\n<td>10/9/12</td>\\n</tr>\\n<tr>\\n<td>short-date-dashes</td>\\n<td>10-9-12</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>The order of the fields in both short-date formats is changed depending on the current locale:</p>\\n</blockquote>\\n<table>\\n<thead>\\n<tr>\\n<th>Locale</th>\\n<th>Field Order</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Canada</td>\\n<td>YYYY/MM/DD</td>\\n</tr>\\n<tr>\\n<td>United States</td>\\n<td>MM/DD/YY</td>\\n</tr>\\n<tr>\\n<td>UK and rest of world</td>\\n<td>DD/MM/YY</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"asdatestringnoparam-as-string\\\">AsDateStringNoParam() as String</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Returns the date/time in long-date format.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A date/time string in long-date format (for example, Tuesday October 9, 2012)</p>\\n<h3 id=\\\"getweekday-as-string\\\">GetWeekday() as String</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns the day of the week.</p>\\n<blockquote>\\n<p>This function always returns the canonical English day of week names, regardless of the current locale.  For a locale-independent index, see the <a href=\\\"#getdayofweek-as-integer\\\">GetDayOfWeek()</a> function.</p>\\n</blockquote>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>Week value as a String (e.g. \\\"Monday\\\").</p>\\n<h3 id=\\\"getyear-as-integer\\\">GetYear() as Integer</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>GetYear</td>\\n<td>Integer</td>\\n<td>Year value as an Integer, e.g. 2015</td>\\n<td>Returns the date/time value's year</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getmonth-as-integer\\\">GetMonth() as Integer</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Returns the date/time value's month.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>Month value as an Integer (1=Jan, 12=Dec).</p>\\n<h3 id=\\\"getdayofmonth-as-integer\\\">GetDayOfMonth() as Integer</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Returns the date/time value's day of the month.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>Month value as an Integer (1-31).</p>\\n<h3 id=\\\"gethours-as-integer\\\">GetHours() as Integer</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Returns the date/time value's hour within the day.</p>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>Hour value as an Integer (0-23)</p>\\n<h3 id=\\\"getminutes-as-integer\\\">GetMinutes() as Integer</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Returns the date/time value's minute within the hour.</p>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>Minute value as an Integer (0-59)</p>\\n<h3 id=\\\"getseconds-as-integer\\\">GetSeconds() as Integer</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Returns the date/time value's second within the minute.</p>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>Second value as an Integer (0-59).</p>\\n<h3 id=\\\"getmilliseconds-as-integer\\\">GetMilliseconds() as Integer</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Returns the date/time value's millisecond within the second.</p>\\n<h4 id=\\\"return-value-12\\\">Return Value</h4>\\n<p>Millisecond value as an Integer (0-999).</p>\\n<h3 id=\\\"getlastdayofmonth-as-integer\\\">GetLastDayOfMonth() as Integer</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Returns the date/time value's last day of the month.</p>\\n<h4 id=\\\"return-value-13\\\">Return Value</h4>\\n<p>Day as an Integer (28-31)</p>\\n<h3 id=\\\"getdayofweek-as-integer\\\">GetDayOfWeek() as Integer</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Returns the date/time value's day of week.</p>\\n<h4 id=\\\"return-value-14\\\">Return Value</h4>\\n<p>Day value as an Integer (Sunday=0, Monday=1, ..., Saturday=6).</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifdeviceinfo.md":"{\n  \"content\": \"<h1 id=\\\"ifdeviceinfo\\\">ifDeviceInfo</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodeviceinfo.md\\\">roDeviceInfo</a></td>\\n<td>The roDeviceInfo component provides an interface to obtain attributes about the device</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h4 id=\\\"device-properties\\\">Device properties</h4>\\n<h3 id=\\\"getmodel-as-string\\\">GetModel() as String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the model name of the Roku device. See the <a href=\\\"/docs/specs/hardware.md\\\">Hardware Specification</a> for the list of the current, updatable, and legacy Roku models.</p>\\n<h4 id=\\\"return-values\\\">Return Values</h4>\\n<p>A five-character alphanumeric string (for example, \\\"3050X\\\") .</p>\\n<h3 id=\\\"getmodeldisplayname-as-string\\\">GetModelDisplayName() as String</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the model display name of the Roku device.</p>\\n<h4 id=\\\"return-values-1\\\">Return Values</h4>\\n<p>The model display name (for example, \\\"Roku 2 XD\\\")</p>\\n<h3 id=\\\"getmodeltype-as-string\\\">GetModelType() as String</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns a string describing the type of device. For future compatibility, the caller should by default assume \\\"STB\\\" when anything other than described value is returned</p>\\n<h4 id=\\\"return-values-2\\\">Return Values</h4>\\n<p>The device type, which may be one of the following values:</p>\\n<ul>\\n<li>\\\"STB\\\": Set-top box.</li>\\n<li>\\\"TV\\\": Roku TV.</li>\\n</ul>\\n<h3 id=\\\"getmodeldetails-as-object\\\">GetModelDetails() as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns detailed information about the device model.</p>\\n<h4 id=\\\"return-values-3\\\">Return Values</h4>\\n<p>An associative array containing the following information about the device model:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>VendorName</td>\\n<td>String</td>\\n<td>The model vendor.</td>\\n</tr>\\n<tr>\\n<td>ModelNumber</td>\\n<td>String</td>\\n<td>The model number.</td>\\n</tr>\\n<tr>\\n<td>VendorUSBName</td>\\n<td>String</td>\\n<td>The USB vendor.</td>\\n</tr>\\n<tr>\\n<td>ScreenSize</td>\\n<td>String</td>\\n<td>The size of the Roku TV.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getfriendlyname-as-string\\\">GetFriendlyName() as String</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns a string describing the device that may be used for network device selection.  The string is subject to change and should not be used as a persistent key or ID</p>\\n<h4 id=\\\"return-values-4\\\">Return Values</h4>\\n<p>A user-assigned device name or a description of the device such as model name and/or serial number.</p>\\n<h3 id=\\\"getosversion-as-object\\\">GetOSVersion() As Object</h3>\\n<p><em>Available since Roku OS 9.2</em></p>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns an roAssociativeArray containing the <strong>major</strong>, <strong>minor</strong>, <strong>revision</strong>, and <strong>build</strong> numbers of the Roku OS running on the device.</p>\\n<h4 id=\\\"return-values-5\\\">Return Values</h4>\\n<p>An roAssociativeArray containing the following fields:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>major</td>\\n<td>string</td>\\n<td>The major version number (for example, 9)</td>\\n</tr>\\n<tr>\\n<td>minor</td>\\n<td>string</td>\\n<td>The minor version number (for example, 2)</td>\\n</tr>\\n<tr>\\n<td>revision</td>\\n<td>string</td>\\n<td>The firmware revision number (for example, 6)</td>\\n</tr>\\n<tr>\\n<td>build</td>\\n<td>string</td>\\n<td>The build number (for example, 4127)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getversion-as-string\\\">GetVersion() as String</h3>\\n<blockquote>\\n<p><strong>This method is deprecated</strong>.</p>\\n<p>Developers must update their channels to use <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#getosversion-as-object\\\">GetOSVersion()</a> method to get the current Roku OS version running on a device.</p>\\n</blockquote>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the version number of the device.</p>\\n<h4 id=\\\"return-values-6\\\">Return Values</h4>\\n<p>A 13-character string (for example \\\"034.08E01185A\\\"). The third through sixth characters are the major/minor version number (\\\"4.08\\\") and the ninth through twelfth are the build number (\\\"1185\\\")</p>\\n<h3 id=\\\"getdeviceuniqueid-as-string\\\">GetDeviceUniqueId() as String</h3>\\n<blockquote>\\n<p> <strong>This method is deprecated</strong>.</p>\\n<p>Developers must update their channels to use the 32-character alphanumeric unique identifier returned by <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#getchannelclientid-as-string\\\">GetChannelClientId()</a>.</p>\\n</blockquote>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns a string of 12 zeroes (it no longer returns the unique identifier for the channel on a device).</p>\\n<h4 id=\\\"return-values-7\\\">Return Values</h4>\\n<p>A string of 12 zeros (\\\"000000000000\\\")</p>\\n<h3 id=\\\"getadvertisingid-as-string\\\">GetAdvertisingId() as String</h3>\\n<blockquote>\\n<p><strong>This method is deprecated</strong>.</p>\\n<p>Developers must update their channels to use the <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#getrida-as-string\\\">GetRIDA()</a> method to get the unique identifier.</p>\\n</blockquote>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Returns a unique identifier for the device. This identifier is persistent but can be reset by the user from the device's Settings menu or by performing a factory reset on the device.</p>\\n<p>If the user has disabled Ad ID tracking from the settings menu, then this identifier should not be used for targeted advertising. IsAdIdTrackingDisabled() should be called to check if the user has disabled Ad ID tracking</p>\\n<h4 id=\\\"return-values-8\\\">Return Values</h4>\\n<p>A Universally Unique Identifier (UUID) as specified in IETF-RFC 4122 with 36 characters (32 alphanumeric characters and four hyphens). The characters are grouped in the form 8-4-4-4-12, for example \\\"123e4567-e89b-12d3-a456-426655440000\\\"</p>\\n<h3 id=\\\"getrida-as-string\\\">GetRIDA() as String</h3>\\n<p><em>Available since Roku OS 8.1</em></p>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns a unique identifier for the device.</p>\\n<p>If the user has set \\\"Limit ad tracking\\\" from the <strong>Settings</strong> menu (RIDA is disabled), do not use this identifier for targeted advertising.  Call <a href=\\\"#isridadisabled-as-boolean\\\">IsRIDADisabled()</a> to check if the user has disabled RIDA tracking, call <a href=\\\"#getusercountrycode-as-string\\\">GetUserCountryCode()</a> to check the country associated with the user account.</p>\\n<blockquote>\\n<p> If the user’s country is an EU member country, any data collection must be compliant with the <a href=\\\"/docs/features/legal/compliance.md#gdpr\\\">EU General Data Protection Regulation (GDPR)</a>.</p>\\n</blockquote>\\n<h4 id=\\\"return-values-9\\\">Return Values</h4>\\n<p>A Universally Unique Identifier (UUID). This identifier is persistent, but it can be reset by the user from the device's <strong>Settings</strong> menu or by performing a factory reset on the device</p>\\n<h3 id=\\\"isadidtrackingdisabled-as-boolean\\\">IsAdIdTrackingDisabled() as Boolean</h3>\\n<blockquote>\\n<p> <strong>This method is deprecated</strong>.</p>\\n<p>Developers must update their channels to use <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#isridadisabled-as-boolean\\\">IsRIDADisabled()</a> to get the Ad Id tracking status.</p>\\n</blockquote>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>If Ad Id tracking is disabled, the identifier returned by GetAdvertisingId() should not be used for Ad targeting</p>\\n<h4 id=\\\"return-values-10\\\">Return Values</h4>\\n<p>Returns true if the user has disabled Ad Id tracking by selecting \\\"Limit ad tracking\\\" from the Roku Settings menu, false otherwise.</p>\\n<h3 id=\\\"isridadisabled-as-boolean\\\">IsRIDADisabled() as Boolean</h3>\\n<p><em>Available since Roku OS 8.1</em></p>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Indicates whether tracking via Roku's ID for Advertisers (RIDA) is disabled on the device.</p>\\n<h4 id=\\\"return-values-11\\\">Return Values</h4>\\n<p>A flag indicating whether RIDA tracking is disabled on the device (RIDA tracking can be disabled by selecting \\\"Limit ad tracking\\\" from the <strong>Settings>Privacy>Advertising</strong> menu). If RIDA tracking is disabled, this returns true; false otherwise.</p>\\n<h3 id=\\\"getclienttrackingid-as-string\\\">GetClientTrackingId() as String</h3>\\n<blockquote>\\n<p><strong>This method is deprecated</strong>.</p>\\n<p>Developers must update their channels to use the <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#getchannelclientid-as-string\\\">GetChannelClientId</a> method to get the unique identifier.</p>\\n</blockquote>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Returns a unique identifier for the device.</p>\\n<h4 id=\\\"return-values-12\\\">Return Values</h4>\\n<p>A unique device identifier. This identifier is different across channels so each channel will get a different identifier when calling this function</p>\\n<h3 id=\\\"getchannelclientid-as-string\\\">GetChannelClientId() as String</h3>\\n<p><em>Available since Roku OS 8.1</em></p>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Returns a unique identifier for the device. The ID is persistent and cannot be reset. This value can be used to manage or identify devices linked to the channel’s content services.</p>\\n<h4 id=\\\"return-values-13\\\">Return Values</h4>\\n<p>A unique device identifier. This identifier is different across channels so each channel will get a different identifier when calling this function</p>\\n<h3 id=\\\"getusercountrycode-as-string\\\">GetUserCountryCode() as String</h3>\\n<p><em>Available since Roku OS 8.1</em></p>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Returns the ISO 3166-1 (2-letter) country code associated with the user's Roku account.</p>\\n<h4 id=\\\"return-values-14\\\">Return Values</h4>\\n<p>An ISO 3166-1 (2-letter) country code.</p>\\n<blockquote>\\n<p>If the channel owner entered into an additional agreement to have the channel published to a curated <a href=\\\"https://www.roku.com/roku-powered\\\">Roku Powered Channel Store</a> instead of the user country, a Roku Powered Channel Store Identifier will instead be returned:</p>\\n</blockquote>\\n<table>\\n<thead>\\n<tr>\\n<th>Roku Powered Channel Store</th>\\n<th>Roku Powered Channel Store Identifier</th>\\n<th>Country</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Econet</td>\\n<td>Econet</td>\\n<td>ZW</td>\\n</tr>\\n<tr>\\n<td>Globe</td>\\n<td>globe</td>\\n<td>PH</td>\\n</tr>\\n<tr>\\n<td>PLDT</td>\\n<td>PLDT</td>\\n<td>PH</td>\\n</tr>\\n<tr>\\n<td>Sky Germany</td>\\n<td>skyde</td>\\n<td>DE</td>\\n</tr>\\n<tr>\\n<td>Sky Spain</td>\\n<td>skyes</td>\\n<td>ES</td>\\n</tr>\\n<tr>\\n<td>Sky Ireland</td>\\n<td>skyie</td>\\n<td>IE</td>\\n</tr>\\n<tr>\\n<td>Sky Italy</td>\\n<td>skyit</td>\\n<td>IT</td>\\n</tr>\\n<tr>\\n<td>Sky UK</td>\\n<td>skyuk</td>\\n<td>UK</td>\\n</tr>\\n<tr>\\n<td>Telstra</td>\\n<td>Telstra</td>\\n<td>AU</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>A future enhancement to GetUserCountryCode() will return the 2-letter country code instead of the Roku Powered Channel Store Identifier. It is therefore recommended that channels use both to avoid having to update later.</p>\\n</blockquote>\\n<h3 id=\\\"getrandomuuid-as-string\\\">GetRandomUUID() as String</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Returns a randomly generated unique identifier. Each time this function is called, a different identifier is returned</p>\\n<h4 id=\\\"return-values-15\\\">Return Values</h4>\\n<p>A Universally Unique Identifier (UUID) version 4 as specified in IETF-RFC 4122 with 36 characters (32 alphanumeric characters and four hyphens). The characters are grouped in the form 8-4-4-4-12, for example \\\"123e4567-e89b-12d3-a456-426655440000\\\"</p>\\n<h3 id=\\\"gettimezone-as-string\\\">GetTimeZone() as String</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Checks for the user's current system time zone setting.</p>\\n<h4 id=\\\"return-values-16\\\">Return Values</h4>\\n<p>A string representing the user's current system time zone setting. For example, this method may return values such as:</p>\\n<ul>\\n<li>\\\"US/Puerto Rico-Virgin Islands\\\"</li>\\n<li>\\\"US/Guam\\\"</li>\\n<li>\\\"US/Samoa\\\"</li>\\n<li>\\\"US/Hawaii\\\"</li>\\n<li>\\\"US/Aleutian\\\"</li>\\n<li>\\\"US/Alaska\\\"</li>\\n<li>\\\"US/Pacific\\\"</li>\\n<li>\\\"US/Arizona\\\"</li>\\n<li>\\\"US/Mountain\\\"</li>\\n<li>\\\"US/Central\\\"</li>\\n<li>\\\"US/Eastern\\\"</li>\\n<li>\\\"Canada/Pacific\\\"</li>\\n<li>\\\"Canada/Mountain\\\"</li>\\n<li>\\\"Canada/Central Standard\\\"</li>\\n<li>\\\"Canada/Central\\\"</li>\\n<li>\\\"Canada/Eastern\\\"</li>\\n<li>\\\"Canada/Atlantic\\\"</li>\\n<li>\\\"Canada/Newfoundland\\\"</li>\\n<li>\\\"Europe/Iceland\\\"</li>\\n<li>\\\"Europe/Ireland\\\"</li>\\n<li>\\\"Europe/United Kingdom\\\"</li>\\n<li>\\\"Europe/Portugal\\\"</li>\\n<li>\\\"Europe/Central European Time\\\"</li>\\n<li>\\\"Europe/Greece/Finland\\\"</li>\\n</ul>\\n<blockquote>\\n<p>Click <a href=\\\"/docs/references/brightscript/interfaces/time-zones.md\\\">here</a> for the complete list of time zones returned by this method.</p>\\n</blockquote>\\n<h3 id=\\\"hasfeaturefeature-as-string-as-boolean\\\">HasFeature(feature as String) as Boolean</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Checks if the current device/firmware supports the passed in feature string.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>feature</td>\\n<td>String</td>\\n<td>The feature to be checked, which may be one of the following values: <ul>\\n<li>\\\"5.1_surround_sound\\\"</li>\\n<li>\\\"can_output_5.1_surround_sound\\\"</li>\\n<li>\\\"sd_only_hardware\\\"</li>\\n<li>\\\"usb_hardware\\\"</li>\\n<li>\\\"sdcard_hardware\\\"</li>\\n<li>\\\"ethernet_hardware\\\"</li>\\n<li>\\\"gaming_hardware\\\"</li>\\n<li>\\\"energy_star_compliant\\\"</li>\\n<li>\\\"soundbar_hardware\\\"</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>The \\\"1080p_hardware\\\" argument has been deprecated for Roku OS version 7.0. Channel applications should use the GetVideoMode() and CanDecodeVideo() functions instead</p>\\n</blockquote>\\n<h4 id=\\\"return-values-17\\\">Return Values</h4>\\n<p>A flag indicating whether the current device/firmware supports the passed in feature string.</p>\\n<h3 id=\\\"getcurrentlocale-as-string\\\">GetCurrentLocale() as String</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Gets the current locale value based on the user's language setting.</p>\\n<h4 id=\\\"return-values-18\\\">Return Values</h4>\\n<p>A string representing the current locale based on the user's language setting. The string is an ISO 639-1 (2-letter) language code followed by an underscore and a ISO 3166-1 (2-letter) country code. This may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>String</th>\\n<th>Locale</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\"en_US\\\"</td>\\n<td>US English</td>\\n</tr>\\n<tr>\\n<td>\\\"en_GB\\\"</td>\\n<td>British English</td>\\n</tr>\\n<tr>\\n<td>\\\"fr_CA\\\"</td>\\n<td>Canadian French</td>\\n</tr>\\n<tr>\\n<td>\\\"es_ES\\\"</td>\\n<td>International Spanish</td>\\n</tr>\\n<tr>\\n<td>\\\"es_MX\\\"</td>\\n<td>Mexican Spanish</td>\\n</tr>\\n<tr>\\n<td>\\\"de_DE\\\"</td>\\n<td>German</td>\\n</tr>\\n<tr>\\n<td>\\\"it_IT\\\"</td>\\n<td>Italian</td>\\n</tr>\\n<tr>\\n<td>\\\"pt_BR\\\"</td>\\n<td>Brazilian Portuguese</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getcountrycode-as-string\\\">GetCountryCode() as String</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Checks for the country code of the channel.</p>\\n<h4 id=\\\"return-values-19\\\">Return Values</h4>\\n<p>A value that indicates the Roku Channel Store associated with a user’s Roku account. Typically, the value returned will be an ISO 3166-1 (2-letter) country code representing the country. Alternatively, if the channel owner entered into an additional agreement to have the channel published to a curated <a href=\\\"https://www.roku.com/roku-powered\\\">Roku Powered Channel Store</a> instead of the user country, then a Roku Powered Channel Store Identifier will instead be returned. This may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Value</th>\\n<th>Country</th>\\n<th>Roku Powered Channel Store (if applicable)</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\"AR\\\"</td>\\n<td>Argentina</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"BR\\\"</td>\\n<td>Brazil</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"CA\\\"</td>\\n<td>Canada</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"CL\\\"</td>\\n<td>Chile</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"CO\\\"</td>\\n<td>Colombia</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"CR\\\"</td>\\n<td>Costa Rica</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"Econet\\\"</td>\\n<td>Zimbabwe</td>\\n<td>Econet</td>\\n</tr>\\n<tr>\\n<td>\\\"FR\\\"</td>\\n<td>France</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"GB\\\"</td>\\n<td>Great Britain and Northern Ireland</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"globe\\\"</td>\\n<td>Philippines</td>\\n<td>Globe</td>\\n</tr>\\n<tr>\\n<td>\\\"GT\\\"</td>\\n<td>Guatemala</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"HN\\\"</td>\\n<td>Honduras</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"IE\\\"</td>\\n<td>Republic of Ireland</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"MX\\\"</td>\\n<td>Mexico</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"OT\\\"</td>\\n<td>Rest of World</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"PA\\\"</td>\\n<td>Panama</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"PE\\\"</td>\\n<td>Peru</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"PLDT\\\"</td>\\n<td>Philippines</td>\\n<td>PLDT</td>\\n</tr>\\n<tr>\\n<td>\\\"Telstra\\\"</td>\\n<td>Australia</td>\\n<td>Telstra</td>\\n</tr>\\n<tr>\\n<td>\\\"skyde\\\"</td>\\n<td>Germany</td>\\n<td>Sky Germany</td>\\n</tr>\\n<tr>\\n<td>\\\"skyes\\\"</td>\\n<td>Spain</td>\\n<td>Sky Spain</td>\\n</tr>\\n<tr>\\n<td>\\\"skyie\\\"</td>\\n<td>Ireland</td>\\n<td>Sky Ireland</td>\\n</tr>\\n<tr>\\n<td>\\\"skyit\\\"</td>\\n<td>Italy</td>\\n<td>Sky Italy</td>\\n</tr>\\n<tr>\\n<td>\\\"skyuk\\\"</td>\\n<td>United Kingdom</td>\\n<td>Sky UK</td>\\n</tr>\\n<tr>\\n<td>\\\"SV\\\"</td>\\n<td>El Salvador</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>\\\"US\\\"</td>\\n<td>United States</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>This does not necessarily match the physical location of the device, nor does it necessarily match the last two letters of the current locale string.</p>\\n</blockquote>\\n<h3 id=\\\"getpreferredcaptionlanguage-as-string\\\">GetPreferredCaptionLanguage() as String</h3>\\n<h4 id=\\\"description-20\\\">Description</h4>\\n<p>Checks the three-letter ISO 639-2 language terminology code of the preferred caption language set on the Roku device.</p>\\n<h4 id=\\\"return-values-20\\\">Return Values</h4>\\n<p>The three-letter ISO 639-2 language terminology code, which may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Language</th>\\n<th>Code</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>English</td>\\n<td>eng</td>\\n</tr>\\n<tr>\\n<td>Spanish</td>\\n<td>spa</td>\\n</tr>\\n<tr>\\n<td>French</td>\\n<td>fra</td>\\n</tr>\\n<tr>\\n<td>German</td>\\n<td>deu</td>\\n</tr>\\n<tr>\\n<td>Italian</td>\\n<td>ita</td>\\n</tr>\\n<tr>\\n<td>Portuguese</td>\\n<td>por</td>\\n</tr>\\n<tr>\\n<td>Russian</td>\\n<td>rus</td>\\n</tr>\\n<tr>\\n<td>Turkish</td>\\n<td>tur</td>\\n</tr>\\n<tr>\\n<td>Polish</td>\\n<td>pol</td>\\n</tr>\\n<tr>\\n<td>Ukranian</td>\\n<td>ukr</td>\\n</tr>\\n<tr>\\n<td>Romanian</td>\\n<td>ron</td>\\n</tr>\\n<tr>\\n<td>Dutch</td>\\n<td>nld</td>\\n</tr>\\n<tr>\\n<td>Croatian</td>\\n<td>hrv</td>\\n</tr>\\n<tr>\\n<td>Hungarian</td>\\n<td>hun</td>\\n</tr>\\n<tr>\\n<td>Greek</td>\\n<td>ell</td>\\n</tr>\\n<tr>\\n<td>Czech</td>\\n<td>ces</td>\\n</tr>\\n<tr>\\n<td>Swedish</td>\\n<td>swe</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"timesincelastkeypress-as-integer\\\">TimeSinceLastKeypress() as Integer</h3>\\n<h4 id=\\\"description-21\\\">Description</h4>\\n<p>Checks for the number of seconds passed since the last remote keypress.</p>\\n<h4 id=\\\"return-values-21\\\">Return Values</h4>\\n<p>The number of seconds since the last remote keypress was received.</p>\\n<h3 id=\\\"getdrminfo-as-object\\\">GetDrmInfo() as Object</h3>\\n<blockquote>\\n<p><strong>This method is deprecated</strong>.</p>\\n<p>Developers must update their channels to use the replacement API <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#getdrminfoex-as-object\\\">GetDrmInfoEx()</a> to return the supported DRM system and features.</p>\\n</blockquote>\\n<h4 id=\\\"description-22\\\">Description</h4>\\n<p>Checks for the supported DRM system and its features.</p>\\n<h4 id=\\\"return-values-22\\\">Return Values</h4>\\n<p>An associative array with the supported DRM system and features. For example, a device that supports PlayReady inside a trusted environment with secure stop returns:</p>\\n<p><code>{\\\"playready\\\": \\\"tee;ss\\\"}</code></p>\\n<p>The values for the PlayReady key above are:</p>\\n<ul>\\n<li><strong>tee</strong> indicates the core DRM system runs in a Trusted Execution Environment</li>\\n<li><strong>ss</strong> indicates the DRM system supports secure stop</li>\\n</ul>\\n<h3 id=\\\"getdrminfoex-as-object\\\">GetDrmInfoEx() as Object</h3>\\n<p><em>Available since Roku OS 8.1</em>\\n<em>As of Roku OS 9.4 , returns the \\\"securityLevel\\\" for Widevine and PlayReady DRMs</em></p>\\n<blockquote>\\n<p>Channels should cache the results of a call to this method (it takes approximately 1 second to return on devices running Roku OS 10.0).</p>\\n</blockquote>\\n<p><strong>Description</strong></p>\\n<p>Checks for the DRM system used by the channel.</p>\\n<p><strong>Return Values</strong></p>\\n<p>An associative array with the supported DRM system and features:</p>\\n<p><strong>Example</strong></p>\\n<pre><code>PlayReady : {\\n    multikey: false\\n    securestop: true\\n    tee: false\\n    version: \\\"2.5\\\"\\n    securityLevel: \\\"2000\\\"\\n}\\nWidevine : {\\n    multikey: true\\n    securestop: false\\n    tee: false\\n    version: \\\"3.5\\\"\\n    securityLevel: \\\"2\\\"\\n}\\n    Verimatrix : {\\n    multikey: false\\n    securestop: false\\n    tee: false\\n    version: \\\"3.7\\\"\\n}\\n</code></pre>\\n<blockquote>\\n<p>tee indicates the core DRM system runs in a Trusted Execution Environment.</p>\\n</blockquote>\\n<h3 id=\\\"getcaptionsmode-as-string\\\">GetCaptionsMode() as String</h3>\\n<h4 id=\\\"description-23\\\">Description</h4>\\n<p>Determines whether global captions are turned on or off, or are in instant replay mode.</p>\\n<h4 id=\\\"return-values-23\\\">Return Values</h4>\\n<p>The current global setting for the Mode property, which may be one of the following values:</p>\\n<ul>\\n<li>On</li>\\n<li>Off</li>\\n<li>Instant replay</li>\\n</ul>\\n<blockquote>\\n<p>On a Roku TV, when the user selects On Mute this function will return On when the TV is muted and Off when it is not muted.</p>\\n</blockquote>\\n<h3 id=\\\"setcaptionsmodemode-as-string-as-boolean\\\">SetCaptionsMode(mode as String) as Boolean</h3>\\n<h4 id=\\\"description-24\\\">Description</h4>\\n<p>Sets the current global setting for the Mode property.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>mode</td>\\n<td>String</td>\\n<td>The current global setting for the Mode property, which may be one of the following values: <ul>\\n<li>On</li>\\n<li>Off</li>\\n<li>Instant replay</li>\\n<li>When mute (Roku TVs only)</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-24\\\">Return Values</h4>\\n<p>A flag indicating whether the Mode property was successfully set.</p>\\n<h3 id=\\\"getcaptionsoptionoption-as-string-as-string\\\">GetCaptionsOption(option as String) as String</h3>\\n<h4 id=\\\"description-25\\\">Description</h4>\\n<p>Checks the current value of the specified global setting property.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Option</td>\\n<td>String</td>\\n<td>The global setting property to be checked, which may be one of the following values: <ul>\\n<li>Mode</li>\\n<li>Text/Font</li>\\n<li>Text/Effect</li>\\n<li>Text/Size</li>\\n<li>Text/Color</li>\\n<li>Text/Opacity</li>\\n<li>Background/Color</li>\\n<li>Background/Opacity</li>\\n<li>Window/Color</li>\\n<li>Window/Opacity</li>\\n<li>Track</li>\\n<li>Track_Composite</li>\\n<li>Track_Analog</li>\\n<li>Muted</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-25\\\">Return Values</h4>\\n<p>The value of the specified global setting property, which may be as follows:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Queried Property</th>\\n<th>Possible Values</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Mode</td>\\n<td><ul>\\n<li>On</li>\\n<li>Off</li>\\n<li>Instant replay</li>\\n<li>When mute (Roku TVs only)</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Text style</td>\\n<td><ul>\\n<li>Default</li>\\n<li>Serif Fixed Width</li>\\n<li>Serif Proportional</li>\\n<li>Sans Serif Fixed Width</li>\\n<li>Sans Serif Proportional</li>\\n<li>Casual</li>\\n<li>Cursive</li>\\n<li>Small Caps</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Text edge effect</td>\\n<td><ul>\\n<li>Default</li>\\n<li>None</li>\\n<li>Raised</li>\\n<li>Depressed</li>\\n<li>Uniform</li>\\n<li>Drop shadow (left)</li>\\n<li>Drop shadow (right)</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Text size</td>\\n<td><ul>\\n<li>Default</li>\\n<li>Large</li>\\n<li>Medium</li>\\n<li>Small</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Text color</td>\\n<td><ul>\\n<li>Default</li>\\n<li>White</li>\\n<li>Black</li>\\n<li>Red</li>\\n<li>Green</li>\\n<li>Blue</li>\\n<li>Yellow</li>\\n<li>Magenta</li>\\n<li>Cyan</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Text opacity</td>\\n<td><ul>\\n<li>Default</li>\\n<li>25%</li>\\n<li>75%</li>\\n<li>100%</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Background Color</td>\\n<td><ul>\\n<li>Default</li>\\n<li>White</li>\\n<li>Black</li>\\n<li>Red</li>\\n<li>Green</li>\\n<li>Blue</li>\\n<li>Yellow</li>\\n<li>Magenta</li>\\n<li>Cyan</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Background Opacity</td>\\n<td><ul>\\n<li>Default</li>\\n<li>Off</li>\\n<li>25%</li>\\n<li>75%</li>\\n<li>100%</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Window Color</td>\\n<td><ul>\\n<li>Default</li>\\n<li>White</li>\\n<li>Black</li>\\n<li>Red</li>\\n<li>Green</li>\\n<li>Blue</li>\\n<li>Yellow</li>\\n<li>Magenta</li>\\n<li>Cyan</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>Window Opacity</td>\\n<td><ul>\\n<li>Default</li>\\n<li>Off</li>\\n<li>25%</li>\\n<li>75%</li>\\n<li>100%</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>di = CreateObject(\\\"roDeviceInfo\\\")\\nmode = di.GetCaptionsMode()\\n\\nprint \\\"Font=\\\";di.GetCaptionsOption(\\\"Text/Font\\\")\\nprint \\\"Color=\\\";di.GetCaptionsOption(\\\"Text/Color\\\")\\nprint \\\"Size=\\\";di.GetCaptionsOption(\\\"Text/Size\\\")\\nprint \\\"Effect=\\\";di.GetCaptionsOption(\\\"Text/Effect\\\")\\nprint \\\"Opacity=\\\";di.GetCaptionsOption(\\\"Text/Opacity\\\")\\nprint \\\"Background Color=\\\";di.GetCaptionsOption(\\\"Background/Color\\\")\\nprint \\\"Background Opacity=\\\";di.GetCaptionsOption(\\\"Background/Opacity\\\")\\nprint \\\"Window Color=\\\";di.GetCaptionsOption(\\\"Window/Color\\\")\\nprint \\\"Window Opacity=\\\";di.GetCaptionsOption(\\\"Window/Opacity\\\")\\n</code></pre>\\n<h3 id=\\\"getclockformat-as-string\\\">GetClockFormat() as String</h3>\\n<h4 id=\\\"description-26\\\">Description</h4>\\n<p>Checks whether the system settings for Time (<strong>Setting > System > Time</strong>) is set to a 12 or 24-hour format.</p>\\n<h4 id=\\\"return-values-26\\\">Return Values</h4>\\n<p>The time format:</p>\\n<ul>\\n<li>\\\"12h\\\": 12-hour AM/PM format</li>\\n<li>\\\"24h\\\": 24-hour format</li>\\n<li>\\\"\\\": error</li>\\n</ul>\\n<h3 id=\\\"enableappfocuseventenable-as-boolean-as-dynamic\\\">EnableAppFocusEvent(enable as Boolean) as Dynamic</h3>\\n<p><em>Available since Roku OS 8.0</em></p>\\n<h4 id=\\\"description-27\\\">Description</h4>\\n<p>Notifies the channel when a system overlay event (such as the <a href=\\\"/docs/developer-program/getting-started/architecture/channel-manifest.md#special-purpose-attributes\\\">confirm partner button HUD</a> or the caption control overlay) is displayed. This notification gives the channel the opportunity to do any processing they may want to when the channel loses or regains focus.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable/disable system overlay event notifications.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-27\\\">Return Values</h4>\\n<p>A flag indicating whether the system overlay event notifications are enabled (true) or disabled (false).</p>\\n<h3 id=\\\"enablescreensaverexitedeventenable-as-boolean-as-dynamic\\\">EnableScreensaverExitedEvent(enable as Boolean) as Dynamic</h3>\\n<h4 id=\\\"description-28\\\">Description</h4>\\n<p>Notifies the channel when a screensaver exit event occurs. This function enables the sending of an <a href=\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\">roDeviceInfoEvent</a> when a user has exited the screensaver.</p>\\n<p>To receive events, you must have first called <a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\">SetMessagePort</a> on the roDeviceInfo object specifying the message port that is to receive the events</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable/disable screensaver exit event notifications.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-28\\\">Return Values</h4>\\n<p>A flag indicating whether screensaver exit event notifications are enabled (true) or disabled (false).</p>\\n<h3 id=\\\"ishdmiconnected-as-boolean\\\">IsHDMIConnected() as Boolean</h3>\\n<blockquote>\\n<p><strong>This method is deprecated</strong>.</p>\\n<p> Channel developers must use the <a href=\\\"/docs/references/brightscript/interfaces/ifhdmistatus.md\\\">ifHdmiStatus</a> interface functions instead.</p>\\n</blockquote>\\n<h4 id=\\\"description-29\\\">Description</h4>\\n<p>Checks for an HDMI connection.</p>\\n<h4 id=\\\"return-values-29\\\">Return Values</h4>\\n<p>A flag indicating whether an HDMI connection to a TV has been detected.</p>\\n<h3 id=\\\"enablelowgeneralmemoryeventenabled-as-boolean-as-dynamic\\\">EnableLowGeneralMemoryEvent(enabled as Boolean) as Dynamic</h3>\\n<p><em>Available since Roku OS 8.1</em></p>\\n<h4 id=\\\"description-30\\\">Description</h4>\\n<p>Notifies the channel when a lowGeneralMemoryLevel event occurs. This function enables the sending of an <a href=\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\">roDeviceInfoEvent</a> when a low general memory event occurs.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable/disable lowGeneralMemoryLevel event notifications.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-30\\\">Return Values</h4>\\n<p>A flag indicating whether lowGeneralMemoryLevel event notifications are enabled (true) or disabled (false).</p>\\n<h3 id=\\\"getgeneralmemorylevel-as-string\\\">GetGeneralMemoryLevel() as String</h3>\\n<p><em>Available since Roku OS 8.1</em></p>\\n<h4 id=\\\"description-31\\\">Description</h4>\\n<p>Checks the general memory levels of the channel.</p>\\n<h4 id=\\\"return-values-31\\\">Return Values</h4>\\n<p>Returns the general memory levels of the channel, which may be one of the following values:</p>\\n<ul>\\n<li>\\\"normal\\\"</li>\\n<li>\\\"low\\\"</li>\\n<li>\\\"critical\\\"</li>\\n</ul>\\n<h3 id=\\\"isstoredemomode-as-boolean\\\">IsStoreDemoMode() as Boolean</h3>\\n<p><em>Available since Roku OS 9.3</em></p>\\n<h4 id=\\\"description-32\\\">Description</h4>\\n<p>Checks whether the device is in demo mode.</p>\\n<h4 id=\\\"return-values-32\\\">Return Values</h4>\\n<p>A flag indicating whether the device is in demo mode.</p>\\n<h4 id=\\\"network-info\\\">Network info</h4>\\n<h3 id=\\\"getlinkstatus-as-boolean\\\">GetLinkStatus() as Boolean</h3>\\n<h4 id=\\\"description-33\\\">Description</h4>\\n<p>Checks if the device has an active connection.</p>\\n<h4 id=\\\"return-values-33\\\">Return Values</h4>\\n<p>A flag indicating whether the device has an active connection.</p>\\n<h3 id=\\\"enablelinkstatuseventenable-as-boolean-as-boolean\\\">EnableLinkStatusEvent(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-34\\\">Description</h4>\\n<p>Notifies the channel when a network connection status event occurs. This function enables the sending of an <a href=\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\">roDeviceInfoEvent</a> when the network connection status changes. To receive events, you must have first called <a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\">SetMessagePort</a> on the roDeviceInfo object specifying the message port that is to receive the events</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable/disable network connection status event notifications.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-34\\\">Return Values</h4>\\n<p>A flag indicating whether network connection status event notifications are enabled (true) or disabled (false).</p>\\n<h3 id=\\\"getconnectiontype-as-string\\\">GetConnectionType() as String</h3>\\n<h4 id=\\\"description-35\\\">Description</h4>\\n<p>Checks whether the device has a WiFi or wired connection, or if it is not connected through any type of network.</p>\\n<h4 id=\\\"return-values-35\\\">Return Values</h4>\\n<p>The type of internet connection the device is using. This may be one of the following values:</p>\\n<ul>\\n<li>\\\"WiFiConnection\\\"</li>\\n<li>\\\"WiredConnection\\\"</li>\\n<li>\\\"\\\" (the device does not have an Internet connection)</li>\\n</ul>\\n<h3 id=\\\"enableinternetstatuseventenable-as-boolean-as-boolean\\\">EnableInternetStatusEvent(enable as Boolean) as Boolean</h3>\\n<p><em>Available since Roku OS 10.0</em></p>\\n<h4 id=\\\"description-36\\\">Description</h4>\\n<p>Notifies the channel when an internet connection status event occurs. This function enables the sending of an <a href=\\\"https://developer.roku.com/docs/references/brightscript/events/rodeviceinfoevent.md\\\">roDeviceInfoEvent</a> when the network connection status changes, as indicated by <code>roDeviceInfoEvent.internetStatus</code>. To receive events, the channel must have first called <a href=\\\"https://developer.roku.com/docs/references/brightscript/interfaces/ifsetmessageport.md\\\">SetMessagePort</a> on the roDeviceInfo object specifying the message port that is to receive the events.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable/disable network connection status event notifications.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-36\\\">Return Values</h4>\\n<p>A flag indicating whether network connection status event notifications are enabled (true) or disabled (false).</p>\\n<h3 id=\\\"getinternetstatus-as-boolean\\\">GetInternetStatus() as Boolean</h3>\\n<p><em>Available since Roku OS 10.0</em></p>\\n<h4 id=\\\"description-37\\\">Description</h4>\\n<p>Checks the internet connection status of the device.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>True if the cached internet status shows a connection; false, otherwise.</p>\\n<h3 id=\\\"forceinternetstatuscheck-as-boolean\\\">ForceInternetStatusCheck() as Boolean</h3>\\n<p><em>Available since Roku OS 10.0</em></p>\\n<h4 id=\\\"description-38\\\">Description</h4>\\n<p>Forces a new internet connection check. A new check will only be initiated if the cached internet status is older than 10 seconds.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>True indicates only that a new internet check has been initiated; otherwise, false. To get the actual internet connection status, use the <a href=\\\"getinternetstatus-as-boolean\\\"><strong>GetInternetStatus()</strong></a> method.</p>\\n<h3 id=\\\"getexternalip-as-string\\\">GetExternalIp() as String</h3>\\n<h4 id=\\\"description-39\\\">Description</h4>\\n<p>Checks the IP address assigned to the device by your internet service provider (ISP). This IP address is visible to the internet and all other computers outside your local network.</p>\\n<h4 id=\\\"return-values-37\\\">Return Values</h4>\\n<p>The external IP address assigned to the device.</p>\\n<h3 id=\\\"getipaddrs-as-object\\\">GetIPAddrs() as Object</h3>\\n<h4 id=\\\"description-40\\\">Description</h4>\\n<p>Checks the local IP address of the device. This can be used in conjunction with the ECP (see the External Control Protocol Guide) \\\"launch\\\" command (or the \\\"install\\\" command for uninstalled channels) to start a different channel from the current channel.</p>\\n<h4 id=\\\"return-values-38\\\">Return Values</h4>\\n<p>An associative array, where each key is the name of a network interface and the value is the IP-address of the interface. Typically, the associative array only contains a single interface.</p>\\n<h3 id=\\\"getconnectioninfo-as-object\\\">GetConnectionInfo() as Object</h3>\\n<h4 id=\\\"description-41\\\">Description</h4>\\n<p>Checks for the information associated with the hardware's connection</p>\\n<h4 id=\\\"return-values-39\\\">Return Values</h4>\\n<p>An associative array with the following key-value pairs:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>type</td>\\n<td>Same as the value returned from GetConnectionType()</td>\\n</tr>\\n<tr>\\n<td>name</td>\\n<td>Name of the connection interface</td>\\n</tr>\\n<tr>\\n<td>ip</td>\\n<td>IP Address used by the connection</td>\\n</tr>\\n<tr>\\n<td>mac</td>\\n<td><em>This field is deprecated</em><br /><br />The device's MAC address is no longer returned (a string of zeros is returned in this field). Developers can use the <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#getchannelclientid-as-string\\\">roDeviceInfo.GetChannelClientId </a>method to uniquely identify devices.</td>\\n</tr>\\n<tr>\\n<td>ssid</td>\\n<td>The SSID of the Access Point (present only if type = \\\"WiFiConnection\\\")</td>\\n</tr>\\n<tr>\\n<td>gateway</td>\\n<td>IP Address of the connection gateway (usually the router)</td>\\n</tr>\\n<tr>\\n<td>dns.0</td>\\n<td>IP Address of first DNS server associated with the connection</td>\\n</tr>\\n<tr>\\n<td>dns.1</td>\\n<td>IP Address of the second DNS server, if any (Similarly for any subsequent DNS servers)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"video-info\\\">Video info</h4>\\n<h3 id=\\\"getdisplaytype-as-string\\\">GetDisplayType() as String</h3>\\n<h4 id=\\\"description-42\\\">Description</h4>\\n<p>Gets the text corresponding to the button selection in the Player Info Settings/Display Type page.</p>\\n<h4 id=\\\"return-values-40\\\">Return Values</h4>\\n<p>The display type, which may be one of the following values:</p>\\n<ul>\\n<li>\\\"HDTV\\\"</li>\\n<li>\\\"4:3 standard\\\"</li>\\n<li>\\\"16:9 anamorphic\\\"</li>\\n</ul>\\n<h3 id=\\\"getdisplaymode-as-string\\\">GetDisplayMode() as String</h3>\\n<h4 id=\\\"description-43\\\">Description</h4>\\n<p>Checks the UI resolution of the device.</p>\\n<h4 id=\\\"return-values-41\\\">Return Values</h4>\\n<p>The configured graphics layer resolution, which may be one of the following values:</p>\\n<ul>\\n<li>\\\"480i\\\" or \\\"480p\\\" (the <strong>ui_resolutions</strong> manifest entry includes <strong>sd</strong> as a supported resolution).</li>\\n<li>\\\"720p\\\"</li>\\n<li>\\\"1080p\\\" (the <strong>ui_resolutions</strong> manifest file entry includes <strong>fhd</strong> as a supported resolution)</li>\\n</ul>\\n<h3 id=\\\"getdisplayaspectratio-as-string\\\">GetDisplayAspectRatio() as String</h3>\\n<h4 id=\\\"description-44\\\">Description</h4>\\n<p>Checks the aspect ratio for the display screen.</p>\\n<h4 id=\\\"return-values-42\\\">Return Values</h4>\\n<p>The aspect ratio, which may be one of the following values:</p>\\n<ul>\\n<li>\\\"4x3\\\"</li>\\n<li>\\\"16x9\\\"</li>\\n</ul>\\n<h3 id=\\\"getdisplaysize-as-object\\\">GetDisplaySize() as Object</h3>\\n<h4 id=\\\"description-45\\\">Description</h4>\\n<p>Checks the display size of a screen.</p>\\n<h4 id=\\\"return-values-43\\\">Return Values</h4>\\n<p>An associative array with the screen width and height. Specifically, the keys \\\"w\\\" and \\\"h\\\" contain the values for the screen width and height respectively, either 720 and 480, or 1280 and 720</p>\\n<h3 id=\\\"getvideomode-as-string\\\">GetVideoMode() as String</h3>\\n<h4 id=\\\"description-46\\\">Description</h4>\\n<p>Checks the video playback resolution.</p>\\n<h4 id=\\\"return-values-44\\\">Return Values</h4>\\n<p>The video playback resolution, which maybe one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>String</th>\\n<th>Resolution</th>\\n<th>Aspect Ratio</th>\\n<th>Refresh Rate</th>\\n<th>Bit Depth</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\"480i\\\"</td>\\n<td>720x480</td>\\n<td>4:3</td>\\n<td>60 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"480p\\\"</td>\\n<td>720x480</td>\\n<td>4:3</td>\\n<td>60 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"576i25\\\"</td>\\n<td>720x576</td>\\n<td>4:3</td>\\n<td>25 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"576p50\\\"</td>\\n<td>720x576</td>\\n<td>4:3</td>\\n<td>50 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"576p60\\\"</td>\\n<td>720x576</td>\\n<td>4:3</td>\\n<td>60 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"720p50\\\"</td>\\n<td>1280x720</td>\\n<td>16:9</td>\\n<td>50 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"720p\\\"</td>\\n<td>1280x720</td>\\n<td>16:9</td>\\n<td>60 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"1080i50\\\"</td>\\n<td>1920x1080</td>\\n<td>16:9</td>\\n<td>50 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"1080i\\\"</td>\\n<td>1920x1080</td>\\n<td>16:9</td>\\n<td>60 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"1080p24\\\"</td>\\n<td>1920x1080</td>\\n<td>16:9</td>\\n<td>24 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"1080p25\\\"</td>\\n<td>1920x1080</td>\\n<td>16:9</td>\\n<td>25 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"1080p30\\\"</td>\\n<td>1920x1080</td>\\n<td>16:9</td>\\n<td>30 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"1080p50\\\"</td>\\n<td>1920x1080</td>\\n<td>16:9</td>\\n<td>50 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"1080p\\\"</td>\\n<td>1920x1080</td>\\n<td>16:9</td>\\n<td>60 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p24\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>24 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p25\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>25 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p30\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>30 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p50\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>50 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p60\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>60 Hz</td>\\n<td>8 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p24b10\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>24 Hz</td>\\n<td>10 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p25b10\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>25 Hz</td>\\n<td>10 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p30b10\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>30 Hz</td>\\n<td>10 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p50b10\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>50 Hz</td>\\n<td>10 Bit</td>\\n</tr>\\n<tr>\\n<td>\\\"2160p60b10\\\"</td>\\n<td>3840x2160</td>\\n<td>16:9</td>\\n<td>60 Hz</td>\\n<td>10 Bit</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getdisplayproperties-as-object\\\">GetDisplayProperties() as Object</h3>\\n<h4 id=\\\"description-47\\\">Description</h4>\\n<p>Checks for the display properties of the screen.</p>\\n<h4 id=\\\"return-values-45\\\">Return Values</h4>\\n<p>An associative array with the following key/value pairs for the display properties of the screen:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Width</td>\\n<td>Integer</td>\\n<td>Physical width of the attached display in centimeters</td>\\n</tr>\\n<tr>\\n<td>Height</td>\\n<td>Integer</td>\\n<td>Physical height of the attached display in centimeters</td>\\n</tr>\\n<tr>\\n<td>Internal</td>\\n<td>Boolean</td>\\n<td>Set to true if the display is part of the Roku Player (such as a Roku TV), false otherwise</td>\\n</tr>\\n<tr>\\n<td>Hdr10</td>\\n<td>Boolean</td>\\n<td>Set to true if the attached display supports HDR10, false otherwise</td>\\n</tr>\\n<tr>\\n<td>DolbyVision</td>\\n<td>Boolean</td>\\n<td>Set to true if the attached display supports Dolby Vision, false otherwise</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getsupportedgraphicsresolutions-as-object\\\">GetSupportedGraphicsResolutions() as Object</h3>\\n<h4 id=\\\"description-48\\\">Description</h4>\\n<p>Checks the supported graphics resolutions.</p>\\n<h4 id=\\\"return-values-46\\\">Return Values</h4>\\n<p>A list of associative arrays. Each associative array contains the following key/value pairs for the graphics resolutions:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>width</td>\\n<td>integer</td>\\n<td>The pixel width of the supported resolution</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>integer</td>\\n<td>The pixel height of the supported resolution</td>\\n</tr>\\n<tr>\\n<td>name</td>\\n<td>string</td>\\n<td>Either SD, HD, or FHD</td>\\n</tr>\\n<tr>\\n<td>ui</td>\\n<td>boolean</td>\\n<td>True if this resolution is the current Roku UI resolution</td>\\n</tr>\\n<tr>\\n<td>preferred</td>\\n<td>boolean</td>\\n<td>True if this is the preferred UI resolution, i.e., if this is the optimal resolution for the device</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"candecodevideovideo_format-as-object-as-object\\\">CanDecodeVideo(video_format as Object) as Object</h3>\\n<h4 id=\\\"description-49\\\">Description</h4>\\n<p>Checks whether the device can decode and play the specified video format.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>video_format</td>\\n<td>Object</td>\\n<td>An associative array with the following key/value pairs specifying the video format to be checked: <table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n<th>Requirement</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Codec</td>\\n<td>string</td>\\n<td>Specifies the video codec: <table>\\n<thead>\\n<tr>\\n<th>Codec</th>\\n<th>Profile</th>\\n<th>Level</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\"mpeg2\\\"</td>\\n<td>n/a</td>\\n<td>\\\"main\\\", \\\"high\\\"</td>\\n</tr>\\n<tr>\\n<td>\\\"mpeg4 avc\\\"  1</td>\\n<td>\\\"main\\\", \\\"high\\\"</td>\\n<td>\\\"4.1\\\", \\\"4.2\\\"</td>\\n</tr>\\n<tr>\\n<td>\\\"hevc\\\" 1</td>\\n<td>\\\"main\\\", \\\"main 10\\\"</td>\\n<td>\\\"4.1\\\", \\\"5.0\\\", \\\"5.1\\\"</td>\\n</tr>\\n<tr>\\n<td>\\\"vp9\\\" 1</td>\\n<td>\\\"profile 0\\\", \\\"profile 2\\\"</td>\\n<td>\\\"4.1\\\", \\\"5.0\\\", \\\"5.1\\\"</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td>Required</td>\\n</tr>\\n<tr>\\n<td>Profile</td>\\n<td>string</td>\\n<td>Specifies the profile</td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>Level</td>\\n<td>string</td>\\n<td>Specifies the level</td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>Container</td>\\n<td>string</td>\\n<td>Specifies the container format: “mp4”, “hls”, “mkv”, “ism”, “dash”, “ts”</td>\\n<td>Optional</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>All the codecs, except \\\"mpeg2\\\", can provide additional display info (bit depth, refresh rate, display width, display height) if the codec, profile, and level are passed as parameters.</p>\\n<p>For example, if the application wants to check if the Roku Player can play an AVC stream at high profile and level 4.2, it calls <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#candecodevideovideo_format-as-object-as-object\\\">CanDecodeVideo()</a> with the following video_format:</p>\\n<p><code>{Codec: \\\"mpeg4 avc\\\", Profile: \\\"high\\\", Level: \\\"4.2\\\"}</code></p>\\n<p>Format keys that are not provided by the caller are not taken into account and not updated. For example, calling <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#candecodevideovideo_format-as-object-as-object\\\">CanDecodeVideo()</a> with a format description that has only a codec key (such as <code>{\\\"codec\\\": \\\"vp9\\\"}</code>) will return that same format if the device can decode and play that codec at all, even if the decode capability is limited to one specific container, profile, and level.</p>\\n</blockquote>\\n<h4 id=\\\"return-values-47\\\">Return Values</h4>\\n<p>An associative array that includes a flag indicating whether the video format can be played, and the closest video format supported by the device.</p>\\n<p>If the Roku Player cannot play that video format, it will return false, and return the closest video format it can play, with the changed fields, such as:</p>\\n<p><code>{“Result”:false,\\\"Updated\\\": \\\"level;profile\\\", \\\"Codec\\\": \\\"mpeg4 avc\\\", \\\"Profile\\\": \\\"main\\\", \\\"Level\\\": \\\"4.1\\\"}</code></p>\\n<p>The return value shows the Roku Player cannot play requested video format, shows the updated keys of the requested video format (level and profile) that it can support, and the all the key values of the requested video format supported by the Roku Player.</p>\\n<h3 id=\\\"getuiresolution-as-object\\\">GetUIResolution() as Object</h3>\\n<h4 id=\\\"description-50\\\">Description</h4>\\n<p>Checks for the UI resolution of the screen.</p>\\n<h4 id=\\\"return-values-48\\\">Return Values</h4>\\n<p>An associative array with the following key-value pairs describing the current UI resolution:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>The possible values are: <table>\\n<thead>\\n<tr>\\n<th>Value</th>\\n<th>Meaning</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>SD</td>\\n<td>standard definition (720x480 screen pixel dimensions)</td>\\n</tr>\\n<tr>\\n<td>HD</td>\\n<td>high-definition (1280x720 screen pixel dimensions)</td>\\n</tr>\\n<tr>\\n<td>FHD</td>\\n<td>full high-definition (1920x1080 screen pixel dimensions)</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n<tr>\\n<td>width</td>\\n<td>The possible values are: <table>\\n<thead>\\n<tr>\\n<th>Value</th>\\n<th>Meaning</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>720</td>\\n<td>standard definition screen pixel width</td>\\n</tr>\\n<tr>\\n<td>1280</td>\\n<td>high-definition screen pixel width</td>\\n</tr>\\n<tr>\\n<td>1920</td>\\n<td>full high-definition screen pixel width</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>The possible values are: <table>\\n<thead>\\n<tr>\\n<th>Value</th>\\n<th>Meaning</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>480</td>\\n<td>standard definition screen pixel height</td>\\n</tr>\\n<tr>\\n<td>720</td>\\n<td>high-definition screen pixel height</td>\\n</tr>\\n<tr>\\n<td>1080</td>\\n<td>full high-definition screen pixel height</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getgraphicsplatform-as-string\\\">GetGraphicsPlatform() as String</h3>\\n<h4 id=\\\"description-51\\\">Description</h4>\\n<p>Checks the graphics platform of the device.</p>\\n<h4 id=\\\"return-values-49\\\">Return Values</h4>\\n<p>The device's graphics platform, which may be one of the following values:</p>\\n<ul>\\n<li>\\\"opengl\\\"</li>\\n<li>\\\"directfb\\\"</li>\\n</ul>\\n<h3 id=\\\"getvideodecodeinfo-as-object\\\">GetVideoDecodeInfo() as Object</h3>\\n<blockquote>\\n<p><strong>This method is deprecated</strong>.</p>\\n<p>Channel developers  should use the <a href=\\\"#candecodevideovideo_format-as-object-as-object\\\">CanDecodeVideo()</a> function instead.</p>\\n</blockquote>\\n<h4 id=\\\"description-52\\\">Description</h4>\\n<p>See <a href=\\\"http://en.wikipedia.org/wiki/Extended_display_identification_data#EIA.2FCEA-861_extension_block\\\">http://en.wikipedia.org/wiki/Extended_display_identification_data#EIA.2FCEA-861_extension_block</a> for an explanation of the information returned.</p>\\n<h4 id=\\\"return-values-50\\\">Return Values</h4>\\n<p>An associative array with the EDID (EIA.2FCEA-861) information describing the video display</p>\\n<h3 id=\\\"enablecodeccapchangedeventenable-as-boolean\\\">EnableCodecCapChangedEvent(enable As Boolean)</h3>\\n<p><em>Available since Roku OS 9.1</em></p>\\n<h4 id=\\\"description-53\\\">Description</h4>\\n<p>Notifies the channel when the audio or video codec changes. This function enables the sending of an <a href=\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\">roDeviceInfoEvent</a> when the codec changes. To receive events, you must have first called <a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\">SetMessagePort</a> on the roDeviceInfo object specifying the message port that is to receive the events</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag indicating whether to enable/disable codec change event notifications.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-51\\\">Return Values</h4>\\n<p>A flag indicating whether codec change event notifications are enabled (true) or disabled (false).</p>\\n<h4 id=\\\"audio-info\\\">Audio info</h4>\\n<h3 id=\\\"getaudiooutputchannel-as-string\\\">GetAudioOutputChannel() as String</h3>\\n<h4 id=\\\"description-54\\\">Description</h4>\\n<p>Checks for the type of audio output.</p>\\n<h4 id=\\\"return-values-52\\\">Return Values</h4>\\n<p>The selected audio output, which may be one of the following values:</p>\\n<ul>\\n<li>\\\"Stereo\\\"</li>\\n<li>\\\"5.1 surround\\\"</li>\\n</ul>\\n<h3 id=\\\"getaudiodecodeinfo-as-object\\\">GetAudioDecodeInfo() as Object</h3>\\n<blockquote>\\n<p><strong>This method is deprecated</strong>.</p>\\n<p>Channel developers  should use the <a href=\\\"#candecodeaudioaudio_format-as-object-as-object\\\">CanDecodeAudio()</a> function instead.</p>\\n</blockquote>\\n<h4 id=\\\"description-55\\\">Description</h4>\\n<p>Lists each audio decoder supported by the device, with up to four numbers describing the decoder from the EDID SAD (Short Audio Descriptor). Each value is of the form \\\"::::\\\"</p>\\n<h4 id=\\\"return-values-53\\\">Return Values</h4>\\n<p>An associative array with EDID (EIA.2FCEA-861) audio decoder information for the device connected to the HDMI port (or the device itself for a Roku TV).</p>\\n<p>For example, the name \\\"DD+\\\" may have the value \\\"8:6:0:1\\\" where there are 8 independent audio tracks (7.1 audio), 6 is the SAD1 byte, 0 is the SAD2 byte, and 1 is the binary value that indicates this is a pass-through audio device (not a Roku TV). The SAD1 and SAD2 bytes are interpreted differently for different codecs and more information about their values can be found here: <a href=\\\"http://en.wikipedia.org/wiki/Extended_display_identification_data#CEA_EDID_Timing_Extension_Version_3_data_format\\\">http://en.wikipedia.org/wiki/Extended_display_identification_data#CEA_EDID_Timing_Extension_Version_3_data_format</a></p>\\n<h4 id=\\\"example-1\\\">Example</h4>\\n<p>The following example demonstrates how to determine if the attached device supports Dolby Digital Plus audio:</p>\\n<pre><code>di = CreateObject(\\\"roDeviceInfo\\\")\\naudioDecoders = di.GetAudioDecodeInfo()\\n\\nREM Check for surround sound codecs:\\nhasDolbyDigital = audioDecoders.doesexist(\\\"AC3\\\")\\nhasDTS = audioDecoders.doesexist(\\\"DTS\\\")\\nhasDDPlus = audioDecoders.doesexist(\\\"DD+\\\")\\n</code></pre>\\n<blockquote>\\n<p>The definition of hasFeature (“5.1_surround_sound”) has changed in Roku OS 6.1. In previous firmware revisions it returned true when the user set the system audio format to \\\"Surround Sound\\\". In Roku OS6.1 and above, it returns true when any of the codecs in the GetAudioDecodeInfo() AA has more than 2 audio channels. Users devices will also be default to the \\\"Auto Detect\\\" system HDMI audio setting in v6.1.</p>\\n</blockquote>\\n<h3 id=\\\"candecodeaudioaudio_format-as-object-as-object\\\">CanDecodeAudio(audio_format as Object) as Object</h3>\\n<h4 id=\\\"description-56\\\">Description</h4>\\n<p>Checks if the device can decode and play the specified audio format.</p>\\n<blockquote>\\n<p>Use this method to query the codecs every time before starting playback on content (do not cache  and use the results from a previous call). In addition, use the <a href=\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\"><strong>roDeviceInfo.audioCodecCapabilityChanged()</strong></a> event to identify any codec changes that may occur when the audio output destination is switched. This will help your channel to perform well with the Roku mobile app and and private listening.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>audio_format</td>\\n<td>Object</td>\\n<td>An associative array with the audio format to be checked. The general format of the associative arrays for CanDecodeAudio() is similar to the parameter and return associative arrays used in <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#candecodevideovideo_format-as-object-as-object\\\">CanDecodeVideo()</a>: <table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n<th>Requirement</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Codec</td>\\n<td>string</td>\\n<td>Specifies the audio codec: “aac”, “ac3”, “eac3”, \\\"alac\\\", \\\"flac\\\", “mp2”, “mp3”, “vorbis”, “wma”, “wma pro”, “dts”</td>\\n<td>Required</td>\\n</tr>\\n<tr>\\n<td>Profile</td>\\n<td>string</td>\\n<td>Specifies the codec profile: <table>\\n<thead>\\n<tr>\\n<th>Codec</th>\\n<th>Profile</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\"h.265/h.265\\\"</td>\\n<td>\\\"main\\\", \\\"high\\\", \\\"main 10\\\"</td>\\n</tr>\\n<tr>\\n<td>\\\"vp9\\\"</td>\\n<td>\\\"profile 0\\\", \\\"profile 2\\\"</td>\\n</tr>\\n<tr>\\n<td>\\\"AAC codec profiles\\\"</td>\\n<td>\\\"mp2 lc\\\", \\\"mp4 he\\\"</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>Level</td>\\n<td>String</td>\\n<td>Specifies the codec level: <table>\\n<thead>\\n<tr>\\n<th>Codec</th>\\n<th>Level</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\"h.265/h.265\\\"</td>\\n<td>4.1, 4.2, 5.0, 5.1</td>\\n</tr>\\n<tr>\\n<td>\\\"vp9\\\"</td>\\n<td>3.0, 3.1, 4.0, 4.1, 5.0, 5.1</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>ChCnt</td>\\n<td>integer</td>\\n<td>Specifies the required number of audio channels</td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>PassThru</td>\\n<td>integer</td>\\n<td>Specifies whether the bitstream needs to be decoded on the device. By default, this reports the codec properties of both the Roku device and the attached           HDMI device. <br /><br />You can filter the values returned by including one of the following options: <ul>\\n<li><strong>0</strong> - Reports only codecs that are supported on the Roku device itself.</li>\\n<li><strong>1</strong> - Reports only codecs of the attached HDMI device (for example, an audio receiver).</li>\\n</ul></td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>Atmos</td>\\n<td>Integer</td>\\n<td>Specifies whether atmos is required. Include 'atmos=1' if it is.</td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>SampleRate</td>\\n<td>integer</td>\\n<td>Specifies the sample rate</td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>BitRate</td>\\n<td>integer</td>\\n<td>Specifies the bit rate in Kbit/sec</td>\\n<td>Optional</td>\\n</tr>\\n<tr>\\n<td>Container</td>\\n<td>string</td>\\n<td>Specifies the container format</td>\\n<td>Optional</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-54\\\">Return Values</h4>\\n<p>An associative array that includes a flag indicating whether the audio format can be played, and the closest audio format supported by the device.</p>\\n<h3 id=\\\"getsoundeffectsvolume-as-integer\\\">GetSoundEffectsVolume() as Integer</h3>\\n<h4 id=\\\"description-57\\\">Description</h4>\\n<p>Checks for the user interface sound effects volume level.</p>\\n<h4 id=\\\"return-values-55\\\">Return Values</h4>\\n<p>The UI sounds effects volume as a percentage. A return value of 0 indicates that UI sound effects are muted, and a value of 100 indicates that they are set to the maximum volume level</p>\\n<h3 id=\\\"isaudioguideenabled-as-dynamic\\\">IsAudioGuideEnabled() as Dynamic</h3>\\n<blockquote>\\n<p>The Audio Guide is available on the following devices: Roku Streaming Stick (3600X), Roku Express (3700X) and Express+ (3710X), Roku Premiere (4620X) and Premiere+ (4630X), Roku Ultra (4640X), and any Roku TV running Roku OS version 7.5 and later.</p>\\n</blockquote>\\n<h4 id=\\\"description-58\\\">Description</h4>\\n<p>Checks if the audio guide is enabled.</p>\\n<h4 id=\\\"return-values-56\\\">Return Values</h4>\\n<p>A flag indicating whether the audio guide is enabled.</p>\\n<h3 id=\\\"enableaudioguidechangedeventenable-as-boolean-as-dynamic\\\">EnableAudioGuideChangedEvent(enable as Boolean) as Dynamic</h3>\\n<blockquote>\\n<p>The Audio Guide is available on: Roku Streaming Stick (3600X), Roku Express (3700X) and Express+ (3710X), Roku Premiere (4620X) and Premiere+ (4630X), Roku Ultra (4640X), and any Roku TV running Roku OS version 7.5 and above</p>\\n</blockquote>\\n<h4 id=\\\"description-59\\\">Description</h4>\\n<p>Notifies the channel when the audio guide changes. This function enables the sending of an <a href=\\\"/docs/references/brightscript/events/rodeviceinfoevent.md\\\">roDeviceInfoEvent</a> when the audio guide changes. To receive events, you must have first called <a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md\\\">SetMessagePort</a> on the roDeviceInfo object specifying the message port that is to receive the events</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag indicating whether to enable/disable audio guide change event notifications.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-values-57\\\">Return Values</h4>\\n<p>A flag indicating whether audio guide change event notifications are enabled (true) or disabled (false).</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifdevicecrypto.md":"{\n  \"content\": \"<h1 id=\\\"ifdevicecrypto\\\">ifDeviceCrypto</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented By</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodevicecrypto.md\\\">roDeviceCrypto</a></td>\\n<td>Encrypts and decrypts data on a device using a key that is unique per channel, device, or model.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported Methods</h2>\\n<h3 id=\\\"encrypt-input-as-robytearray-string-as-enctype-as-robytearray\\\">Encrypt (input as roByteArray, String as encType) as roByteArray</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Encrypts data on a device that is unique per device, channel, or model. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>input</td>\\n<td>roByteArray</td>\\n<td>The data to be encrypted.</td>\\n</tr>\\n<tr>\\n<td>encType</td>\\n<td>String</td>\\n<td>The encryption key type, which is a string that may be set to \\\"channel\\\", \\\"device\\\", or \\\"model\\\": <table>\\n<thead>\\n<tr>\\n<th>encType</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>device</td>\\n<td>Encrypt data with a device unique key. This can be used to implement a secure storage-like algorithm.</td>\\n</tr>\\n<tr>\\n<td>channel</td>\\n<td>Encrypt data with a channel unique key This enables you to provision credentials, API tokens, or other data from the cloud to devices securely. Channels signed with same signing key will share the encryption key.</td>\\n</tr>\\n<tr>\\n<td>model</td>\\n<td>Encrypt channel with a model unique key This is similar to the \\\"channel\\\" encryption type, but with the scope limited to a specific model.</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An roByteArray containing the encrypted data.</p>\\n<h3 id=\\\"decrypt-encrypteddata-as-robytearray-string-as-enctype-as-robytearray\\\">Decrypt (EncryptedData as roByteArray, String as encType) as roByteArray</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Decrypts data stored on a device that was previously encoded with the <a href=\\\"#encrypt-input-as-robytearray-string-as-enctype-as-robytearray\\\"><strong>Encrypt()</strong></a> method. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>EncryptedData</td>\\n<td>roByteArray</td>\\n<td>The previously encoded data to be decrypted.</td>\\n</tr>\\n<tr>\\n<td>encType</td>\\n<td>String</td>\\n<td>The encryption key type, which is a string that may be set to \\\"channel\\\", \\\"device\\\", or \\\"model\\\": ${encTypeValues-2}</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>${encTypeValues-2}</p>\\n<table>\\n<thead>\\n<tr>\\n<th>encType</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>device</td>\\n<td>Encrypt data with a device unique key. This can be used to implement a secure storage-like algorithm.</td>\\n</tr>\\n<tr>\\n<td>channel</td>\\n<td>Encrypt data with a channel unique key This enables you to provision credentials, API tokens, or other data from the cloud to devices securely. Channels signed with same signing key will share the encryption key.</td>\\n</tr>\\n<tr>\\n<td>model</td>\\n<td>Encrypt channel with a model unique key This is similar to the \\\"channel\\\" encryption type, but with the scope limited to a specific model.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An roByteArray containing the decrypted data.</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<p>You can use the <code>Encrypt()</code> and <code>Decrypt()</code> methods to encrypt plaintext on a Roku device\\nand then decode it, as demonstrated in the following example:  </p>\\n<pre><code>  ' store plaintext to be encrypted in an roByteArray\\n  ba = CreateObject(\\\"roByteArray\\\")\\n  ba.FromAsciiString(\\\"plain text1\\\")  \\n\\n  ' create roDeviceCrypto object and specify a device key\\n  dc = CreateObject(\\\"roDeviceCrypto\\\") encType = \\\"device\\\"\\n\\n  ' encrypt plaintext using the device key and store the encoded data in an roByteArray\\n  encrypted = dc.Encrypt(ba, encType)\\n\\n  ' decode the encrypted data and store the decrypted data in an roByteArray\\n  if encrypted &#x3C;> invalid then\\n    decrypted = dc.Decrypt(encrypted,encType)\\n  end if\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifdouble.md":"{\n  \"content\": \"<h1 id=\\\"ifdouble\\\">ifDouble</h1>\\n<blockquote>\\n<p>Interface equivalent for intrinsic type Double</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodouble.md\\\" title=\\\"roDouble\\\">roDouble</a></td>\\n<td>roDouble is a legacy object name, corresponding to the intrinsic Double object</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getdouble-as-double\\\">GetDouble() As Double</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Gets the double value stored in the calling Double object. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The double value stored in the calling Double object. </p>\\n<h3 id=\\\"setdoublevalue-as-double-as-void\\\">SetDouble(value As Double) As Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the calling Double object to the specified double value. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>value</td>\\n<td>Double</td>\\n<td>The double value to be set on the calling Double object.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifdraw2d.md":"{\n  \"content\": \"<h1 id=\\\"ifdraw2d\\\">ifDraw2D</h1>\\n<p>Coordinates (x,y) for this interface are based on an origin (0,0) at the top, left. (This is common for 2D drawing APIs, but is different than OpenGL's default coordinate system).</p>\\n<p>Bitmap pixel values and color values are always represented as 32-bit integer RGBA color values.  That is, red is in the most significant byte and alpha is in the least significant byte.</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a></td>\\n<td>The roBitmap component contains image data and provides an interface (ifDraw2D) for drawing</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a></td>\\n<td>The roRegion component is used to represent a subsection of a bitmap</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roscreen.md\\\" title=\\\"roScreen\\\">roScreen</a></td>\\n<td>The roScreen component provides a full screen drawing surface that can be stacked and that you can receive input events from</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"clearrgba-as-integer-as-void\\\">Clear(rgba as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Clears the bitmap, and fills it with the specified RGBA color.</p>\\n<blockquote>\\n<p>The alpha channel will be filled into the bitmap, even when not used. Once AlphaEnable is set to true, the alpha channel will be taken into account when using this bitmap as a source. See SetAlphaEnable() for more information on alpha blending.</p>\\n</blockquote>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rgba</td>\\n<td>Integer</td>\\n<td>The RGBA color to be used to fill the bitmap.</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>Clear() is not the same as a DrawRect() for the entire bitmap. Clear() fills the bitmap with the specified RGBA; it does not perform any alpha blending operations.</p>\\n</blockquote>\\n<h3 id=\\\"getwidth-as-integer\\\">GetWidth() as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Gets the width of the bitmap.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The width of the bitmap in pixels.</p>\\n<h3 id=\\\"getheight-as-integer\\\">GetHeight() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Gets the height of the bitmap in pixels.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The height of the bitmap in pixels.</p>\\n<h3 id=\\\"getbytearrayx-as-integer-y-as-integer-width-as-integer-height-as-integer-as-object\\\">GetByteArray(x as Integer, y as Integer, width as Integer, height as Integer) as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Gets the RGBA pixel values for the specified rectangle.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The width of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The height of the rectangle.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An roByteArray representing the RGBA pixel values for the specified rectangle.</p>\\n<h3 id=\\\"getpngx-as-integer-width-as-integer-y-as-integer-height-as-integer-as-object\\\">GetPng(x as Integer, width as Integer, y as Integer, height as Integer) as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Gets PNG image data for the specified area of the bitmap. The PNG is in 32-bit RGBA format.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The width of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The height of the rectangle.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>An roByteArray object containing PNG image data for the specified area of the bitmap. If the coordinates are out of bounds, or the PNG conversion fails for any reason, then invalid is returned</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>Function SaveTestPng()\\n    w = 200 : h = 100\\n    bm = CreateObject(\\\"roBitmap\\\", {width: w, height: h, AlphaEnable: true})\\n    bm.DrawRect(10, 10, w-20, h-20, &#x26;hFF0000FF)\\n    bm.Finish()\\n    ba = bm.GetPng(0, 0, w, h)\\n    ba.WriteFile(\\\"tmp:/test.png\\\")\\n End Function\\n</code></pre>\\n<h3 id=\\\"getalphaenable-as-boolean\\\">GetAlphaEnable() as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Checks if the alpha blending is enabled.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether alpha blending is enabled.</p>\\n<h3 id=\\\"setalphaenableenable-as-boolean-as-void\\\">SetAlphaEnable(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Enables alpha blending when the source bitmap is the destination. The setting of the source bitmap's alpha enable is ignored.</p>\\n<p>When alpha blending is enabled, each pixel in the destination bitmap is set by combining the destination and source pixels according to the alpha value in the source bitmap (or rectangle). The destination alpha is not used. (In OpenGL this is referred to as GL_ONE_MINUS_SRC_ALPHA).</p>\\n<p>By default, alpha blending is off. Even when alpha blending is off, the alpha value is still present in the bitmap, and it must be passed when a function parameter is a color, which is always RGBA.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether alpha blending is enabled.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"example-1\\\">Example</h4>\\n<pre><code>Function Main()\\n    s=CreateObject(\\\"roScreen\\\")\\n    ' Clear to White with alpha fully opaque\\n    ' but alpha not actually ever used since it is the bottom most plane\\n    ' alpha is only looked at on \\\"source\\\" planes, not \\\"destination\\\".\\n    s.Clear(&#x26;hFFFFFFFF)\\n\\n    ' AlphaEnable must be enabled in the destination surface to have effect.\\n    s.SetAlphaEnable(true)\\n    bm=CreateObject(\\\"roBitmap\\\", {width:100, height: 100, alphaenable: false} )\\n    bm.Clear(&#x26;h0000FFFF) 'blue, fully opaque alpha\\n\\n    ' draw a blue rect in the upper left corner\\n    s.DrawObject(0,0, bm)\\n    s.Finish()\\n    Sleep(2000)\\n    s.Clear(&#x26;hFFFFFFFF)\\n    bm.Clear(&#x26;h0000FF00) 'blue, fully transparent alpha\\n\\n    ' draw a blue rect in the upper left corner\\n    ' but, since it is transparent, nothing will appear on the screen.\\n    s.DrawObject(0, 0, bm)\\n    s.Finish()\\n    Sleep(2000)\\n End Function\\n</code></pre>\\n<h3 id=\\\"drawrectx-as-integer-y-as-integer-width-as-integer-height-as-integer-rgba-as-integer-as-void\\\">DrawRect(x as Integer, y as Integer, width as Integer, height as Integer, rgba as Integer) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Fills the specified rectangle from left (x), top (y) to right (x + width), bottom (y + height) with the RGBA color.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The width of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The height of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>rgba</td>\\n<td>Integer</td>\\n<td>The RGBA color to be used to fill the rectangle.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"drawpointx-as-integer-y-as-integer-size-as-float-rgba-as-integer-as-void\\\">DrawPoint(x as Integer, y as Integer, size as Float, rgba as Integer) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Draws a point at (x,y) with the given size and RGBA color.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the point.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the point.</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>Float</td>\\n<td>The size of the point.</td>\\n</tr>\\n<tr>\\n<td>rgba</td>\\n<td>Integer</td>\\n<td>The RGBA color of the point.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"drawlinexstart-as-integer-ystart-as-integer-xend-as-integer--yend-as-integer-rgba-as-integer-as-void\\\">DrawLine(xStart as Integer, yStart as Integer, xEnd as Integer,  yEnd as Integer, rgba as Integer) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Draws a line from (xStart, yStart) to (xEnd, yEnd) with RGBA color.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>xStart</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the line's start point.</td>\\n</tr>\\n<tr>\\n<td>yStart</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the line's start point.</td>\\n</tr>\\n<tr>\\n<td>xEnd</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the line's end point.</td>\\n</tr>\\n<tr>\\n<td>yEnd</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the line's end point.</td>\\n</tr>\\n<tr>\\n<td>rgba</td>\\n<td>Integer</td>\\n<td>The RGBA color of the line.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"drawobjectx-as-integer-y-as-integer-src-as-object-as-boolean\\\">DrawObject(x as Integer, y as Integer, src as Object) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Draws the source object, where src is an <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object, at position x,y.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>src</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object to be drawn.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the object was successfully drawn. </p>\\n<h3 id=\\\"drawscaledobjectx-as-integer-y-as-integer-scalex-as-float-scaley-as-float-src-as-object-as-boolean\\\">DrawScaledObject(x as Integer, y as Integer, scaleX as Float, scaleY as Float, src as Object) as Boolean</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Draws the source object, where src is an <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object, at position x,y, scaled in the x direction by scaleX and in the y direction by scaleY. scaleX and scaleY should each be greater than zero and less than one to reduce the object size, or greater than one to increase the object size</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>scaleX</td>\\n<td>Float</td>\\n<td>The x direction in which the source object is to be scaled.</td>\\n</tr>\\n<tr>\\n<td>scaleY</td>\\n<td>Float</td>\\n<td>The y direction in which the source object is to be scaled.</td>\\n</tr>\\n<tr>\\n<td>src</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object to be drawn.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the object was successfully drawn. </p>\\n<h3 id=\\\"drawscaledobjectx-as-integer-y-as-integer-scalex-as-float-scaley-as-float-src-as-object-rgba-as-integer-as-boolean\\\">DrawScaledObject(x as Integer, y as Integer, scaleX as Float, scaleY as Float, src as Object, rgba as Integer) as Boolean</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Draws the source object, where src is an <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object, at position x,y, scaled in the x direction by scaleX and in the y direction by scaleY. scaleX and scaleY should each be greater than zero and less than one to reduce the object size, or greater than one to increase the object size.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>scaleX</td>\\n<td>Float</td>\\n<td>The x direction in which the source object is to be scaled.</td>\\n</tr>\\n<tr>\\n<td>scaleY</td>\\n<td>Float</td>\\n<td>The y direction in which the source object is to be scaled.</td>\\n</tr>\\n<tr>\\n<td>src</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object to be drawn.</td>\\n</tr>\\n<tr>\\n<td>rgba</td>\\n<td>Integer</td>\\n<td>The RGBA color of the source object.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>A flag indicating whether the object was successfully drawn. </p>\\n<h3 id=\\\"drawrotatedobjectx-as-integer-y-as-integer-theta-as-float-src-as-object-as-boolean\\\">DrawRotatedObject(x as Integer, y as Integer, theta as Float, src as Object) as Boolean</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Draws the source object, where src is an <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object, at position x,y rotated by angle theta degrees. </p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>Theta</td>\\n<td>Float</td>\\n<td>The position which to rotate the source object. This may be 0, 90, 180, and 270 degrees.</td>\\n</tr>\\n<tr>\\n<td>src</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/robitmap.md\\\" title=\\\"roBitmap\\\">roBitmap</a> or an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object to be drawn.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>A flag indicating whether the object was successfully drawn. </p>\\n<h3 id=\\\"drawtexttext-as-string-x-as-integer-y-as-integer-rgba-as-integer-font-as-object-as-boolean\\\">DrawText(text as String, x as Integer, y as Integer, rgba as Integer, font as Object) as Boolean</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Draws the text at position (x,y) using the specified RGBA color and <a href=\\\"/docs/references/brightscript/components/rofont.md\\\" title=\\\"roFont\\\">roFont</a> font object. Text is drawn anti-aliased. The background image/color behind the text will show through the spaces and holes in the text. To have the text erase the background, make a call to <a href=\\\"#drawrectx-as-integer-y-as-integer-width-as-integer-height-as-integer-rgba-as-integer-as-void\\\">DrawRect()</a> before calling DrawText(). The size, bold, and italic attributes are specified when creating the <a href=\\\"/docs/references/brightscript/components/rofont.md\\\" title=\\\"roFont\\\">roFont</a>.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be drawn.</td>\\n</tr>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the source object.</td>\\n</tr>\\n<tr>\\n<td>rgba</td>\\n<td>Integer</td>\\n<td>The color of the text.</td>\\n</tr>\\n<tr>\\n<td>font</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/rofont.md\\\" title=\\\"roFont\\\">roFont</a> object to be used for the text.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>A flag indicating whether the object was successfully drawn. </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>DrawText</td>\\n<td>Boolean</td>\\n<td>${drawtextparamTable}</td>\\n<td>Returns true if successful, otherwise false</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"finish-as-void\\\">Finish() as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Realizes the bitmap by finishing all queued draw calls. Until Finish() is called, prior graphics operations may not be user visible. For example, they may be in the graphics display pipeline, or in a server queue.</p>\\n<blockquote>\\n<p>This method is synchronous; it does not return until all graphic operations are complete.</p>\\n<p>When working with an <a href=\\\"/docs/references/brightscript/components/roscreen.md\\\" title=\\\"roScreen\\\">roScreen</a> object, the <a href=\\\"/docs/references/brightscript/interfaces/ifscreen.md#swapbuffers-as-void\\\">ifScreen.SwapBuffers()</a> method should be used instead of this method.</p>\\n</blockquote>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifenum.md":"{\n  \"content\": \"<h1 id=\\\"ifenum\\\">ifEnum</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a></td>\\n<td>An array stores an indexed collection of BrightScript objects</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a></td>\\n<td>An associative array (also known as a map, dictionary or hash table) allows objects to be associated with string keys</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a></td>\\n<td>The byte array component is used to contain and manipulate an arbitrary array of bytes</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a></td>\\n<td>The list object implements the interfaces: ifList, ifArray, ifEnum and therefore can behave like an array that can dynamically add members</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a></td>\\n<td>A Message Port is the place messages (events) are sent</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a></td>\\n<td>Contains a list of roXML objects</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"reset-as-void\\\">Reset() as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Resets the current position to the first element of the enumeration.</p>\\n<h3 id=\\\"next-as-dynamic\\\">Next() as Dynamic</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Increments the position of an enumeration. If the last element of the enumeration is returned, this method sets the current position to indicate that it is now past the end. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The value at the current position of the enumeration. If the current position is already past the end (that is, the last element has already been returned by a previous call to this method), \\\"invalid\\\" is returned.</p>\\n<h3 id=\\\"isnext-as-boolean\\\">IsNext() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks whether the current position is not past the end of the enumeration.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the current position is not past the end (true), or is past the end (false). </p>\\n<h3 id=\\\"isempty-as-boolean\\\">IsEmpty() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Checks whether the enumeration contains no elements.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the enumeration contains no elements (true), or contains elements (false). </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifevpcipher.md":"{\n  \"content\": \"<h1 id=\\\"ifevpcipher\\\">ifEVPCipher</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roevpdigest.md\\\" title=\\\"roEVPCipher\\\">roEVPCipher</a></td>\\n<td>The EVP Cipher component provides an interface to the OpenSSL EVP library of symmetric cipher commands</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setupencrypt-as-boolean-format-as-string-key-as-string-iv-as-string-padding-as-integer-as-integer\\\">Setup(encrypt as Boolean, format as String, key as String, iv as String, padding as Integer) as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Configures and initializes a new cipher context.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>encrypt</td>\\n<td>Boolean</td>\\n<td>True for encryption; false for decryption</td>\\n</tr>\\n<tr>\\n<td>format</td>\\n<td>String</td>\\n<td>Cipher format string, from openssl, listed at roEVPCipher</td>\\n</tr>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>A hex-encoded key</td>\\n</tr>\\n<tr>\\n<td>iv</td>\\n<td>String</td>\\n<td>A hex-encoded initialization vector, which can be an empty string</td>\\n</tr>\\n<tr>\\n<td>padding</td>\\n<td>Integer</td>\\n<td>1 to use standard padding; 0 for no padding)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Returns 0 on success or non-zero on failure.</p>\\n<h3 id=\\\"reinit-as-integer\\\">Reinit() as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Reinitializes an existing cipher context. This can be called to reuse an existing <a href=\\\"/docs/references/brightscript/components/roevpdigest.md\\\" title=\\\"roEVPCipher\\\">roEVPCipher</a> object to encrypt new data</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Returns 0 on success or non-zero on failure.</p>\\n<h3 id=\\\"processbytes-as-object-as-object\\\">Process(bytes as Object) as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Processes the included <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\">roByteArray</a> containing encrypted/decrypted data.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>bytes</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\">roByteArray</a> containing data that is encrypted or decrypted.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> containing the result.</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>  x = evp.Process(bytes)\\n</code></pre>\\n<p>is equivalent to</p>\\n<pre><code>  evp.Reinit()\\n  x = evp.Update(bytes)\\n  x = x + evp.Final()\\n</code></pre>\\n<h3 id=\\\"updatebytes-as-object-as-object\\\">Update(bytes as Object) as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Updates the included <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\">roByteArray</a> containing encrypted/decrypted data.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>bytes</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\">roByteArray</a> containing data that is encrypted or decrypted.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> containing a subset of the result. Some or all of the result may not be returned until the next call to Update().</p>\\n<h3 id=\\\"final-as-object\\\">Final() as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Signals that all data has been submitted by previous calls to Update().</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The last remaining encrypted or decrypted bytes.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifevpdigest.md":"{\n  \"content\": \"<h1 id=\\\"ifevpdigest\\\">ifEVPDigest</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roevpdigest.md\\\" title=\\\"roEVPDigest\\\">roEVPDigest</a></td>\\n<td>The EVP Digest component provides an interface to the OpenSSL EVP library of message digest algorithms</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setupdigesttype-as-string-as-integer\\\">Setup(digestType as String) as Integer</h3>\\n<h4 id=\\\"descriptions\\\">Descriptions</h4>\\n<p>Initializes a new message digest context. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>digestType</td>\\n<td>String</td>\\n<td>The supported digest algorithm from openssl, listed at roEVPDigest.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Returns 0 on success or non-zero on failure.</p>\\n<h3 id=\\\"reinit-as-integer\\\">Reinit() as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Re-initializes an existing message digest context. This can be called to reuse an existing <a href=\\\"/docs/references/brightscript/components/roevpdigest.md\\\" title=\\\"roEVPDigest\\\">roEVPDigest</a> object to digest new data.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Returns 0 on success or non-zero on failure.</p>\\n<h3 id=\\\"processbytes-as-object-as-string\\\">Process(bytes as Object) as String</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Digests the provided data. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>bytes</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\">roByteArray</a> containing digested data</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A Hex string (Digested array data).</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>  x = evp.Process(bytes)\\n</code></pre>\\n<p>is equivalent to</p>\\n<pre><code>  evp.Reinit()\\n  evp.Update(bytes)\\n  x = evp.Final()\\n</code></pre>\\n<h3 id=\\\"updatebytes-as-object-as-void\\\">Update(bytes as Object) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Adds more data to be digested.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>bytes</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\">roByteArray</a> containing data to be added to the current digest</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"final-as-string\\\">Final() as String</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the digest of data passed in by previous calls to <a href=\\\"#updatebytes-as-object-as-void\\\">Update()</a> as a hex string.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>Hex string (digest of data)</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iffilesystem.md":"{\n  \"content\": \"<h1 id=\\\"iffilesystem\\\">ifFileSystem</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/developer-program/getting-started/architecture/file-system.md\\\" title=\\\"roFile System\\\">roFile System</a></td>\\n<td>The roFilesystem component implements common filesystem inspection and modification routines</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<p>The format of file and directory pathnames is described on the <a href=\\\"/docs/developer-program/getting-started/architecture/file-system.md\\\" title=\\\"File System\\\">File System</a> page.</p>\\n<h3 id=\\\"getvolumelist-as-object\\\">GetVolumeList() as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the available volumes on the device.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a> containing strings representing the available volumes.</p>\\n<h3 id=\\\"getdirectorylistingdirpath-as-string-as-object\\\">GetDirectoryListing(dirPath as String) as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the file names in the specified directory path.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>dirPath</td>\\n<td>String</td>\\n<td>The directory path from which to get a list of file names.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a> of strings representing the directory listing of names in dirPath.</p>\\n<h3 id=\\\"finddirpath-as-string-regex-as-string-as-object\\\">Find(dirPath as String, regEx as String) as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the file names in the specified directory path matching the provided regex.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>dirPath</td>\\n<td>String</td>\\n<td>The directory path from which to get a list of file names.</td>\\n</tr>\\n<tr>\\n<td>regex</td>\\n<td>String</td>\\n<td>The regex to be used to search for files.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a> of Strings representing the directory listing of names in dirPath that match the regex.</p>\\n<h3 id=\\\"findrecursedirpath-as-string-regex-as-string-as-object\\\">FindRecurse(dirPath as String, regEx as String) as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the file names in the specified directory path and any sudirectories matching the provided regex.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>dirPath</td>\\n<td>String</td>\\n<td>The directory path from which to get a list of file names.</td>\\n</tr>\\n<tr>\\n<td>regex</td>\\n<td>String</td>\\n<td>The regex to be used to search for files.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a> of Strings representing the directory listing of names in dirPath that match the regex. Each item in the list is the name of the file relative to dirPath.</p>\\n<h3 id=\\\"matchpath-as-string-pattern-as-string-as-object\\\">Match(path as String, pattern as String) as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the file names in the specified directory path matching the provided shell-like pattern. This method is similar to the <a href=\\\"#finddirpath-as-string-regex-as-string-as-object\\\">Find()</a> method except that it uses shell-like pattern matching rather than regular expression matching.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The directory path from which to get a list of file names.</td>\\n</tr>\\n<tr>\\n<td>pattern</td>\\n<td>String</td>\\n<td>The shell-like pattern to be used to search for files. The pattern may contain wildcards such as <code>*</code>and <code>?</code>.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a> of Strings representing the directory listing of names in dirPath that match the shell-like pattern.</p>\\n<h3 id=\\\"existspath-as-string-as-boolean\\\">Exists(path as String) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Checks if the specified directory path exists on the device.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The directory path to be checked.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the specified path directory exists on the device.</p>\\n<h3 id=\\\"statpath-as-string-as-object\\\">Stat(path as String) as Object</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the keys in the specified directory path.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The directory path to be checked.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> containing the following key-value pairs for the specified path:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Values</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>type</td>\\n<td>String</td>\\n<td><ul>\\n<li>\\\"file\\\"</li>\\n<li>\\\"directory\\\"</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>Integer</td>\\n<td>Number of bytes in the file. Only relevant for type \\\"file\\\".</td>\\n</tr>\\n<tr>\\n<td>permissions</td>\\n<td>String</td>\\n<td><ul>\\n<li>\\\"rw\\\": read/write</li>\\n<li>\\\"r\\\": read-only</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getvolumeinfopath-as-string-as-object\\\">GetVolumeInfo(path as String) as Object</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns information about the specified volume. The function can only be called on external volumes; internal volumes do not return meaningful information.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The external volume for which to get information. This should be specified as the volume name plus a directory separator (for example, \\\"ext1:/\\\").</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>An roAssociativeArray containing the following key-value pairs about the specified external volume:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Values</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>blocksize</td>\\n<td>Integer</td>\\n<td>The size of the filesystem blocks in bytes.</td>\\n</tr>\\n<tr>\\n<td>blocks</td>\\n<td>Integer</td>\\n<td>The number of blocks in the filesystem.</td>\\n</tr>\\n<tr>\\n<td>free-blocks</td>\\n<td>Integer</td>\\n<td>The number of unused blocks in the filesystem.</td>\\n</tr>\\n<tr>\\n<td>usedblocks</td>\\n<td>Integer</td>\\n<td>The number of used blocks in the filesystem.</td>\\n</tr>\\n<tr>\\n<td>label</td>\\n<td>String</td>\\n<td>The volume label, if any.</td>\\n</tr>\\n<tr>\\n<td>mounttime</td>\\n<td>Integer</td>\\n<td>The time (in UTC format) when the volume specified in the path was last mounted. This field will be set to 0 if the drive is unknown or unmounted. <br /><br /><em>Available since Roku OS 9.2</em></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"createdirectorypath-as-string-as-boolean\\\">CreateDirectory(path as String) as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Creates the directory specified by the path parameter. All directories in path except the last one must already exist; that is, only one directory can be created.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path of the directory to be created.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>A flag indicating whether the path was successfully created.</p>\\n<h3 id=\\\"deletepath-as-string-as-boolean\\\">Delete(path as String) as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Permanently removes the file or directory specified by the path parameter. If path is a directory, its contents are recursively removed.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path of the directory to be deleted.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>A flag indicating whether the path was successfully deleted.</p>\\n<h3 id=\\\"copyfilefrompath-as-string-topath-as-string-as-boolean\\\">CopyFile(fromPath as String, toPath as String) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Copies the files from one directory to another.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fromPath</td>\\n<td>String</td>\\n<td>The source path containing the files to be copied.</td>\\n</tr>\\n<tr>\\n<td>toPath</td>\\n<td>String</td>\\n<td>The target path to which files are to be copied.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>A flag indicating whether the files were successfully copied.</p>\\n<h3 id=\\\"renamefrompath-as-string-topath-as-string-as-boolean\\\">Rename(fromPath as String, toPath as String) as Boolean</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Renames the directory.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fromPath</td>\\n<td>String</td>\\n<td>The current name of the path to be renamed.</td>\\n</tr>\\n<tr>\\n<td>toPath</td>\\n<td>String</td>\\n<td>The new name of the path.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>A flag indicating whether the directory was successfully renamed. If the provided target directory (<strong>toPath</strong>) exists, it is not overwritten; instead the operation fails and this method returns false</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iffloat.md":"{\n  \"content\": \"<h1 id=\\\"iffloat\\\">ifFloat</h1>\\n<p>Interface equivalent for intrinsic type Float</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rofloat.md\\\" title=\\\"roFloat\\\">roFloat</a></td>\\n<td>Object equivalent for intrinsic type 'Float'</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getfloat-as-float\\\">GetFloat() As Float</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Gets the float value stored in the calling Float object. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The float value stored in the calling Float object. </p>\\n<h3 id=\\\"setfloatvalue-as-float-as-void\\\">SetFloat(value As Float) As Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the calling Float object to the specified float value. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>value</td>\\n<td>Float</td>\\n<td>The float value to be set on the calling Float object.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iffont.md":"{\n  \"content\": \"<h1 id=\\\"iffont\\\">ifFont</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rofont.md\\\" title=\\\"roFont\\\">roFont</a></td>\\n<td>roFont represents a particular font, from a font-family (eg. Arial), with a particular pixel size (e.g 20), and a particular boldness or italicness</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getonelineheight-as-integer\\\">GetOneLineHeight() as Integer</h3>\\n<h4 id=\\\"descriptions\\\">Descriptions</h4>\\n<p>Returns the number of pixels from one line to the next when drawing with this font.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The number of pixels.</p>\\n<h3 id=\\\"getonelinewidthtext-as-string-maxwidth-as-integer-as-integer\\\">GetOneLineWidth(text as String, MaxWidth as Integer) as Integer</h3>\\n<h4 id=\\\"descriptions-1\\\">Descriptions</h4>\\n<p>Returns the number of pixels from one line to the next when drawing with this font. Each glyph and the needed spacing between glyphs is measured.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The subject text.</td>\\n</tr>\\n<tr>\\n<td>MaxWidth</td>\\n<td>Integer</td>\\n<td>Generally, the amount of pixels available for rendering on this line.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The number of pixels. This will be less than provided MaxWidth.</p>\\n<h3 id=\\\"getascent-as-integer\\\">GetAscent() as Integer</h3>\\n<h4 id=\\\"descriptions-2\\\">Descriptions</h4>\\n<p>Returns the number of pixels of the font ascent.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The number of pixels.</p>\\n<h3 id=\\\"getdescent-as-integer\\\">GetDescent() as Integer</h3>\\n<h4 id=\\\"descriptions-3\\\">Descriptions</h4>\\n<p>Returns the number of pixels of the font descent.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The number of pixels.</p>\\n<h3 id=\\\"getmaxadvance-as-integer\\\">GetMaxAdvance() as Integer</h3>\\n<h4 id=\\\"descriptions-4\\\">Descriptions</h4>\\n<p>Returns the font maximum advance width in pixels.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The number of pixels.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iffontmetrics.md":"{\n  \"content\": \"<h1 id=\\\"iffontmetrics\\\">ifFontMetrics</h1>\\n<blockquote>\\n<p>This interface is deprecated. Developers should use <a href=\\\"/docs/references/brightscript/components/rofont.md\\\" title=\\\"roFont\\\">roFont</a> methods (GetOneLineHeight and GetOneLineWidth).</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rofontmetrics.md\\\" title=\\\"roFontMetrics\\\">roFontMetrics</a></td>\\n<td>The roFontMetrics object allows you to get display size information for a specific font returned by the roFontRegistry.Get() method</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"sizestringtodraw-as-string-as-object\\\">Size(stringToDraw as String) as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the width and height of the <strong>stringToDraw</strong> parameter rendered in the font passed on the CreateObject() call.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>stringToDraw</td>\\n<td>String</td>\\n<td>The string to be drawn.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> with width and height parameters. The following example demonstrates this:</p>\\n<pre><code>{ \\n    w:256, \\n    h:72 \\n}\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iffontregistry.md":"{\n  \"content\": \"<h1 id=\\\"iffontregistry\\\">ifFontRegistry</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rofontregistry.md\\\" title=\\\"roFontRegistry\\\">roFontRegistry</a></td>\\n<td>The roFontRegistry object allows you to create roFont objects, either using the default font or using fonts in TrueType or OpenType files packaged with your application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"registerpath-as-string-as-boolean\\\">Register(path as String) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Registers a font file (.ttf or .otf format). Each font file defines one or more font families (usually one).</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the fonts in the specified file were successfully installed. </p>\\n<h3 id=\\\"getfamilies-as-object\\\">GetFamilies() as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the names of the font families that have been registered via the <a href=\\\"#registerpath-as-string-as-boolean\\\">Register()</a> method. Each name can be passed as the first parameter to the <a href=\\\"#getfontfamily-as-string-size-as-integer-bold-as-boolean-italic-as-boolean-as-object\\\">GetFont()</a> method.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of strings that represent the names of the font families that have been registered.</p>\\n<h3 id=\\\"getfontfamily-as-string-size-as-integer-bold-as-boolean-italic-as-boolean-as-object\\\">GetFont(family as String, size as Integer, bold as Boolean, italic as Boolean) as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns a font from the specified family, selected from the fonts previously registered via the <a href=\\\"#registerpath-as-string-as-boolean\\\">Register()</a> method. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>family</td>\\n<td>String</td>\\n<td>The font family name.</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>Integer</td>\\n<td>The requested font size, in pixels, not points.</td>\\n</tr>\\n<tr>\\n<td>bold</td>\\n<td>Boolean</td>\\n<td>\\\"bold\\\" specifies a font variant that may be (but is not always) supported by the font file.</td>\\n</tr>\\n<tr>\\n<td>italic</td>\\n<td>Boolean</td>\\n<td>\\\"italic\\\" specifies a font variant that may be (but is not always) supported by the font file.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/rofont.md\\\" title=\\\"roFont\\\">roFont</a> object representing a font from the specified family.</p>\\n<h3 id=\\\"getdefaultfont-as-object\\\">GetDefaultFont() as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the system font at its default size. Calling this method is the same as calling the <a href=\\\"#getdefaultfontsize-as-integer-bold-as-boolean-italic-as-boolean-as-object\\\">GetDefaultFont()</a> method with the following syntax: <code>reg.GetDefaultFont(reg.GetDefaultFontSize(), false, false)</code>.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The system font as its default size. </p>\\n<h3 id=\\\"getdefaultfontsize-as-integer-bold-as-boolean-italic-as-boolean-as-object\\\">GetDefaultFont(size as Integer, bold as Boolean, italic as Boolean) as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the system font. The system font is always available, even if the <a href=\\\"#registerpath-as-string-as-boolean\\\">Register()</a> method has not been called</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>size</td>\\n<td>Integer</td>\\n<td>The requested font size, in pixels, not points.</td>\\n</tr>\\n<tr>\\n<td>bold</td>\\n<td>Boolean</td>\\n<td>\\\"bold\\\" specifies a font variant that may be (but is not always) supported by the font file.</td>\\n</tr>\\n<tr>\\n<td>italic</td>\\n<td>Boolean</td>\\n<td>\\\"italic\\\" specifies a font variant that may be (but is not always) supported by the font file.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>An roFont object representing the system font. </p>\\n<h3 id=\\\"getdefaultfontsize-as-integer\\\">GetDefaultFontSize() as Integer</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns the default font size.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>The default font size.</p>\\n<h3 id=\\\"getfamily-as-string-size-as-integer-bold-as-boolean-italic-as-boolean-as-string\\\">Get(family as String, size as Integer, bold as Boolean, italic as Boolean) as String</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns a valid font string that can be used as the value of the Font content meta-data parameter recognized by the <a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\" title=\\\"roImageCanvas\\\">roImageCanvas</a> method.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>family</td>\\n<td>String</td>\\n<td>The font family name.</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>Integer</td>\\n<td>The requested font size, in pixels, not points.</td>\\n</tr>\\n<tr>\\n<td>bold</td>\\n<td>Boolean</td>\\n<td>\\\"bold\\\" specifies a font variant that may be (but is not always) supported by the font file.</td>\\n</tr>\\n<tr>\\n<td>italic</td>\\n<td>Boolean</td>\\n<td>\\\"italic\\\" specifies a font variant that may be (but is not always) supported by the font file.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A valid font string.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iffunction.md":"{\n  \"content\": \"<h1 id=\\\"iffunction\\\">ifFunction</h1>\\n<p>Interface equivalent for intrinsic type Function.</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rofunction.md\\\" title=\\\"roFunction\\\">roFunction</a></td>\\n<td>Object equivalent for intrinsic type Function</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getsub-as-function\\\">GetSub() As Function</h3>\\n<p>You can get a plain (non-referenced) version of the value by calling the this method.</p>\\n<h3 id=\\\"setsubvalue-as-function-as-void\\\">SetSub(value As Function) As Void</h3>\\n<p>This method can be used for in/out function parameters. If you have a boxed object, you can change the value in the object via this method, without changing the variable reference itself.</p>\\n<pre><code>Function Main()\\n    f1 = Foo\\n    print \\\"f1 \\\"; Type(f1); \\\"=\\\"; f1\\n\\n    f2 = Box(Foo)\\n    print \\\"f2 \\\"; Type(f2); \\\"=\\\"; f2\\n\\n    print \\\"adjusting f2\\\"\\n    AdjustFun(f2)\\n\\n    print \\\"f2 \\\"; Type(f2); \\\"=\\\"; f2\\n    print \\\"f2()\\\"; \\\"=\\\"; f2()\\n\\n    f3 = f2.GetSub()\\n    print \\\"f3 \\\"; Type(f3); \\\"=\\\"; f3\\nEnd Function\\n\\nFunction AdjustFun(f)\\n    f.SetSub(Bar)\\nEnd Function\\n\\nFunction Foo()\\n    return \\\"--Foo--\\\"\\nEnd Function\\n\\nFunction Bar()\\n    return \\\"--Bar--\\\"\\nEnd Function\\n==>\\nf1 Function=&#x3C;Function: foo>\\nf2 roFunction=&#x3C;Function: foo>\\nadjusting f2\\nf2 roFunction=&#x3C;Function: bar>\\nf2()=--Bar--\\nf3 Function=&#x3C;Function: bar>\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifgetmessageport.md":"{\n  \"content\": \"<h1 id=\\\"ifgetmessageport\\\">ifGetMessagePort</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rohdmistatus.md\\\" title=\\\"roHdmiStatus\\\">roHdmiStatus</a></td>\\n<td>The HDMI status component provides an interface to the current HDMI operational status</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roscreen.md\\\" title=\\\"roScreen\\\">roScreen</a></td>\\n<td>The roScreen component provides a full screen drawing surface that can be stacked and that you can receive input events from</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rourltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a></td>\\n<td>A roUrlTransfer object transfers data to or from remote servers specified by URLs</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotexttospeech.md\\\" title=\\\"roTextToSpeech\\\">roTextToSpeech</a></td>\\n<td>The roTextToSpeech component provides text to speech capabilities to applications</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getmessageport-as-object\\\">GetMessagePort() as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the message port (if any) currently associated with the object</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The message port.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifgridscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifgridscreen\\\">ifGridScreen</h1>\\n<blockquote>\\n<p>This interface is deprecated.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rogridscreen.md\\\" title=\\\"roGridScreen\\\">roGridScreen</a></td>\\n<td>The Grid Screen provides a graphical display of poster art from multiple content categories from within a single screen</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setuplistscount-as-integer-as-void\\\">SetupLists(count as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the number of rows in the grid. The number of rows must be set before calling other functions to populate grid data.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>count</td>\\n<td>Integer</td>\\n<td>The number of rows to be used in the grid.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlistnamesnames-as-object-as-void\\\">SetListNames(names as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the list of row titles. The first name is displayed for the first row, the second name for the second row, etc. The list should contain as many titles as the number of rows in the grid</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>names</td>\\n<td>Object</td>\\n<td>An roArray of strings containing the titles to be displayed in the grid.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlistnamerowindex-as-integer-name-as-string-as-void\\\">SetListName(rowIndex as Integer, name as String) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Sets the list of row titles. The first name is displayed for the first row, the second name for the second row, and so on. The list should contain as many titles as the number of rows in the grid.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<h3 id=\\\"setcontentlistrowindex-as-integer-contentlist-as-object-as-void\\\">SetContentList(rowIndex as Integer, contentList as Object) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the content list for the specified row.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rowIndex</td>\\n<td>Integer</td>\\n<td>The row to be updated with the provided content list.</td>\\n</tr>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An roArray of items, where each item is an roAssociativeArray containing the <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">content metadata</a> used to display the item (for example, Title, Description, SDPosterUrl, and HDPosterUrl). See <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Metadata\\\">Content metadata</a> for details.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setcontentlistsubsetrowindex-as-integer-contentlist-as-object-offset-as-integer-length-as-integer-as-void\\\">SetContentListSubset(rowIndex as Integer, contentList as Object, offset as Integer, length as Integer) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Set or update items in the content list for the specified row. Enables performance improvements when dealing with your backend services by asking only for only a screenful worth of data at a time, and then update the rest of the content list content in the background. </p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rowIndex</td>\\n<td>Integer</td>\\n<td>The row to be updated with the provided content list.</td>\\n</tr>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An roArray of items, where each item is an roAssociativeArray containing the <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">content metadata</a> used to display the item (for example, Title, Description, SDPosterUrl, and HDPosterUrl). See <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Metadata\\\">Content metadata</a> for details.</td>\\n</tr>\\n<tr>\\n<td>offset</td>\\n<td>Integer</td>\\n<td>The offset in the provided content list from which to start updating the row.</td>\\n</tr>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The number of items in the provided content list to be used to update the row.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlistoffsetrowindex-as-integer-itemindex-as-integer-as-void\\\">SetListOffset(rowIndex as Integer, itemIndex as Integer) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Changes the current position (both row and column) of the downloading thread in populating image posters of the grid. </p>\\n<p>Grids populate poster screens in background threads. The downloading thread will reprioritize poster downloads based on the new list offset. </p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rowIndex</td>\\n<td>Integer</td>\\n<td>The row to be updated.</td>\\n</tr>\\n<tr>\\n<td>itemIndex</td>\\n<td>Integer</td>\\n<td>The items within the specified row to be updated.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlistvisiblerowindex-as-integer-visible-as-boolean-as-void\\\">SetListVisible(rowIndex as Integer, visible as Boolean) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Sets the visibility of the specified row.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rowIndex</td>\\n<td>Integer</td>\\n<td>The row to be updated.</td>\\n</tr>\\n<tr>\\n<td>visible</td>\\n<td>Boolean</td>\\n<td>A flag indicating whether the row is to be made visible.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setfocusedlistitemrowindex-as-integer-itemindex-as-integer-as-void\\\">SetFocusedListItem(rowIndex as Integer, itemIndex as Integer) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Set the focus to the specified row and item.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rowIndex</td>\\n<td>Integer</td>\\n<td>The row to be updated.</td>\\n</tr>\\n<tr>\\n<td>itemIndex</td>\\n<td>Integer</td>\\n<td>The items within the specified row to be updated.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdisplaymodedisplaymode-as-string-as-void\\\">SetDisplayMode(displayMode as String) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Sets the mode for displaying images in the grid screen. This allows images to be either scaled to completely fill the poster frame (scale-to-fill) or scaled to fit inside the poster frame (scale-to-fit) while maintaining aspect ratio.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>displayMode</td>\\n<td>String</td>\\n<td>The mode to be used for displaying images, which maybe one of the following  values: <ul>\\n<li>\\\"scale-to-fill\\\": scales image to completely fill the rectangle of the bounding frame (Default)</li>\\n<li>\\\"scale-to-fit\\\": scale image to fit horizontally or vertically as appropriate while still maintaining aspect ratio. Note that scale-to-fit may result in pillar-box or letter-box display of images.</li>\\n<li>\\\"zoom-to-fill\\\": scales and crops image to maintain aspect ratio and completely fill the rectangle of the bounding frame.</li>\\n<li>\\\"photo-fit\\\": Uses several methods to fit the image with a different aspect ratio to the screen. First, it will asymmetrically scale up to a maximum of 5%. Second, for landscape images, if vertical cropping is necessary, it will remove two lines off the bottom for every one line off the top up to a maximum of 30% of the image. For all images, if horizontal cropping is necessary it will crop an equal amount from both sides.</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"showmessagemessage-as-string-as-void\\\">ShowMessage(message as String) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Displays a semi-transparent popup message box to the user in the center of the screen over the poster screen. This is generally used for error messages.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>message</td>\\n<td>String</td>\\n<td>The text to be displayed in the popup message box.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearmessage-as-void\\\">ClearMessage() as Void</h3>\\n<h4 id=\\\"descripton\\\">Descripton</h4>\\n<p>Clears the message from a <a href=\\\"/docs/references/brightscript/interfaces/ifgridscreen.md#showmessagemessage-as-string-as-void\\\">ShowMessage()</a> method call.</p>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Displays or refreshes the screen after the initial creation or the state changes.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the screen is displayed (true). </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object.</p>\\n<h3 id=\\\"setgridstylestyle-as-string-as-void\\\">SetGridStyle(style as String) as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Sets the style or theme for displaying images in the grid screen. This allows different appearances of the overall grid for different sized images.</p>\\n<blockquote>\\n<p> This method must be called before <a href=\\\"#setuplistscount-as-integer-as-void\\\">SetupLists()</a>.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>style</td>\\n<td>String</td>\\n<td>The image size, which may be one of the following values: <ul>\\n<li>\\n<p>flat-movie – movie posters as seen in the Netflix channel (Default)</p>\\n<ul>\\n<li>Image sizes: SD 110x150 HD 210x270</li>\\n<li>SD 5 posters across, by 2 rows</li>\\n<li>HD 5 posters across, by 2 rows</li>\\n</ul>\\n</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<ul>\\n<li>\\n<p>flat-portrait</p>\\n<ul>\\n<li>Image sizes: SD 110x140 HD 210x300</li>\\n<li>SD 5 posters across, by 2 rows</li>\\n<li>HD 5 posters across, by 2 rows</li>\\n</ul>\\n</li>\\n<li>\\n<p>flat-landscape</p>\\n<ul>\\n<li>Image sizes: SD 140x94 HD 210x158</li>\\n<li>SD 4 posters across, by 3 rows</li>\\n<li>HD 5 posters across, by 3 rows</li>\\n</ul>\\n</li>\\n<li>\\n<p>flat-square – note that SD has non-square pixels so the dimensions below appear as square on the screen</p>\\n<ul>\\n<li>Image sizes: SD 96x86 HD 132x132</li>\\n<li>SD 6 posters across, by 3 rows</li>\\n<li>HD 7 posters across, by 3 rows</li>\\n</ul>\\n</li>\\n<li>\\n<p>flat-16x9</p>\\n<ul>\\n<li>Image sizes: SD 140x70 HD 210x118</li>\\n<li>SD 4 posters across, by 3 rows</li>\\n<li>HD 5 posters across, by 3 rows</li>\\n</ul>\\n</li>\\n<li>\\n<p>two-row-flat-landscape-custom</p>\\n<ul>\\n<li>Image sizes: SD 138x77 HD 266x150</li>\\n<li>SD 4 posters across, by 2.5 rows</li>\\n<li>HD 4 posters across, by 2 rows</li>\\n</ul>\\n</li>\\n<li>\\n<p>mixed-aspect-ratio</p>\\n<ul>\\n<li>\\n<p>Images sizes - dependent on the list poster style for the row</p>\\n<ul>\\n<li>\\n<p>HD</p>\\n<ul>\\n<li>landscape - 192 x 144</li>\\n<li>portrait - 192 x 274</li>\\n<li>square - 192 x 192</li>\\n</ul>\\n</li>\\n<li>\\n<p>SD</p>\\n<ul>\\n<li>landscape -  140 x 94</li>\\n<li>portrait - 140 x 180</li>\\n<li>square - 140 x 126</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>SD 4 posters across depending on list poster style for the row</p>\\n</li>\\n<li>\\n<p>HD 5 posters across depending on list poster style for the row</p>\\n</li>\\n<li>\\n<p>four-column-flat-landscape</p>\\n<ul>\\n<li>Image sizes: SD 140x70 HD 210x118</li>\\n<li>SD 4 posters across, by 3.5 rows</li>\\n<li>HD 4 posters across, by 3 rows</li>\\n</ul>\\n</li>\\n</ul>\\n<h3 id=\\\"setlistposterstylesstyles-as-object-as-void\\\">SetListPosterStyles(styles as Object) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Sets the images size and orientation for each row in the grid. This method is used in conjunction with the mixed-apect-ratio grid style.</p>\\n<p>For example, passing the array [\\\"landscape\\\", \\\"portrait\\\", \\\"landscape\\\"] configures a mixed-aspect-ratio grid to use landscape images for row 1, portrait images for row 2, and landscape images for row 3.</p>\\n<blockquote>\\n<p>The SetListPosterStyles() method must be called before <a href=\\\"/docs/references/brightscript/interfaces/ifgridscreen.md#setcontentlistrowindex-as-integer-contentlist-as-object-as-void\\\" title=\\\"SetContentList()\\\">SetContentList()</a> to avoid possible distortion of the graphic images in the grid.</p>\\n</blockquote>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>SetListPosterStyles</td>\\n<td>Void</td>\\n<td>${setlistposterstylesparamTable}</td>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>styles</td>\\n<td>Object</td>\\n<td>The style to be used for the row, which may be one of the following values:  landscape, portrait, or square</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbenabledenabled-as-boolean-as-void\\\">SetBreadcrumbEnabled(enabled as Boolean) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Enables the breadcrumb text specified with <a href=\\\"#setbreadcrumbtextlocation1-as-string-location2-as-string-as-void\\\">SetBreadcrumbText()</a> method to be displayed. </p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enabled</td>\\n<td>Boolean</td>\\n<td>Set this flag to true in order to display the breadcrumb text.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbtextlocation1-as-string-location2-as-string-as-void\\\">SetBreadcrumbText(Location1 as String, Location2 as String) as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>If SetBreadcrumbEnabled() is true, display Location1 and Location2 in the right of the overhang.</p>\\n<h4 id=\\\"parameters-13\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Location1</td>\\n<td>String</td>\\n<td>The first location value.</td>\\n</tr>\\n<tr>\\n<td>Location2</td>\\n<td>String</td>\\n<td>The second location value.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setupbehaviorattoprowbehavior-as-string-as-void\\\">SetUpBehaviorAtTopRow(behavior as String) as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Controls how the remote \\\"up\\\" key behaves when it is pressed with the top row selected.</p>\\n<h4 id=\\\"parameters-14\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>behavior</td>\\n<td>String</td>\\n<td>Specifies the behavior of the \\\"up\\\" key. This may be one of the following values: <ul>\\n<li>\\\"stop\\\": stop scrolling up, and stay on the roGridScreen (default behavior)</li>\\n<li>\\\"exit\\\": exit the roGridScreen</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setloadingpostersdposterurl-as-string-hdposterurl-as-string-as-void\\\">SetLoadingPoster(sdPosterUrl as String, hdPosterUrl as String) as Void</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Specifies the default images to be shown in the grid while the grid screen content is loading.</p>\\n<h4 id=\\\"parameters-15\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sdPosterUrl</td>\\n<td>String</td>\\n<td>The URL of the standard definition poster image to be shown.</td>\\n</tr>\\n<tr>\\n<td>hdPosterUrl</td>\\n<td>String</td>\\n<td>The URL of the high definition poster image to be shown.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"seterrorpostersdposterurl-as-string-hdposterurl-as-string-as-void\\\">SetErrorPoster(sdPosterUrl as String, hdPosterUrl as String) as Void</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Specifies the default images to be shown in the grid when the grid screen content fails to load.</p>\\n<h4 id=\\\"parameters-16\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sdPosterUrl</td>\\n<td>String</td>\\n<td>The URL of the standard definition poster image to be shown.</td>\\n</tr>\\n<tr>\\n<td>hdPosterUrl</td>\\n<td>String</td>\\n<td>The URL of the high definition poster image to be shown.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setcountervisiblevisible-as-boolean-as-void\\\">SetCounterVisible(visible as Boolean) as Void</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Specifies whether the item counter should be displayed. The item counter shows the focused item number and count of items in the row. </p>\\n<h4 id=\\\"parameters-17\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>visible</td>\\n<td>Boolean</td>\\n<td>Set this flag to true in order to display the item counter.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdescriptionvisiblevisible-as-boolean-as-void\\\">SetDescriptionVisible(visible as Boolean) as Void</h3>\\n<h4 id=\\\"description-20\\\">Description</h4>\\n<p>Specifies whether the description box is displayed for the focused item. The description box is the callout box that displays detailed information about the focused item. </p>\\n<h4 id=\\\"parameters-18\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>visible</td>\\n<td>Boolean</td>\\n<td>Set this flag to true in order to display the description box for the focused item.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setfocusringvisiblevisible-as-boolean-as-void\\\">SetFocusRingVisible(visible as Boolean) as Void</h3>\\n<h4 id=\\\"description-21\\\">Description</h4>\\n<p>Specifies whether the focus ring is displayed for the focused item. </p>\\n<h4 id=\\\"parameters-19\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>visible</td>\\n<td>Boolean</td>\\n<td>Set this flag to true in order to display the focus ring for the focused item.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifhdmistatus.md":"{\n  \"content\": \"<h1 id=\\\"ifhdmistatus\\\">ifHdmiStatus</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rohdmistatus.md\\\" title=\\\"roHdmiStatus\\\">roHdmiStatus</a></td>\\n<td>The HDMI status component provides an interface to the current HDMI operational status</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isconnected-as-boolean\\\">IsConnected() as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Checks whether the HDMI or MHL output is connected to an HDMI device.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the HDMI or MHL output is connected to an HDMI device.</p>\\n<h3 id=\\\"gethdcpversion-as-string\\\">GetHdcpVersion() as String</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the version number of the currently established HDCP link.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The version number of the HDCP link: 1.4 or 2.2.</p>\\n<p>If an empty string is returned, HDCP is disabled. In this case, videos that require HDCP encryption cannot be played. Videos not requiring encryption should still be playable.</p>\\n<h3 id=\\\"ishdcpactiveversion-as-string-as-boolean\\\">IsHdcpActive(version as String) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks if the current established HDCP link is the specified version or higher</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>version</td>\\n<td>String</td>\\n<td>The HDCP link version to be checked (for example, \\\"1.4\\\" or \\\"2.2\\\").</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the current established HDCP link is the specified <code>version</code>.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifhmac.md":"{\n  \"content\": \"<h1 id=\\\"ifhmac\\\">ifHMAC</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rohmac.md\\\" title=\\\"roHMAC\\\">roHMAC</a></td>\\n<td>The HMAC component provides an interface to the OpenSSL HMAC functions</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setupdigesttype-as-string-key-as-object-as-integer\\\">Setup(digestType as String, key as Object) as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Initializes new HMAC context. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>digestType</td>\\n<td>String</td>\\n<td>Selects one of the supported digest algorithms, as documented in <a href=\\\"/docs/references/brightscript/components/roevpdigest.md\\\" title=\\\"roEVPDigest\\\">roEVPDigest</a>.</td>\\n</tr>\\n<tr>\\n<td>key</td>\\n<td>Object</td>\\n<td>An roByteArray containing the key for the MAC.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An integer indicating whether the function succeeded (0) or failed (1).</p>\\n<h3 id=\\\"reinit-as-integer\\\">Reinit() as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Re-initializes an existing HMAC context. This can be called to reuse an existing roHMAC object to authenticate new data. </p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An integer indicating whether the function succeeded (0) or failed (1).</p>\\n<h3 id=\\\"processmessage-as-object-as-object\\\">Process(message as Object) as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Digests the data in an array generates a MAC. Calling this method is the same as making the following calls:</p>\\n<pre><code>hmac.Reinit()\\nhmac.Update(message)\\nmac = hmac.Final()\\n</code></pre>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>message</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> with the data to be digested.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> containing the generated MAC.</p>\\n<h3 id=\\\"updatepartialmesssage-as-object-as-void\\\">Update(partialMesssage as Object) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Adds more data to be digested. The data in the array is added to the current digest.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>partialMesssage</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> with the additional data to be digested.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"final-as-object\\\">Final() as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> containing the final MAC.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The final MAC.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifhttpagent.md":"{\n  \"content\": \"<h1 id=\\\"ifhttpagent\\\">ifHttpAgent</h1>\\n<p>The ifHttpAgent methods modify the way that URLs are accessed</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/interfaces/ifappmanager.md\\\" title=\\\"roAppManager\\\">roAppManager</a></td>\\n<td>The Application Manager APIs set application level attributes, which mostly affect the look-and-feel of the application</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roaudioplayer.md\\\" title=\\\"roAudioPlayer\\\">roAudioPlayer</a></td>\\n<td>The Audio Player object provides the ability to setup the playing of a series of audio streams</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rogridscreen.md\\\" title=\\\"roGridScreen\\\">roGridScreen</a></td>\\n<td>The Grid Screen provides a graphical display of poster art from multiple content categories from within a single screen</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\" title=\\\"roImageCanvas\\\">roImageCanvas</a></td>\\n<td>The roImageCanvas component provides an interface to render graphic elements at specific spots on the screen</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolistscreen.md\\\" title=\\\"roListScreen\\\">roListScreen</a></td>\\n<td>The List Screen provides a graphical display of content in a vertical list within a single screen</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roparagraphscreen.md\\\" title=\\\"roParagraphScreen\\\">roParagraphScreen</a></td>\\n<td>The Paragraph Screen provides a way to display text and selection choices to the user</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roposterscreen.md\\\" title=\\\"roPosterScreen\\\">roPosterScreen</a></td>\\n<td>The Poster Screen provides a graphical display of poster art for content selection or can be used as a submenu to provide hierarchical structure to the application</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNode\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roslideshow.md\\\" title=\\\"roSlideShow\\\">roSlideShow</a></td>\\n<td>The Slide Show screen provides the ability to setup a photo slide show to playback a series of images</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rospringboardscreen.md\\\" title=\\\"roSpringboardScreen\\\">roSpringboardScreen</a></td>\\n<td>The Springboard Screen shows detailed information about an individual piece of content and provides options for actions that may be taken on that content</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotextscreen.md\\\" title=\\\"roTextScreen\\\">roTextScreen</a></td>\\n<td>roTextScreen provides a way of displaying large amounts of scrollable text</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotexturemanager.md\\\" title=\\\"roTextureManager\\\">roTextureManager</a></td>\\n<td>The Texture Manager provides a set of API's for managing an roBitmap cache.</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotexturerequest.md\\\" title=\\\"roTextureRequest\\\">roTextureRequest</a></td>\\n<td>An roTextureRequest is used to make requests to the roTextureManager</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rourltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a></td>\\n<td>A roUrlTransfer object transfers data to or from remote servers specified by URLs</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rovideoplayer.md\\\" title=\\\"roVideoPlayer\\\">roVideoPlayer</a></td>\\n<td>The roVideoPlayer component implements a video player with more programmatic control, but less user control than the roVideoScreen component</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rovideoscreen.md\\\" title=\\\"roVideoScreen\\\">roVideoScreen</a></td>\\n<td>The Video Screen object implements the video playback portion of the user interface</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"addheadername-as-string-value-as-string-as-boolean\\\">AddHeader(name as String, value as String) as Boolean</h3>\\n<p>Adds the specified HTTP header to the list of headers that will be sent in the HTTP request.</p>\\n<p>Certain well known headers such as User-Agent, Content-Length, and so on are automatically sent. The application may override the values for these headers if needed (for example, some servers may require a specific user agent string).</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The name of the HTTP header to be added to the list of headers. <br /><br />If \\\"x-roku-reserved-dev-id\\\" is passed as the name, the value parameter is ignored and in its place, the devid of the currently running channel is used as the value. This allows the developer's server to know which client app is talking to it. <br /><br />Any other headers with names beginning with \\\"x-roku-reserved-\\\" are reserved and may not be set.</td>\\n</tr>\\n<tr>\\n<td>value</td>\\n<td>String</td>\\n<td>The value of the HTTP header being added.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the HTTP header was successfully added.</p>\\n<h3 id=\\\"setheadersnamevaluemap-as-object-as-boolean\\\">SetHeaders(nameValueMap as Object) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the HTTP headers to be sent in the HTTP request.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>nameValueMap</td>\\n<td>Object</td>\\n<td>An associative array containing the HTTP headers and values to be included in the HTTP request. <br /><br />If \\\"x-roku-reserved-dev-id\\\" is passed as a key, the value parameter is ignored and in its place, the devid of the currently running channel is used as the value. This allows the developer's server to know which client app is talking to it. <br /><br />Any other headers with names beginning with \\\"x-roku-reserved-\\\" are reserved and may not be set.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the HTTP header was successfully set.</p>\\n<h3 id=\\\"initclientcertificates-as-boolean\\\">InitClientCertificates() as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Initializes the object to be sent to the Roku client certificate.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the object sent to to the Roku client certificate was successfully initialized.</p>\\n<h3 id=\\\"setcertificatesfilepath-as-string-as-boolean\\\">SetCertificatesFile(path as String) as Boolean</h3>\\n<p>Set the certificates file used for SSL to the specified .pem file.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The directory path of the .pem file to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the certificate was successfully set.</p>\\n<h3 id=\\\"setcertificatesdepthdepth-as-integer-as-void\\\">SetCertificatesDepth(depth as Integer) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Sets the maximum depth of the certificate chain that will be accepted.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>depth</td>\\n<td>Integer</td>\\n<td>The maximum depth to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"enablecookies-as-void\\\">EnableCookies() as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Enables any Set-Cookie headers returned from the request to be interpreted and the resulting cookies to be added to the cookie cache. </p>\\n<h3 id=\\\"getcookiesdomain-as-string-path-as-string-as-object\\\">GetCookies(domain as String, path as String) as Object</h3>\\n<h4 id=\\\"descripton\\\">Descripton</h4>\\n<p>Returns any cookies from the cookie cache that match the specified domain and path. Expired cookies are not returned.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>domain</td>\\n<td>String</td>\\n<td>The domain of the cookies to be retrieved.  To match all domains, provide an empty string.</td>\\n</tr>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The path of the cookies to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>An roArray of roAssociativeArrays, where each associative array represents a cookie. The roAssociativeArrays contain the following key-value pairs:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Version</td>\\n<td>Integer</td>\\n<td>Cookie version number</td>\\n</tr>\\n<tr>\\n<td>Domain</td>\\n<td>String</td>\\n<td>Domain to which cookie applies</td>\\n</tr>\\n<tr>\\n<td>Path</td>\\n<td>String</td>\\n<td>Path to which cookie applies</td>\\n</tr>\\n<tr>\\n<td>Name</td>\\n<td>String</td>\\n<td>Name of the cookie</td>\\n</tr>\\n<tr>\\n<td>Value</td>\\n<td>String</td>\\n<td>Value of the cookie</td>\\n</tr>\\n<tr>\\n<td>Expires</td>\\n<td>roDateTime</td>\\n<td>Cookie expiration date, if any</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addcookiescookies-as-object-as-boolean\\\">AddCookies(cookies as Object) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds the specified cookies to the cookie cache.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>cookies</td>\\n<td>Object</td>\\n<td>An roArray of roAssociativeArrays, where each associative array represents a cookie to be added. Each associative array must contain the following key-value pairs: <table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Version</td>\\n<td>Integer</td>\\n<td>Cookie version number</td>\\n</tr>\\n<tr>\\n<td>Domain</td>\\n<td>String</td>\\n<td>Domain to which cookie applies</td>\\n</tr>\\n<tr>\\n<td>Path</td>\\n<td>String</td>\\n<td>Path to which cookie applies</td>\\n</tr>\\n<tr>\\n<td>Name</td>\\n<td>String</td>\\n<td>Name of the cookie</td>\\n</tr>\\n<tr>\\n<td>Value</td>\\n<td>String</td>\\n<td>Value of the cookie</td>\\n</tr>\\n<tr>\\n<td>Expires</td>\\n<td>roDateTime</td>\\n<td>Cookie expiration date, if any</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the cookies were successfully added to the cache.</p>\\n<h3 id=\\\"clearcookies-as-void\\\">ClearCookies() as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Removes all cookies from the cookie cache.</p>\\n<h2 id=\\\"server-side-configuration-of-ssl-mutual-authentication-on-apache\\\">Server Side Configuration of SSL Mutual Authentication on Apache</h2>\\n<ol>\\n<li>\\n<p>Create a Self-Signed CA (Certificate Authority) root Certificate</p>\\n<ul>\\n<li>\\n<p>Create the root CA private key (remember the password chosen). This is needed to sign new certificates.</p>\\n</li>\\n<li>\\n<p>Create the root CA.</p>\\n<pre><code>  openssl genrsa -out rootCA.key 4096\\n  openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 825 -out rootCA.crt\\n</code></pre>\\n</li>\\n</ul>\\n</li>\\n</ol>\\n<ol start=\\\"2\\\">\\n<li>\\n<p>OpenSSL Server Cert</p>\\n<ul>\\n<li>\\n<p>Create the Web Server's key (remember the password chosen).</p>\\n</li>\\n<li>\\n<p>Create the Web Server's Cert Req.</p>\\n</li>\\n<li>\\n<p>Sign the Web Server's Cert Req with the CA Cert. In the <em>extfile</em> keyword, provide the path to the config file. </p>\\n<pre><code>  openssl genrsa -out &#x3C;server>.key 2048\\n  openssl req -new -key &#x3C;server>.key -out &#x3C;server>.csr -config &#x3C;server>.conf\\n  openssl x509 -req -in &#x3C;server>.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out &#x3C;server>.crt -days 825 -sha256 -extfile &#x3C;config_file_path> -extensions req_ext\\n</code></pre>\\n</li>\\n</ul>\\n</li>\\n</ol>\\n<pre><code>    **Sample config file**: The following demonstrates a config file to be referenced by the *extfile* keyword\\n\\n        [req]\\n        default_bits = 2048\\n        prompt = no\\n        default_md = sha256\\n        req_extensions = req_ext\\n        distinguished_name = dn\\n        [dn]\\n        C = &#x3C;COUNTRY>\\n        ST = &#x3C;STATE>\\n        L = &#x3C;CITY>\\n        O = &#x3C;ORGANIZATION>\\n        OU = &#x3C;ORGANIZATIONAL_UNIT>\\n        emailAddress = &#x3C;CONTACT>\\n        CN = &#x3C;DOMAIN>.com\\n        [req_ext]\\n        subjectAltName = @alt_names\\n        [alt_names]\\n        DNS.1 = &#x3C;DOMAIN>.com\\n        DNS.2 = &#x3C;DOMAIN_ALT>.com\\n</code></pre>\\n<ol start=\\\"3\\\">\\n<li>\\n<p>Install Cert in Apache</p>\\n<ul>\\n<li>Optionally, you can remove the passwd from the keyfile if you don't want to enter the passwd for testWEB every time Apache starts </li>\\n<li>Edit /etc/httpd/conf.d/ssl.conf</li>\\n<li>Edit /etc/httpd/conf/httpd.conf</li>\\n<li>Restart Apache</li>\\n</ul>\\n</li>\\n</ol>\\n<pre><code># Install Cert in Apache\\n    sudo mkdir /etc/httpd/certs\\n    sudo cp /opt/openssl/testCA/server/certificates/testWEB.CRT /etc/httpd/certs\\n    sudo cp /opt/openssl/testCA/server/keys/testWEB.KEY /etc/httpd/certs\\n    sudo cp sudo cp /opt/openssl/testCA/CA/testCA.CRT /etc/httpd/certs\\n\\n# Remove the passwd from the keyfile (to avoid entering it for testWEB every time Apache starts)\\n    sudo cp /etc/httpd/certs/testWEB.KEY\\n    /etc/httpd/certs/testWEB.KEY.orig\\n    sudo openssl rsa -in /etc/httpd/certs/testWEB.KEY.orig -out /etc/httpd/certs/testWEB.KEY\\n\\n# Editing ssl.conf\\n\\n# Configure your server cert:\\n    SSLCertificateFile /etc/httpd/certs/testWEB.CRT\\n    SSLCertificateKeyFile /etc/httpd/certs/testWEB.KEY\\n\\n# Configure client cert authentication:\\n    SSLCACertificateFile /etc/httpd/certs/cacert.pem\\n\\n# from roku sdk\\n    SSLVerifyClient require\\n    SSLVerifyDepth 1\\n\\n# Editing httpd.conf\\n\\n# In &#x3C;Directory> &#x3C;/Directory> tags where your video resides:`\\n# Checking the x-roku-reserved-dev-id header value assures that it is\\n# your package trying to connect to this directory.\\n\\n# You can find the dev-id of your brightscript package by going to the developer page on your Roku box, and selecting \\\"Utilities\\\".\\n# On the \\\"Utilities\\\" page, select \\\"Choose File\\\", enter the passwd for that pkg, and click \\\"Inspect\\\"\\n# Copy the value for the \\\"Dev ID:\\\" parameter and paste it here:\\n    SetEnvIf x-roku-reserved-dev-id 6bb22ba64125f6da56fa4b7d6f2199a970d06672 let_roku_in`\\n    SSLRequireSSL`\\n    Order Deny,Allow`\\n    Deny from all`\\n    Allow from env=let_roku_in`\\n\\n# Restarting Apache\\n    sudo service httpd restart\\n</code></pre>\\n<ol start=\\\"4\\\">\\n<li>\\n<p>Place your video in your Apache directory configured in step 3 above.</p>\\n</li>\\n<li>\\n<p>Modify the simplevideoplayer application to access the secure video:</p>\\n<ul>\\n<li>Add the testCA.CRT (The Certificate Authority cert) file to the simplevideoplayer/source directory.</li>\\n<li>In the appMain.brs:displyVideo() function, change the URL and video meta-data to match the video you put on your server in step 4).</li>\\n<li>Right before the \\\"video.SetContent(videoclip)\\\" line, add the following calls:</li>\\n</ul>\\n</li>\\n</ol>\\n<pre><code>      video.Addheader(\\\"x-roku-reserved-dev-id\\\",\\\"\\\")\\n      video.SetCertificatesFile(\\\"pkg:/source/testCA.CRT\\\")\\n      video.InitClientCertificates()\\n</code></pre>\\n<ol start=\\\"6\\\">\\n<li>Test the authentication with and without the code in step 5 above. If any of the three authentication methods above are ommitted you should get access denied. Note that you cannot successfully access the video until you've built a package, uploaded it to the channel store, and are running that channel via a channel code. A sideloaded developer app does not properly negotiate client certs or send the enforced dev-id value for the x-roku-reserved-dev-id header.</li>\\n</ol>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifimagecanvas.md":"{\n  \"content\": \"<h1 id=\\\"ifimagecanvas\\\">ifImageCanvas</h1>\\n<blockquote>\\n<p>This interface is deprecated.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\" title=\\\"roImageCanvas\\\">roImageCanvas</a></td>\\n<td>The roImageCanvas component provides an interface to render graphic elements at specific spots on the screen</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"allowupdatesupdatesenabled-as-boolean-as-void\\\">AllowUpdates(updatesEnabled as Boolean) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Turns updates on or off. Surrounding changes to several layers with AllowUpdates(false) and AllowUpdates(true) calls makes complex display modification atomic. This gives the application protection against the image canvas trying to render a partial update</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>updatesEnabled</td>\\n<td>Boolean</td>\\n<td>Set this flag to true in order to enable updates.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlayerzorder-as-integer-contentmetadata-as-object-as-void\\\">SetLayer(zOrder as Integer, contentMetaData as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Redraws the screen. Each call to this method replaces the previous content metadata that previously existed at that z-order layer. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>zOrder</td>\\n<td>Integer</td>\\n<td>A z-order specifier with higher z-orders closer to the viewer. Negative z-orders are \\\"behind the display\\\" and are thus invisible.</td>\\n</tr>\\n<tr>\\n<td>contentMetaData</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> (<a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">Content Meta-Data</a> objects) representing the information for each image to be displayed on the <a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\" title=\\\"roImageCanvas\\\">roImageCanvas</a></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlayerzorder-as-integer-contentlist-as-object-as-void\\\">SetLayer(zOrder as Integer, contentList as Object) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>This method is similar to the <a href=\\\"#setlayerzorder-as-integer-contentlist-as-object-as-void\\\">SetLayer()</a> method, except it takes an <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArrays\\\">roAssociativeArrays</a> instead of just a single <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> of <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">Content Meta-Data</a>.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>zOrder</td>\\n<td>Integer</td>\\n<td>A z-order specifier with higher z-orders closer to the viewer. Negative z-orders are \\\"behind the display\\\" and are thus invisible.</td>\\n</tr>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArrays\\\">roAssociativeArrays</a> representing the information for each image to be displayed on the <a href=\\\"/docs/references/brightscript/components/roimagecanvas.md\\\" title=\\\"roImageCanvas\\\">roImageCanvas</a>.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"swaplayerszordera-as-integer-zorderb-as-integer-as-void\\\">SwapLayers(zOrderA as Integer, zOrderB as Integer) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Swaps the content metadata stored in one zOrder with another. This enables changing the layer that is displayed \\\"On Top\\\". This method can be used to swap empty (unspecified) layers</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>zOrderA</td>\\n<td>Integer</td>\\n<td>The current zOrder that is displayed on top.</td>\\n</tr>\\n<tr>\\n<td>zOrderB</td>\\n<td>Integer</td>\\n<td>The new zOrder to be displayed on top.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setrequireallimagestodrawrequireallimages-as-boolean-as-void\\\">SetRequireAllImagesToDraw(requireAllImages as Boolean) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Waits to draw the screen until all images in the content-meta-data array are downloaded, decoded, and loaded into memory. There is a large performance penalty for setting this to true</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>requireAllImages</td>\\n<td>Boolean</td>\\n<td>A flag enabling the <strong>requireAllImages</strong> feature. It is recommended that this flag be disabled (false) for better performance.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"purgecachedimages-as-void\\\">PurgeCachedImages() as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Purges the internal cache of all images related to URLs in the current content list. If the content list is empty, then calling this method has no affect.</p>\\n<h3 id=\\\"getcanvasrect-as-object\\\">GetCanvasRect() as Object</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the width and height of the image canvas.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An roAssociativeArray with names w for width and h for height.</p>\\n<h3 id=\\\"clearlayerzorder-as-integer-as-void\\\">ClearLayer(zOrder as Integer) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Clears all content from a layer (see <a href=\\\"#setlayerzorder-as-integer-contentmetadata-as-object-as-void\\\">SetLayer</a> for the layer definition).</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>zOrder</td>\\n<td>Integer</td>\\n<td>The layer to be cleared.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clear-as-void\\\">Clear() as Void</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Clear</td>\\n<td>Void</td>\\n<td>-</td>\\n<td>Clear all content from all layers</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Displays or refreshes the screen after initial creation or state changes.</p>\\n<blockquote>\\n<p>Screen update times can vary significantly depending on how much of the screen needs to be redrawn, and how many different images and layers you are using.</p>\\n</blockquote>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the screen is displayed.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. This method is useful for avoiding screen flicker when the display order of your screens does not resemble a stack</p>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-boolean\\\">AddButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Adds a button to the specified screen.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the button to be added to the screen.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button to be added to the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added.</p>\\n<h3 id=\\\"clearbuttons-as-void\\\">ClearButtons() as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Clears all of the buttons from the screen and resets the array of buttons back to default with no buttons set.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifimagemetadata.md":"{\n  \"content\": \"<h1 id=\\\"ifimagemetadata\\\">ifImageMetadata</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roimagemetadata.md\\\" title=\\\"roImageMetadata\\\">roImageMetadata</a></td>\\n<td>The roImageMetadata component provides developers access to image file metadata included in many .jpg EXIF headers</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"seturlurl-as-string-as-void\\\">SetUrl(url as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the URL to the image. Only file URLs are supported</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>url</td>\\n<td>String</td>\\n<td>The URL of the image.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getmetadata-as-object\\\">GetMetadata() as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns a set of simple and common image metadata</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An associative array containing the following key-value pairs with image metadata:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>Width of the image in pixels</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>Height of the image in pixels</td>\\n</tr>\\n<tr>\\n<td>orientation</td>\\n<td>String</td>\\n<td>\\\"portrait\\\" or \\\"landscape\\\"</td>\\n</tr>\\n<tr>\\n<td>datetime</td>\\n<td>roDateTime</td>\\n<td>The creation time of the image such as the time a photo was taken</td>\\n</tr>\\n<tr>\\n<td>comment</td>\\n<td>String</td>\\n<td>User specified comment string. This is often referred to as a caption</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getthumbnail-as-object\\\">GetThumbnail() as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns a thumbnail image if one is embedded in the image metadata and the corresponding associative array with image data.  This only generates a thumbnail if one exists. </p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An associative array that with <strong>bytes</strong> and <strong>type</strong> keys with the image data: </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>bytes</td>\\n<td>roByteArray</td>\\n<td>The image data</td>\\n</tr>\\n<tr>\\n<td>Type</td>\\n<td>Integer</td>\\n<td>The type of image, which is most likely \\\"image/jpeg\\\", but could also be  \\\"image/png\\\".</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getrawexif-as-object\\\">GetRawExif() as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns all of the raw EXIF metadata.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An associative array with all of the raw EXIF metadata. See the <a href=\\\"/docs/references/brightscript/components/roimagemetadata.md#exif-background\\\">EXIF section</a> for details about EXIF metadata.</p>\\n<h3 id=\\\"getrawexiftagifd-as-integer-tagnum-as-integer-as-dynamic\\\">GetRawExifTag(ifd as Integer, tagnum as Integer) as Dynamic</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the raw data for an Exif tag. The method provides direct access to a specific raw EXIF tag</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ifd</td>\\n<td>Integer</td>\\n<td>The ifd of the Exif tag.</td>\\n</tr>\\n<tr>\\n<td>tagnum</td>\\n<td>Integer</td>\\n<td>The tag number of the Exif tag.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The raw data of an Exif tag. It the Exif tag doesn't exist it returns invalid.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifinput.md":"{\n  \"content\": \"<h1 id=\\\"ifinput\\\">ifInput</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roinput.md\\\" title=\\\"roInput\\\">roInput</a></td>\\n<td>An roInput object can be used to receive events sent from a network client using the External Control Protocol (ECP), as described in External Control API</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getmessageport-as-object\\\">GetMessagePort() as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the message port (if any) currently associated with the object.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The message port value.</p>\\n<h3 id=\\\"setmessageportport-as-object-as-void\\\">SetMessagePort(port as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the roMessagePort to be used to receive events.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>port</td>\\n<td>Object</td>\\n<td>The port to be used to receive events.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"enabletransportevents-as-boolean\\\">EnableTransportEvents() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Registers a channel to receive <code>roInput transport</code> events, which are voice commands sent via the Roku remote control, Roku mobile app, or a virtual assistant such as Amazon Alexa or Google Assistant. </p>\\n<p>Voice commands include the following: \\\"fast forward\\\", \\\"next, \\\"play\\\", \\\"pause\\\", \\\"replay\\\", \\\"rewind\\\", \\\"seek\\\", and \\\"startover\\\". Once you register your channel to receive transport events, your channel must call the <code>EventResponse()</code> method to handle them.</p>\\n<p>See <a href=\\\"/docs/developer-program/media-playback/voice-controls/transport-controls.md\\\">Implementing Voice Controls</a> for more information.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether transport event notifications were successfully registered.  </p>\\n<h3 id=\\\"eventresponseroassociativearray-aa-as-boolean\\\">EventResponse(roAssociativeArray aa) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Marks a transport command as handled, unhandled, or handled with an error. </p>\\n<p>If your channel has registered for handling transport events (by calling the <code>EnableTransportEvents()</code>function on an <code>roInput</code> object), it must call this method within 5 seconds of receiving a transport event. This is because the Roku OS needs to know whether a transport command has been handled, unhandled, or handled with an error. If a transport event is marked as unhandled, the Roku OS can provide the default behavior. If a transport event is marked as handled with an error, the Roku OS can provide on-screen feedback.</p>\\n<p>If your channel has registered for transport events, but does not call this method within 5 seconds of receiving a transport event, the event is considered unhandled.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<p>This method takes an AssociativeArray with two fields: <strong>id</strong> and <strong>status</strong>. The <strong>id</strong> field specifies the transport ID event; the <strong>status</strong> specifies whether the event was handled, handled with an error, or unhandled.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Parameter</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Id</td>\\n<td>String</td>\\n<td>The unique ID of the transport event.</td>\\n</tr>\\n<tr>\\n<td>status</td>\\n<td>String</td>\\n<td>Indicates whether the event was handled successfully, handled with an error, or unhandled. This may be one of the following values: <br /><br /><ul>\\n<li>\\\"unhandled\\\". The channel is not handling the event. The default behavior is executed by the Roku OS, if defined.</li>\\n<li>\\\"error\\\".  The channel failed to handle the event in that instance.</li>\\n<li>\\\"error.ad\\\". The transport command failed because an ad is playing.</li>\\n<li>\\\"error.channel\\\". The channel does not support this command in any context.</li>\\n<li>\\\"error.generic\\\" (<em>Available since Roku OS 10.0</em>). No active media is available to fulfill the voice command. Passing this status displays \\\"That is not available\\\" in the Roku Voice heads-up display. This can be used in cases, for example, when a channel receives a \\\"forward\\\" or \\\"next\\\" command, but there is no content to fast forward or play next, respectively.</li>\\n<li>\\\"error.live\\\". The transport command failed because the content is live. </li>\\n<li>\\\"error.no-media\\\". There is no media active.</li>\\n<li>\\\"error.redundant\\\". The transport command does change the current state (\\\"pause\\\" command sent when the content is already paused)</li>\\n<li>\\\"success\\\". The channel handled the event successfully.</li>\\n<li>\\\"success.seek-start\\\".  A seek command was handled successfully, but the seek duration was before the beginning.</li>\\n<li>\\\"success.seek-end\\\". A seek command was handled successfully but the seek location was past the end.</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the event response operation was successful.  </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifint.md":"{\n  \"content\": \"<h1 id=\\\"ifint\\\">ifInt</h1>\\n<blockquote>\\n<p>Interface equivalent for intrinsic type 'Integer'</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roint.md\\\" title=\\\"roInt\\\">roInt</a></td>\\n<td>Object equivalent for intrinsic type Integer</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getint-as-integer\\\">GetInt() As Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Gets the integer value stored in the calling Integer object. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The integer value stored in the calling Integer object. </p>\\n<h3 id=\\\"setintvalue-as-integer-as-void\\\">SetInt(value As Integer) As Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the calling Integer object to the specified integer value. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>value</td>\\n<td>Integer</td>\\n<td>The integer value to be set on the calling Integer object.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifintops.md":"{\n  \"content\": \"<h1 id=\\\"ifintops\\\">ifIntOps</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roint.md\\\" title=\\\"roInt\\\">roInt</a></td>\\n<td>Object equivalent for intrinsic type Integer</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"tostr-as-string\\\">ToStr() As String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the integer value formatted as a decimal string. No leading space is appended for non-negative numbers.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A decimal string.</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<p><code>5.ToStr() = \\\"5\\\", (-5).ToStr() = \\\"-5\\\"</code></p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifkeyboardscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifkeyboardscreen\\\">ifKeyboardScreen</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rokeyboardscreen.md\\\" title=\\\"roKeyboardScreen\\\">roKeyboardScreen</a></td>\\n<td>The Keyboard Screen is designed to allow the user to enter an alpha-numeric string for searching, username/password registration or other purposes</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the title for the screen to the specified string.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title to be displayed on the keyboard screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdisplaytextdisplaytext-as-string-as-void\\\">SetDisplayText(displayText as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the descriptive text displayed to the user for prompting regarding the required entry.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>displayText</td>\\n<td>String</td>\\n<td>The descriptive text to be displayed on the keyboard screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"settexttitle-as-string-as-string\\\">SetText(title as String) as String</h3>\\n<p>Sets the default text displayed in the keyboard entry field. Text is selected by default, so that if the user begins to enter text, the default text is replaced. If the user presses the action button (for example, Search), the default text is used as the entry.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The default text to be displayed in the keyboard entry field.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The default text that was set for the keyboard entry field. </p>\\n<h3 id=\\\"gettext-as-string\\\">GetText() as String</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the current value in the keyboard text entry field.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Current value string.</p>\\n<h3 id=\\\"setmaxlengthmaxlen-as-integer-as-void\\\">SetMaxLength(maxLen as Integer) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the maximum length for text entry. The default is 20 characters.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>maxLen</td>\\n<td>Integer</td>\\n<td>The maximum number of characters for text entered into the keyboard screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-void\\\">AddButton(id as Integer, title as String) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds a button to the screen identified by the title and ID provided. The buttons are displayed at the bottom of the screen and appear in the order added. When the button is pressed, the script will receive an event from the application indicating the ID of the button pressed.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the button to be added to the keyboard screen.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button to be added to the keyboard screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearbuttons-as-void\\\">ClearButtons() as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Removes all buttons from the keyboard screen.</p>\\n<h3 id=\\\"setsecuretextissecure-as-boolean-as-void\\\">SetSecureText(isSecure as Boolean) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Displays user-entered text with bullet characters.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>isSecure</td>\\n<td>Boolean</td>\\n<td>A flag indicating whether to obfuscate the text entered into the keyboard screen. If <strong>isSecure</strong> is set to true, the user-entered text is obscured with bullet characters. If false, it is treated as plain text. The default value is false.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was displayed. </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<p>Closes the screen and delete the associated object. This method is useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iflist.md":"{\n  \"content\": \"<h1 id=\\\"iflist\\\">ifList</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a></td>\\n<td>The list object implements the interfaces: ifList, ifArray, ifEnum and therefore can behave like an array that can dynamically add members</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a></td>\\n<td>Contains a list of roXML objects</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"resetindex-as-boolean\\\">ResetIndex() As Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Resets the current index or position in list to the head element.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the index has been reset.</p>\\n<h3 id=\\\"addtailtval-as-dynamic-as-void\\\">AddTail(tval As Dynamic) As Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Adds an element to the tail of the list.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>AddTail</td>\\n<td>Dynamic</td>\\n<td>The element to be added to the tail of the list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addheadtval-as-dynamic-as-void\\\">AddHead(tval As Dynamic) As Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Adds an element to the head of the list.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>AddHead</td>\\n<td>Dynamic</td>\\n<td>The element to be added to the head of the list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"removeindex-as-dynamic\\\">RemoveIndex() As Dynamic</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Removes the entry at the current index or position from the list and increments the index or position in the list.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The entry removed from the list. This method returns invalid if the end of the list is reached.</p>\\n<h3 id=\\\"getindex-as-dynamic\\\">GetIndex() As Dynamic</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Gets the entry at current index or position from the list and increments the index or position in the list.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The entry retrieved from the list. This method returns invalid if the end of the list is reached.</p>\\n<h3 id=\\\"removetail-as-dynamic\\\">RemoveTail() As Dynamic</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Removes the entry at the tail of the list.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The entry removed from the tail of the list. </p>\\n<h3 id=\\\"removehead-as-dynamic\\\">RemoveHead() As Dynamic</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Removes the entry at the head of the list.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The entry removed from the head of the list. </p>\\n<h3 id=\\\"gettail-as-dynamic\\\">GetTail() As Dynamic</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Retrieves the entry at the tail of the list.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>The entry retrieved from the tail of the list. </p>\\n<h3 id=\\\"gethead-as-dynamic\\\">GetHead() As Dynamic</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Retrieves the entry at the head of the list.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The entry retrieved from the head of the list. </p>\\n<h3 id=\\\"count-as-integer\\\">Count() As Integer</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns the number of elements in the list.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The number of elements in the list. </p>\\n<h3 id=\\\"clear-as-void\\\">Clear() As Void</h3>\\n<p>Removes all elements from the list</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iflistscreen.md":"{\n  \"content\": \"<h1 id=\\\"iflistscreen\\\">ifListScreen</h1>\\n<blockquote>\\n<p>This interface is deprecated.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolistscreen.md\\\" title=\\\"/docs/references/brightscript/components/rolistscreen.md\\\">roListScreen</a></td>\\n<td>The List Screen provides a graphical display of content in a vertical list within a single screen</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setcontentcontentlist-as-object-as-void\\\">SetContent(contentList as Object) as Void</h3>\\n<h4 id=\\\"descriptions\\\">Descriptions</h4>\\n<p>Sets the list of content to be displayed on the screen. See “Content Meta-Data” for details on the attributes for each element. The screen is responsible for fetching the poster art from the URL’s specified.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An roArray of roAssociativeArrays (Content Meta-Data objects) representing the information for each item to be displayed on screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addcontentitem-as-object-as-void\\\">AddContent(item as Object) as Void</h3>\\n<h4 id=\\\"descriptions-1\\\">Descriptions</h4>\\n<p>Adds an item to the end of the list to be displayed on screen.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An roAssociativeArray (Content Meta-Data object) representing the information of the item.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setitemitem-as-object-index-as-integer-as-void\\\">SetItem(item as Object, index as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Updates the content of an item in the list.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>item</td>\\n<td>Object</td>\\n<td>An roAssociativeArray (Content Meta-Data object) representing the information of the item to be updated.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the item to be updated. If the index is not within the range of 0 – list size, this function has no effect.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearcontent-as-void\\\">ClearContent() as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Clears all the content in the list and displays an empty screen.</p>\\n<h3 id=\\\"removecontentindex-as-integer-as-void\\\">RemoveContent(index as Integer) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Removes an item from the list. The screen refreshes immediately if the item is visible</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the item to be removed from the list. If the index is not within the range of 0 – list size, this function has no effect.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setfocusedlistitemindex-as-integer-as-void\\\">SetFocusedListItem(index as Integer) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the focused list item to the given index. If the item is not visible, focus jumps to the item and item becomes visible.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The item in the list to be given focus. If the index is not within the range of 0 – list size, this function has no effect.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setheaderheader-as-string-as-void\\\">SetHeader(header as String) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the header text of the screen. This can be used as an information text for the screen.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>header</td>\\n<td>String</td>\\n<td>A one-line text (string) displayed on top of the screen below the overhang.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Sets the title of the screen. The title is displayed on the top right corner of the screen on the overhang.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title to be displayed on the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Displays or refreshes the screen after initial creation or state changes.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was displayed.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\\n<h3 id=\\\"setbreadcrumbtextbreadcrumb1-as-string-breadcrumb2-as-string-as-void\\\">SetBreadcrumbText(breadcrumb1 as String, breadcrumb2 as String) as Void</h3>\\n<p>Sets the breadcrumb values. This can be used as an alternative to the <a href=\\\"#settitletitle-as-string-as-void\\\">SetTitle()</a> method so that the breadcrumb text alignment is consistent with other screens</p>\\n<h3 id=\\\"setupbehaviorattoprowbehavior-as-string-as-void\\\">SetupBehaviorAtTopRow(behavior as String) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Controls how the remote \\\"up\\\" key behaves when it is pressed with the top row selected. </p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>behavior</td>\\n<td>String</td>\\n<td>Specifies the behavior of the \\\"up\\\" key. This may be one of the following values: <ul>\\n<li>\\\"stop\\\": stop scrolling up, and stay on the list screen (default behavior)</li>\\n<li>\\\"exit\\\": exit the list screen</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iflisttoarray.md":"{\n  \"content\": \"<h1 id=\\\"iflisttoarray\\\">ifListToArray</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a></td>\\n<td>The list object implements the interfaces: ifList, ifArray, ifEnum and therefore can behave like an array that can dynamically add members</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a></td>\\n<td>Contains a list of roXML objects</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"toarray-as-object\\\">ToArray() As Object</h3>\\n<blockquote>\\n<p>This function is available in Roku OS 8.0 or later</p>\\n</blockquote>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns an roArray containing the same elements as the list.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p> An element list as an array.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iflocalization.md":"{\n  \"content\": \"<h1 id=\\\"iflocalization\\\">ifLocalization</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolocalization.md\\\" title=\\\"roLongInteger\\\">roLocalization</a></td>\\n<td>The roLocalization object provides functions to assist in localization</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getpluralstringcount-as-integer-zerostring-as-string-onestring-as-string-pluralstring-as-string-as-string\\\">GetPluralString(count as Integer, zeroString as String, oneString as String, pluralString as String) as String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Replaces \\\"^n\\\" in pluralString with count and returns the result.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>count</td>\\n<td>Integer</td>\\n</tr>\\n<tr>\\n<td>zeroString</td>\\n<td>String</td>\\n</tr>\\n<tr>\\n<td>oneString</td>\\n<td>String</td>\\n</tr>\\n<tr>\\n<td>pluralString</td>\\n<td>String</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The result of the operation. If count is 0, this returns zeroString. If count is 1, it returns oneString.</p>\\n<h4 id=\\\"examples\\\">Examples</h4>\\n<p><code>GetPluralString(count, \\\"0 books\\\", \\\"1 book\\\", \\\"^n books\\\")</code></p>\\n<h3 id=\\\"getlocalizedassetdirname-as-string-filename-as-string-as-string\\\">GetLocalizedAsset(dirName as String, fileName as String) as String</h3>\\n<p>Returns an appropriate asset path based on the user's currently selected language.</p>\\n<p>If the user's current language setting is French (fr_CA), and the file exists, then this would return \\\"pkg:/locale/fr_CA/images/MyImage.png\\\".</p>\\n<p>If the file does not exist in the current locale directory, then this will search the directory locale/default/. If it exists there, it will return it; otherwise, it will check the directory locale/en_US/. If it still can't find the file, then it will return an empty string.</p>\\n<p>A list of currently supported locales can be found at <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#getcurrentlocale-as-string\\\" title=\\\"ifDeviceInfo.GetCurrentLocale\\\">ifDeviceInfo.GetCurrentLocale</a>.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>dirName</td>\\n<td>String</td>\\n<td>The name of a subdirectory in the directory pkg:/locale/XX_YY/ where XX_YY is the current language setting.</td>\\n</tr>\\n<tr>\\n<td>fileName</td>\\n<td>String</td>\\n<td>The name of the file.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An asset path. </p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<p><code>GetLocalizedAsset(\\\"images\\\", \\\"MyImage.png\\\")</code>.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iflongint.md":"{\n  \"content\": \"<h1 id=\\\"iflongint\\\">ifLongInt</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolonginteger.md\\\" title=\\\"roLongInteger\\\">roLongInteger</a></td>\\n<td>Object equivalent for intrinsic type LongInteger</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getlongint-as-longinteger\\\">GetLongInt() As LongInteger</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Gets the longinteger value stored in the calling Longinteger object. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The longinteger value stored in the calling Loninteger object. </p>\\n<h3 id=\\\"setlongintvalue-as-longinteger-as-void\\\">SetLongInt(value As LongInteger) As Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the calling Longinteger object to the specified longinteger value. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>value</td>\\n<td>Longinteger</td>\\n<td>The longinteger value to be set on the calling Longinteger object.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifmessagedialog.md":"{\n  \"content\": \"<h1 id=\\\"ifmessagedialog\\\">ifMessageDialog</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/romessagedialog.md\\\" title=\\\"roMessageDialog\\\">roMessageDialog</a></td>\\n<td>The Message Dialog component is used to display a formatted, multi-line text message to the user</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the title for the dialog to the specified string.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Title</td>\\n<td>String</td>\\n<td>The title to be displayed in the message dialog.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"settexttext-as-string-as-void\\\">SetText(text as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Appends a paragraph with the specified text. The dialog will automatically resize to accommodate the text, up to the limit of available display space.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be displayed in the message dialog.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"updatetexttext-as-string-as-void\\\">UpdateText(text as String) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Replaces the last paragraph with the specified text, or appends a paragraph if there is not a prior paragraph. If the last paragraph added was a static paragraph, this function appends a new paragraph.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to replace the last paragraph in the message dialog.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addstatictexttext-as-string-as-void\\\">AddStaticText(text as String) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Appends a static paragraph with the specified text. This static text does not get changed by subsequent calls to the <a href=\\\"#settexttext-as-string-as-void\\\">SetText()</a> or <a href=\\\"#updatetexttext-as-string-as-void\\\">UpdateText()</a> methods.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be included in the static paragraph.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-boolean\\\">AddButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds a button to the right-justified side of the dialog box. The buttons are at the bottom of the dialog and appear in the order added. When the button is pressed, the script will receive an event from the application indicating the ID of the button pressed.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the button to be added to the screen.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button to be added to the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added to the screen.</p>\\n<h3 id=\\\"addleftbuttonid-as-integer-title-as-string-as-boolean\\\">AddLeftButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Adds a button to the left-justified side of the dialog box. The buttons are at the bottom of the dialog and appear in the order added. When the button is pressed, the script will receive an event from the application indicating the ID of the button pressed.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the button to be added to the screen.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button to be added to the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added to the screen.</p>\\n<h3 id=\\\"updatebuttonid-as-integer-title-as-string-as-boolean\\\">UpdateButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Updates the title of the specified button.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the button to be updated.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button to be updated.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully updated.</p>\\n<h3 id=\\\"addbuttonseparator-as-boolean\\\">AddButtonSeparator() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Adds horizontal line separating buttons into sections on the dialog.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the horizontal line was successfully added.</p>\\n<h3 id=\\\"addratingbuttonid-as-integer-userrating-as-integer-aggregaterating-as-integer-tip-as-string-as-boolean\\\">AddRatingButton(id as Integer, userRating as Integer, aggregateRating as Integer, tip as String) as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Adds a star rating button to the right-justified side of the dialog. The rating is specified as an integer 1-100 which indicates the number of stars (1 to 5) to be displayed, or 0 if unrated. Think of this as a percentage value (for example, &#x3C;20% = 1 star).</p>\\n<p>This button is displayed in the menu area of the screen and appears in the order added.</p>\\n<p>The button returns the userRating in the event data field. The rating widget is only allowed on message dialogs that call SetMenuTopLeft(true).</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the star rating button was successfully added.</p>\\n<h3 id=\\\"addleftratingbuttonid-as-integer-userrating-as-integer-aggregaterating-as-integer-tip-as-string-as-boolean\\\">AddLeftRatingButton(id as Integer, userRating as Integer, aggregateRating as Integer, tip as String) as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Adds a star rating button to the left-justified side of the dialog. The rating is specified as an integer 1-100 which indicates the number of stars (1 to 5) to be displayed, or 0 if unrated. Think of this as a percentage value (for example, &#x3C;20% = 1 star).</p>\\n<p>This button is displayed in the menu area of the screen and appears in the order added.</p>\\n<p>The button returns the userRating in the event data field. The rating widget is only allowed on message dialogs that call SetMenuTopLeft(true).</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the rating button to be added to the dialog.</td>\\n</tr>\\n<tr>\\n<td>userRating</td>\\n<td>Integer</td>\\n<td>The value the user rated the title, while the aggregate Rating represents the total for all users. The userRating takes precedence and determines the color of the buttons if set.</td>\\n</tr>\\n<tr>\\n<td>aggregateRating</td>\\n<td>Integer</td>\\n<td>The overall rating of the title. The aggregateRating may display half-stars</td>\\n</tr>\\n<tr>\\n<td>tip</td>\\n<td>String</td>\\n<td>The tip associated with the rating button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the star rating button was successfully added.</p>\\n<h3 id=\\\"showbusyanimation-as-void\\\">ShowBusyAnimation() as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Displays a spinning busy animation to indicate work in progress. This animation continues until the screen is closed.</p>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was displayed.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. This method is useful for avoiding screen flicker when the display order of your screens does not resemble a stack</p>\\n<h3 id=\\\"enableoverlayenable-as-boolean-as-void\\\">EnableOverlay(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>With overlay enabled, the background screen is no longer dimmed.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable overlays.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setmenutoplefttopleft-as-boolean-as-void\\\">SetMenuTopLeft(topLeft as Boolean) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Sets the format of the buttons to top-left justified. Otherwise the format defaults to bottom-right justified. </p>\\n<p>If you call the <a href=\\\"#addratingbuttonid-as-integer-userrating-as-integer-aggregaterating-as-integer-tip-as-string-as-boolean\\\">AddRatingButton()</a> method, you must make the buttons top-left justified.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>topLeft</td>\\n<td>Boolean</td>\\n<td>A flag specifying the format of the buttons. <ul>\\n<li>true: Makes the buttons top-left justified. </li>\\n<li>false: Makes the buttons bottom-right justified. </li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setfocusedmenuitemitem-as-integer-as-boolean\\\">SetFocusedMenuItem(item as Integer) as Boolean</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Sets the button to be highlighted. The default is the first button from the top. </p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>item</td>\\n<td>Integer</td>\\n<td>The ID of the button to gain focus.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"enablebackbuttonenablebackbutton-as-boolean-as-void\\\">EnableBackButton(enableBackButton as Boolean) as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Sends an <a href=\\\"/docs/references/brightscript/events/romessagedialogevent.md#isscreenclosed-as-boolean\\\">isScreenClosed()</a> event when the remote control's back button is pressed.</p>\\n<p>By default the MessageDialog will not send an <a href=\\\"/docs/references/brightscript/events/romessagedialogevent.md#isscreenclosed-as-boolean\\\">isScreenClosed()</a> event so that scripts that did not expect this event will not break.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifmessageport.md":"{\n  \"content\": \"<h1 id=\\\"ifmessageport\\\">ifMessagePort</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a></td>\\n<td>A Message Port is the place messages (events) are sent</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"waitmessagetimeout-as-integer-as-dynamic\\\">WaitMessage(timeout as Integer) as Dynamic</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Waits until an event object is available or timeout milliseconds have passed.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>timeout</td>\\n<td>Integer</td>\\n<td>The number of milliseconds to wait for a message. If this parameter is set to 0, this method waits indefinitely for a message, with no timeout.<br /><br />The native <a href=\\\"/docs/references/brightscript/language/global-utility-functions.md#waittimeout-as-integer-port-as-object-as-object\\\">wait()</a> function can also be used to get the event object which WaitMessage() would return.  This means that the following two statements have the same effect:<br /><pre><code>msg = port.WaitMessage(timeout)\\nmsg = wait(timeout, port)\\n</code></pre></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p> If an event is available, it is returned. If the timeout expires, invalid is returned. </p>\\n<h3 id=\\\"getmessage-as-dynamic\\\">GetMessage() as Dynamic</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>If an event object is available, it is returned.  Otherwise invalid is returned.  The method returns immediately in either case and does not wait.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An event object.</p>\\n<h3 id=\\\"peekmessage-as-dynamic\\\">PeekMessage() as Dynamic</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>This method is similar to the <a href=\\\"#getmessage-as-dynamic\\\">GetMessage()</a> method, but the returned object (if not invalid) remains in the message queue.  A later call to <a href=\\\"#waitmessagetimeout-as-integer-as-dynamic\\\">WaitMessage()</a>, <a href=\\\"#getmessage-as-dynamic\\\">GetMessage()</a> or PeekMessage() will return the same message.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An event object.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifmicrophone.md":"{\n  \"content\": \"<h1 id=\\\"ifmicrophone\\\">ifMicrophone</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/romicrophone.md\\\" title=\\\"roMicrophone\\\">roMicrophone</a></td>\\n<td>The roMicrophone API allows channel applications to receive audio data from the user’s microphone-supported remote control device or mobile phone</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"canrecord-as-boolean\\\">CanRecord() as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Indicates whether the platform and paired remote control can be requested to open the microphone.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the microphone can be opened.</p>\\n<h3 id=\\\"setpromptprompt-as-string-as-void\\\">SetPrompt(prompt as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the text to be displayed in the system microphone UI.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>prompt</td>\\n<td>String</td>\\n<td>The text to be displayed in the system microphone UI.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"recordtofilewavfilepath-as-string-as-boolean\\\">RecordToFile(wavFilePath as String) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Opens the microphone and records to create a WAV file at the specified output file path. Only tmp:/ paths are supported.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>wavFilePath</td>\\n<td>String</td>\\n<td>The file path where the WAV file is to be stored.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the recording was performed and saved successfully.</p>\\n<h3 id=\\\"startrecording-as-boolean\\\">StartRecording() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Opens the microphone and begins streaming microphone events to the channel. The channel must have called the <a href=\\\"/docs/references/brightscript/interfaces/ifsetmessageport.md#setmessageportport-as-object--as-void\\\">SetMessagePort()</a> method previously. </p>\\n<p>While the microphone is open, <a href=\\\"/docs/references/brightscript/events/romicrophoneevent.md#isrecordinginfo-as-boolean\\\">RecordingInfo</a> events will be sent periodically with audio data. When the microphone is closed, a <a href=\\\"/docs/references/brightscript/events/romicrophoneevent.md#isrecordingdone-as-boolean\\\">RecordingDone</a> event will be sent. See <a href=\\\"/docs/references/brightscript/events/romicrophoneevent.md\\\">roMicrophoneEvent</a> for detailed information.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the microphone was opened successfully.</p>\\n<h3 id=\\\"stoprecording-as-boolean\\\">StopRecording() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Stops recording and closes the microphone. This method is useful if the microphone was previously opened via the <a href=\\\"#startrecording-as-boolean\\\">StartRecording()</a> method and the channel needs to cancel the current recording prematurely, (for example, the duration limit was reached or an application error). </p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the microphone was opened and closed successfully.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifonelinedialog.md":"{\n  \"content\": \"<h1 id=\\\"ifonelinedialog\\\">ifOneLineDialog</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roonelinedialog.md\\\" title=\\\"roOneLineDialog\\\">roOneLineDialog</a></td>\\n<td>The One Line Dialog is a special type of dialog optimized for single line text</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the title to be displayed in the upper right-hand corner of the screen in the overhang area.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The text to be displayed on the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"showbusyanimation-as-void\\\">ShowBusyAnimation() as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Displays a spinning busy animation to indicate work in progress is displayed. The animation will continue until the screen is closed.</p>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was successfully displayed.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. Useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifparagraphscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifparagraphscreen\\\">ifParagraphScreen</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roparagraphscreen.md\\\" title=\\\"roParagraphScreen\\\">roParagraphScreen</a></td>\\n<td>The Paragraph Screen provides a way to display text and selection choices to the user</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"addheadertexttext-as-string-as-void\\\">AddHeaderText(text as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Adds a string of bold, high visibility text to the screen as a header to introduce the subsequent paragraph(s).</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be added to the header.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addparagraphtext-as-string-as-void\\\">AddParagraph(text as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Adds a paragraph of text to the screen. Paragraphs are specified as a single string and they are ordered on the screen in the same order as they are added. Making multiple calls to AddParagraph() will continue to add additional paragraphs of text in order until the screen has been filled. The <a href=\\\"/docs/references/brightscript/components/roparagraphscreen.md\\\" title=\\\"roParagraphScreen\\\">roParagraphScreen</a> component handles all text formatting and justification. Spacing is automatically inserted between paragraphs for readability.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The paragraph to be added to the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addparagraphalignedtext-as-string-alignment-as-string-as-void\\\">AddParagraphAligned(text as String, alignment as String) as Void</h3>\\n<p>Adds a paragraph of text to the screen that is displayed according to the specified alignment.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>AddParagraphAligned</td>\\n<td>Void</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The paragraph to be added to the screen.</td>\\n</tr>\\n<tr>\\n<td>alignment</td>\\n<td>String</td>\\n<td>The alignment of the paragraph, which may be \\\"left\\\", \\\"center\\\", \\\"right\\\", or \\\"justify\\\" (default).  If an unrecognized alignment is specified, the behavior defaults to full-justified</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td>Paragraph can be added as String</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-boolean\\\">AddButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Adds a button to the screen. The buttons are displayed in a standard location on the screen and appear in the order added. When the button is pressed, the script will receive an event from the application containing the ID of the button pressed and allowing the script to perform the desired action for that case</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID used to uniquely identify the button instance.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added. </p>\\n<h3 id=\\\"addgraphicurl-as-string-displaymode-as-string-as-void\\\">AddGraphic(url as String, displayMode as String) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Adds a graphic image to the screen at the current cursor position and centers it. The current cursor position moves as headers, paragraphs, graphics and buttons are added to the screen. The graphic image is displayed unscaled.</p>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A boolean indicating whether the screen was successfully displayed.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Sets the title for the screen.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title for the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbtextlocation1-as-string-location2-as-string-as-void\\\">SetBreadcrumbText(location1 as String, location2 as String) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Specifies the text to be displayed for the title in breadcrumb format. </p>\\n<p>Breadcrumbs allow the application to display two strings at the far left of the overhang. Breadcrumbs are often used two indicate where in the navigation hierarchy the user is. If both location values are set, the application will display the title in breadcrumb format. </p>\\n<p>If only the first location is set, the application will display the specified text in the title area like the <a href=\\\"#settitletitle-as-string--as-void\\\">SetTitle()</a> method. </p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>location1</td>\\n<td>String</td>\\n<td>The text to be used for the first location.</td>\\n</tr>\\n<tr>\\n<td>location2</td>\\n<td>String</td>\\n<td>The text to be used for the second location.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdefaultmenuitemindex-as-integer-as-boolean\\\">SetDefaultMenuItem(index as Integer) as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Sets the button to be highlighted when the screen is initially displayed.   </p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the button to be highlighted by default. This is the zero-based position of the button in the list of buttons on the screen (not the button id passed to the <a href=\\\"#addbuttonid-as-integer-title-as-string--as-boolean\\\">AddButton()</a> method). The default is the first button (index 0).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the default menu item was successfully set. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifpath.md":"{\n  \"content\": \"<h1 id=\\\"ifpath\\\">ifPath</h1>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/ropath.md\\\" title=\\\"roPath\\\">roPath</a></td>\\n<td>The roPath component provides developers an easy way to create valid file system paths</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"changepath-as-string-as-boolean\\\">Change(path as String) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Modifies or changes the current path via the specified relative or absolute path.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Change</td>\\n<td>Boolean</td>\\n<td>${changeparamTable}</td>\\n<td>Returns true if the resulting path is valid, otherwise false</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>path</td>\\n<td>String</td>\\n<td>The new relative or absolute file system path to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the path was successfully changed. </p>\\n<h3 id=\\\"isvalid-as-boolean\\\">IsValid() as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Checks whether the current path is valid (the path is correctly formed). This does not check whether the file actually exists.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the current path is valid. </p>\\n<h3 id=\\\"split-as-object\\\">Split() as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> that contains the following keys: <table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>basename</td>\\n<td>String</td>\\n<td>The filename, without parent directories or extension.</td>\\n</tr>\\n<tr>\\n<td>extension</td>\\n<td>String</td>\\n<td>The filename, with extension, without parent directories.</td>\\n</tr>\\n<tr>\\n<td>filename</td>\\n<td>String</td>\\n<td>The filename.</td>\\n</tr>\\n<tr>\\n<td>parent</td>\\n<td>String</td>\\n<td>The parent directory, or empty if in a root directory.</td>\\n</tr>\\n<tr>\\n<td>phy</td>\\n<td>String</td>\\n<td>The PHY volume.</td>\\n</tr>\\n</tbody>\\n</table></p>\\n<h4 id=\\\"example-brightscript-debugger-interactive-shell\\\">Example (Brightscript Debugger Interactive Shell)</h4>\\n<pre><code>> mypath = CreateObject(\\\"roPath\\\", \\\"pkg:/source/appMain.brs\\\")\\n> ? myPath.Split()\\nparent: pkg:/source/\\nextension: .brs\\nphy: pkg:\\nbasename: appMain\\nfilename: appMain.brs\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifpinentrydialog.md":"{\n  \"content\": \"<h1 id=\\\"ifpinentrydialog\\\">ifPinEntryDialog</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"description\\\">Description</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/ropinentrydialog.md\\\" title=\\\"roPinEntryDialog\\\">roPinEntryDialog</a></td>\\n<td>The Pin Entry Dialog is designed to allow the user to enter a numeric PIN for purchasing content</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-void\\\">AddButton(id as Integer, title as String) as Void</h3>\\n<h4 id=\\\"descriptions\\\">Descriptions</h4>\\n<p>Adds a button to the pin entry dialog, with the specified title displayed on the button. The buttons are aligned at the bottom of the screen and appear in the order added. When a button is pressed, the script will receive an <a href=\\\"/docs/references/brightscript/events/ropinentrydialogevent.md\\\" title=\\\"roPinEntryDialogEvent\\\">roPinEntryDialogEvent</a> from the application indicating the ID of the button pressed.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID of the button to be added to the pin entry dialog.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The text to be displayed on the button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"pin-as-string\\\">Pin() as String</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Gets the user-entered PIN.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A string containing the PIN entered by the user.</p>\\n<h3 id=\\\"setnumpinentryfieldsnumfields-as-integer-as-void\\\">SetNumPinEntryFields(numFields as Integer) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Sets the maximum number of digits to be entered and displayed for the PIN.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>numFields</td>\\n<td>Integer</td>\\n<td>The maximum number of digits for the PIN.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-void\\\">Show() as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack</p>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the title for the pin entry dialog to the specified string.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The text to be displayed on the pin entry dialog.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"enablebackbuttonenablebackbutton-as-boolean-as-void\\\">EnableBackButton(enableBackButton as Boolean) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Enables the channel to receive an <a href=\\\"/docs/references/brightscript/events/ropinentrydialogevent.md#isscreenclosed-as-boolean\\\">isScreenClosed()</a> event when the back button is entered. By default the <a href=\\\"/docs/references/brightscript/components/ropinentrydialog.md\\\">PinEntryDialog</a> component will not send an <a href=\\\"/docs/references/brightscript/events/ropinentrydialogevent.md#isscreenclosed-as-boolean\\\">isScreenClosed()</a> event so that scripts that did not expect this event will not break</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enableBackButton</td>\\n<td>Boolean</td>\\n<td>Enables <a href=\\\"/docs/references/brightscript/events/ropinentrydialogevent.md#isscreenclosed-as-boolean\\\">isScreenClosed()</a> events to be sent when the back button is entered.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifposterscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifposterscreen\\\">ifPosterScreen</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roposterscreen.md\\\" title=\\\"roPosterScreen\\\">roPosterScreen</a></td>\\n<td>The Poster Screen provides a graphical display of poster art for content selection or can be used as a submenu to provide hierarchical structure to the application</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the title for the poster screen.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The text to be used as the title for the poster screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setcontentlistcontentlist-as-object-as-void\\\">SetContentList(contentList as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the list of content to be displayed by the screen. The screen is responsible for fetching the poster art from the URLs specified and all user navigation within the list.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArrays\\\">roAssociativeArrays</a> (<a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">Content Meta-Data</a> objects) representing the information for each title to be displayed on screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getcontentlist-as-object\\\">GetContentList() as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Gets the content metadata of each title displayed on the screen. This is the content metadata passed via the <a href=\\\"#setcontentlistcontentlist-as-object-as-void\\\">SetContentList()</a> method. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> containing content metadata. </p>\\n<h3 id=\\\"setlistnamesnames-as-object-as-void\\\">SetListNames(names as Object) as Void</h3>\\n<h4 id=\\\"descriptions\\\">Descriptions</h4>\\n<p>Sets the list of categories to be displayed in the filter banner at the top of the poster screen. </p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>names</td>\\n<td>Object</td>\\n<td>An array of Strings, where each String represents a new category to be displayed at the top. The display order is the same as the order of the categories in the array passed by the caller</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setliststylestyle-as-string-as-void\\\">SetListStyle(style as String) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the display style for the poster screen. Styles allow the poster screen to look differently for different types of content or different usage.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>SetListStyle</td>\\n<td>Void</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>style</td>\\n<td>String</td>\\n<td>Specifies how to display the poster art. This parameter may be set to one of the following values:<br /><ul>\\n<li>\\\"arced-portrait\\\" – arced list of poster art displayed in portrait (tall) style for DVD/Movie poster artwork. This is the default poster screen display format. Artwork sizes: SD=158x204; HD=214x306</li>\\n<li>\\\"arced-landscape\\\" - arced list of poster art displayed in landscape (wide) style for 4:3 aspect ratio TV artwork. Artwork sizes: SD=214x144; HD=290x218</li>\\n<li>\\\"arced-16x9\\\" – arced list of poster art displayed in 16x9 aspect ratio. Artwork sizes: SD=285x145; HD=385x218</li>\\n<li>\\\"arced-square\\\" – Arced list of poster art displayed in a square frame style. Artwork sizes: SD = 223x200; HD = 300x300 Note: is non-square NTSC pixel aspect ratio images</li>\\n<li>\\\"flat-category\\\" – flat (non-arced) list of categories. This is generally used for the providers top level menu screen. Artwork sizes are: SD=224x158; HD=304x237</li>\\n<li>\\\"flat-episodic\\\" – flat (non-arced) list of episodes for series content such as a TV show. Artwork sizes: SD=166x112; HD=224x168</li>\\n<li>\\\"rounded-rect-16x9-generic\\\" – 16x9 poster style. Artwork Sizes SD=177x90; HD=269x152</li>\\n<li>\\\"flat-episodic-16x9\\\" – flat (non-arced) list of episodes for series content such as a TV show. Artwork sizes: SD=185x94; HD=250x141</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td>The following is the list of valid screen styles:</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlistdisplaymodedisplaymode-as-string-as-void\\\">SetListDisplayMode(displayMode as String) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the mode for displaying images in the poster screen. This allows images to be either scaled to completely fill the poster frame (scale-to-fill) or scaled to fit inside the poster frame (scale-to-fit) while maintaining aspect ratio</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>displayMode</td>\\n<td>String</td>\\n<td>Specifies the mode used to display images on the poster screen, which may be one of the following values: <ul>\\n<li>scale-to-fill – scale image to completely fill the rectangle of the bounding frame (Default)</li>\\n<li>scale-to-fit – scale image to fit horizontally or vertically as appropriate while still maintaining aspect ratio. Note that scale-to-fit may result in pillar-box or letter-box display of images.</li>\\n<li>zoom-to-fill – scales and crops image to maintain aspect ratio and completely fill the rectangle of the bounding frame.</li>\\n<li>photo-fit – Uses several methods to fit the image with a different aspect ratio to the screen. First, it will asymmetrically scale up to a maximum of 5%. Second, for landscape images, if vertical cropping is necessary, it will remove two lines off the bottom for every one line off the top up to a maximum of 30% of the image. For all images, if horizontal cropping is necessary it will crop an equal amount from both sides.</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setfocusedlistitemindex-as-integer-as-void\\\">SetFocusedList(itemIndex as Integer) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>The item the in filter banner to be given focus. The selected item is displayed in the center of the filter banner, and it is highlighted to denote that it has focus.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>itemIndex</td>\\n<td>Integer</td>\\n<td>The zero-based index of the item to obtain focus.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setfocusedlistitemitemindex-as-integer-as-void\\\">SetFocusedListItem(itemIndex as Integer) as Void</h3>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<p>The item in the poster list to be selected. The selected item is displayed in the center of the screen, and it is bordered to denote that it has focus</p>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>itemIndex</td>\\n<td>Integer</td>\\n<td>The zero-based index of the item to obtain focus.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbtextlocation1-as-string-location2-as-string-as-void\\\">SetBreadcrumbText(location1 as String, location2 as String) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Specifies the text to be displayed for the title in breadcrumb format. </p>\\n<p>Breadcrumbs allow the application to display two strings at the far left of the overhang. Breadcrumbs are often used two indicate where in the navigation hierarchy the user is. If both location values are set, the application will display the title in breadcrumb format. </p>\\n<p>If only the first location is set, the application will display the specified text in the title area like the <a href=\\\"#settitletitle-as-string-as-void\\\">SetTitle()</a> method. </p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>location1</td>\\n<td>String</td>\\n<td>The text to be used for the first location.</td>\\n</tr>\\n<tr>\\n<td>location2</td>\\n<td>String</td>\\n<td>The text to be used for the second location.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbenabledenable-as-boolean-as-void\\\">SetBreadcrumbEnabled(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Shows or hides the breadcrumb text in the title area.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether the breadcrumb text is to be displayed on the poster screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"showmessagemessage-as-string-as-void\\\">ShowMessage(message as String) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Displays a semi-transparent popup message box to the user in the center of the screen over the poster screen. Generally, this is used for error messages.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>message</td>\\n<td>String</td>\\n<td>The text to be displayed in the popup message box.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearmessage-as-void\\\">ClearMessage() as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Clears the message from the previous <a href=\\\"/docs/references/brightscript/interfaces/ifposterscreen.md#showmessagemessage-as-string-as-void\\\">ShowMessage()</a> method call.</p>\\n<h3 id=\\\"setadurlsdadurl-as-string-hdadurl-as-string-as-void\\\">SetAdURL(sdAdURL as String, hdAdURL as String) as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Sets the URL of the banner ad image to be displayed on the poster screen. This is currently only valid for the \\\"arced-landscape\\\" and \\\"flat-category\\\" style of poster screens.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sdAdURL</td>\\n<td>String</td>\\n<td>The URL of the standard definition banner ad image (540x60) to be displayed.</td>\\n</tr>\\n<tr>\\n<td>hdAdURL</td>\\n<td>String</td>\\n<td>The URL of the high definition banner ad image (728x90) to be displayed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setadselectableisselectable-as-boolean-as-void\\\">SetAdSelectable(isSelectable as Boolean) as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Enables the banner ad to be selectable. When selected, the screen will receive an <a href=\\\"/docs/references/brightscript/events/roposterscreenevent.md\\\">roPosterScreenEvent</a> and the msg will return true for <a href=\\\"/docs/references/brightscript/events/roposterscreenevent.md#isadselected-as-boolean\\\">isAdSelected()</a>.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>isSelectable</td>\\n<td>Boolean</td>\\n<td>A flag specifying if the user can navigate and move focus to the banner image (true) or if the banner ad is not selectable (false).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setaddisplaymodedisplaymode-as-string-as-void\\\">SetAdDisplayMode(displayMode as String) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Sets the scale mode for displaying ad images on the poster screen. The ad display is only available on \\\"arced-landscape\\\" and \\\"flat-category\\\" list styles.</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<h3 id=\\\"setloadingpostersdposterurl-as-string-hdposterurl-as-string-as-void\\\">SetLoadingPoster(sdPosterUrl as String, hdPosterUrl as String) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Specifies the default images to be shown in the poster screen while the poster screen content is loading</p>\\n<h4 id=\\\"parameters-13\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sdAdURL</td>\\n<td>String</td>\\n<td>The URL of the standard definition banner ad image (540x60) to be displayed.</td>\\n</tr>\\n<tr>\\n<td>hdAdURL</td>\\n<td>String</td>\\n<td>The URL of the high definition banner ad image (728x90) to be displayed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Displays or refreshes the screen after initial creation or state changes.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A boolean indicating whether the screen was successfully displayed.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack</p>\\n<h3 id=\\\"setfocustofilterbannerenable-as-boolean-as-void\\\">SetFocusToFilterBanner(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Sets the focus to the filter banner.</p>\\n<h4 id=\\\"parameters-14\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether the filter banner is to obtain focus.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifprogramguide.md":"{\n  \"content\": \"<h1 id=\\\"ifprogramguide\\\">ifProgramGuide</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/interfaces/roprogramguide.md\\\">roProgramGuide</a></td>\\n<td>Represents Electronic Program Guide (EPG) information from the tuner.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getchannelsid-as-integer-as-object\\\">GetChannels(id as Integer) as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the list of logical channel numbers on which the given program ID can be found.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The program ID containing the channels to be returned.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getnownextprogramschannel-as-string-as-dynamic\\\">GetNowNextPrograms(channel as String) as Dynamic</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns details about the current and next program on a channel. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>channel</td>\\n<td>String</td>\\n<td>The channel number for which programs are to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An roAssociativeArray containing two roArray components: one for the current program and another for the next program on the channel. Each roArray contains the following key/value pairs detailing the program:   </p>\\n<table>\\n<thead>\\n<tr>\\n<th><strong>Key</strong></th>\\n<th><strong>Type</strong></th>\\n<th><strong>Value</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>Descriptive name for the program.</td>\\n</tr>\\n<tr>\\n<td>id</td>\\n<td>String</td>\\n<td>ID for the program, not guaranteed to be unique,   suitable for passing to GetChannels.</td>\\n</tr>\\n<tr>\\n<td>description</td>\\n<td>String</td>\\n<td>Longer description for the program.</td>\\n</tr>\\n<tr>\\n<td>category</td>\\n<td>String</td>\\n<td>Genre of the program, such as Drama, Sport, and so forth.</td>\\n</tr>\\n<tr>\\n<td>start_time</td>\\n<td>roDateTime</td>\\n<td>Starting time of this program.</td>\\n</tr>\\n<tr>\\n<td>duration</td>\\n<td>Integer</td>\\n<td>Length of this program in seconds.</td>\\n</tr>\\n<tr>\\n<td>subtitles</td>\\n<td>String</td>\\n<td>(Optional) If present indicates this program has subtitles.</td>\\n</tr>\\n<tr>\\n<td>format</td>\\n<td>roAssociativeArray</td>\\n<td>Indicates the media format, with the following keys, all of which are optional. The value for each key is the Boolean string   \\\"true\\\" to indicate the format option.</td>\\n</tr>\\n<tr>\\n<td>Rating</td>\\n<td>roAssociativeArray</td>\\n<td>(Optional) Rating and parental guidance information.</td>\\n</tr>\\n<tr>\\n<td>link</td>\\n<td>roAssociativeArray</td>\\n<td>(Optional) Links to other related programs.</td>\\n</tr>\\n<tr>\\n<td>content_metadata</td>\\n<td>Content Meta­ Data  object</td>\\n<td>Name, description, start_time, duration and format of   this program.</td>\\n</tr>\\n<tr>\\n<td>Rating Region UK DTT</td>\\n<td>String</td>\\n<td><strong>UK digital terrestrial TV only</strong><br /><br />(Optional) A JSON object encoded as string representing viewer guidance type and description.</td>\\n</tr>\\n<tr>\\n<td>Link HD   simulcast</td>\\n<td>String</td>\\n<td><strong>UK digital terrestrial TV only**</strong><br /><br />(Optional) A JSON object encoded as string representing a list of other service_id and event_id pairs   on which this program is simultaneously broadcast in HD.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getversion-as-integer\\\">GetVersion() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns an integer which is incremented each time the underlying data in the guide changes.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The version number of the program guide.</p>\\n<h3 id=\\\"getprogramsstarttime-as-rodatetime-channel-as-string-endtime-as-rodatetime-as-object\\\">GetPrograms(startTime as roDateTime, channel as String, endTime as roDateTime) as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the programs falling within the given time range. </p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>startTime</td>\\n<td>roDateTime</td>\\n<td>The start time programs must fall within to be retrieved.</td>\\n</tr>\\n<tr>\\n<td>channel</td>\\n<td>String</td>\\n<td>The channel number for which programs are to be retrieved.</td>\\n</tr>\\n<tr>\\n<td>endTime</td>\\n<td>roDateTime</td>\\n<td>The end time programs must fall within to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An roArray of programs falling within the given time range (returns invalid if the given channel is unknown). Each entry in the array contains an roAssociativeArray containing the following details of a program: </p>\\n<table>\\n<thead>\\n<tr>\\n<th><strong>Key</strong></th>\\n<th><strong>Type</strong></th>\\n<th><strong>Value</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>Descriptive name for the program.</td>\\n</tr>\\n<tr>\\n<td>id</td>\\n<td>String</td>\\n<td>ID for the program, not guaranteed to be unique,   suitable for passing to GetChannels.</td>\\n</tr>\\n<tr>\\n<td>description</td>\\n<td>String</td>\\n<td>Longer description for the program.</td>\\n</tr>\\n<tr>\\n<td>category</td>\\n<td>String</td>\\n<td>Genre of the program, such as Drama, Sport, and so forth.</td>\\n</tr>\\n<tr>\\n<td>start_time</td>\\n<td>roDateTime</td>\\n<td>Starting time of this program.</td>\\n</tr>\\n<tr>\\n<td>duration</td>\\n<td>Integer</td>\\n<td>Length of this program in seconds.</td>\\n</tr>\\n<tr>\\n<td>subtitles</td>\\n<td>String</td>\\n<td>(Optional) If present indicates this program has subtitles.</td>\\n</tr>\\n<tr>\\n<td>format</td>\\n<td>roAssociativeArray</td>\\n<td>Indicates the media format, with the following keys, all of which are optional. The value for each key is the Boolean string   \\\"true\\\" to indicate the format option.</td>\\n</tr>\\n<tr>\\n<td>Rating</td>\\n<td>roAssociativeArray</td>\\n<td>(Optional) Rating and parental guidance information.</td>\\n</tr>\\n<tr>\\n<td>link</td>\\n<td>roAssociativeArray</td>\\n<td>(Optional) Links to other related programs.</td>\\n</tr>\\n<tr>\\n<td>content_metadata</td>\\n<td>Content Meta­ Data  object</td>\\n<td>Name, description, start_time, duration and format of   this program.</td>\\n</tr>\\n<tr>\\n<td>Rating Region UK DTT</td>\\n<td>String</td>\\n<td><strong>UK digital terrestrial TV only</strong><br /><br />(Optional) A JSON object encoded as string representing viewer guidance type and description.</td>\\n</tr>\\n<tr>\\n<td>Link HD   simulcast</td>\\n<td>String</td>\\n<td><strong>UK digital terrestrial TV only**</strong><br /><br />(Optional) A JSON object encoded as string representing a list of other service_id and event_id pairs   on which this program is simultaneously broadcast in HD.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifregex.md":"{\n  \"content\": \"<h1 id=\\\"ifregex\\\">ifRegex</h1>\\n<blockquote>\\n<p>See the PCRE documentation (<a href=\\\"http://www.pcre.org/\\\">http://www.pcre.org/</a>) for documentation on the PCRE library used for regular expression matching.  See the <a href=\\\"http://perldoc.perl.org/perlre.html\\\" title=\\\"Perlre main page\\\">Perlre main page</a> for complete documentation of the possible regular expressions this library can parse and match. In general, most Perl compatible regular expressions are supported.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roregex.md\\\" title=\\\"roRegex\\\">roRegex</a></td>\\n<td>The roRegex component provides the powerful regular expression processing of the PCRE library to Brightscript strings</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"ismatchstr-as-string-as-boolean\\\">IsMatch(str as String) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Checks if a string matches the matching pattern.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>str</td>\\n<td>String</td>\\n<td>The string to be checked.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the string matches the matching pattern.</p>\\n<h3 id=\\\"matchstr-as-string-as-object\\\">Match(str as String) as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>If the matching pattern contains N parenthetical substrings, the relevant substrings are returned as an array of length N+1, where array[0] is again the entire match and each additional entry in the array is the match for the corresponding parenthetical expression. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>str</td>\\n<td>String</td>\\n<td>The string to be searched for matching substrings.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An roArray of matched substrings from str. If no match was made, an empty array is returned. If a match was made, the entire match is returned in array[0]. If there are no parenthetical substrings this is the only entry in the array</p>\\n<h4 id=\\\"example-from-brightscript-debugger-interactive-shell\\\">Example (from Brightscript Debugger Interactive Shell)</h4>\\n<pre><code> r = CreateObject(\\\"roRegex\\\", \\\"(a|(z))(bc)\\\",\\\"\\\")\\n ? r.Match(\\\"abcd\\\")\\n abc\\n a \\n\\n bc\\n</code></pre>\\n<h3 id=\\\"matchallstr-as-string-as-object\\\">MatchAll(str as String) as Object</h3>\\n<p><strong>Available since Roku OS 8.1</strong></p>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns all matches of the specific regular expression pattern in the target string.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>str</td>\\n<td>String</td>\\n<td>The string to be searched for matching substrings.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An roArray where the first element is the full matched string and if there are any capture groups those are returned in subsequent array elements</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>  r = CreateObject(\\\"roRegex\\\", \\\"\\\\d+\\\", \\\"\\\")\\n  arr = r.MatchAll(\\\"123 456 789\\\")\\n  print FormatJSON(arr)\\n\\n [[\\\"123\\\"],[\\\"456\\\"],[\\\"789\\\"]]\\n</code></pre>\\n<h3 id=\\\"replacestr-as-string-replacement-as-string-as-string\\\">Replace(str as String, replacement as String) as String</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Replaces the first occurrence of a matching pattern in str with replacement and returns the result. The replacement may contain numbered back-references to parenthetical substrings.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>str</td>\\n<td>String</td>\\n<td>The string to be searched.</td>\\n</tr>\\n<tr>\\n<td>replacement</td>\\n<td>String</td>\\n<td>The string to be used to replace matches in source string.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"example-from-brightscript-debugger-interactive-shell-1\\\">Example (from Brightscript Debugger Interactive Shell)</h4>\\n<pre><code> r = CreateObject(\\\"roRegex\\\", \\\"(\\\\d+)\\\\s+(\\\\w+)\\\", \\\"\\\")\\n ? r.Replace(\\\"123 abc\\\", \\\"word:\\\\2 number:\\\\1\\\")\\n word:abc number:123\\n</code></pre>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A string with the result of the replace operation. </p>\\n<h3 id=\\\"replaceallstr-as-string-replacement-as-string-as-string\\\">ReplaceAll(str as String, replacement as String) as String</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Replaces all occurrences of a matching pattern in str with replacement and returns the result. The replacement may contain numbered back-references to parenthetical substrings.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>str</td>\\n<td>String</td>\\n<td>The string to be searched.</td>\\n</tr>\\n<tr>\\n<td>replacement</td>\\n<td>String</td>\\n<td>The string to be used to replace matches in source string.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A string with the result of the replace all operation. </p>\\n<h4 id=\\\"example-from-brightscript-debugger-interactive-shell-2\\\">Example (from Brightscript Debugger Interactive Shell)</h4>\\n<pre><code>  r = CreateObject(\\\"roRegex\\\", \\\"a\\\", \\\"i\\\")\\n  ? r.ReplaceAll(\\\"Abracadabra\\\", \\\"x\\\")\\n xbrxcxdxbrx\\n\\n  r = CreateObject(\\\"roRegex\\\", \\\"a\\\", \\\"\\\")\\n  ? r.ReplaceAll(\\\"Abracadabra\\\", \\\"x\\\")\\n Abrxcxdxbrx\\n</code></pre>\\n<h3 id=\\\"splitstr-as-string-as-object\\\">Split(str as String) as Object</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Uses the matching pattern as a separator and splits the string on the separator boundaries.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>str</td>\\n<td>String</td>\\n<td>The string to be split.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>An roList of substrings of str that were separated by strings which match the pattern in the CreateObject call. The separator strings are not returned. If no matches were found, the returned list contains a single item with the string unchanged.</p>\\n<p><strong>Examples from Brightscript Debugger Interactive Shell</strong></p>\\n<pre><code> r = CreateObject(\\\"roRegex\\\", \\\",\\\", \\\"\\\") ' split on comma\\n ? r.Split(\\\"first, second, third and fourth\\\")\\n first\\n  second\\n  third and fourth\\n r = CreateObject(\\\"roRegex\\\", \\\"/+\\\", \\\"\\\") ' split on one or more slashes\\n ? r.Split(\\\"example.com/images///2012/cat.jpg\\\")\\n  example.com\\n  images\\n  2012\\n  cat.jpg\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifregion.md":"{\n  \"content\": \"<h1 id=\\\"ifregion\\\">ifRegion</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a></td>\\n<td>The roRegion component is used to represent a subsection of a bitmap</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getbitmap-as-object\\\">GetBitmap() as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the roBitmap object of the bitmap to which this region refers. A region is always a section of a bitmap.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An roBitmap object of the bitmap. </p>\\n<h3 id=\\\"getx-as-integer\\\">GetX() as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the x coordinate of the region in its bitmap.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The x coordinate value</p>\\n<h3 id=\\\"gety-as-integer\\\">GetY() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the y coordinate of the region in its bitmap.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The y coordinate value</p>\\n<h3 id=\\\"getwidth-as-integer\\\">GetWidth() as Integer</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the width of the region.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The width of the region.</p>\\n<h3 id=\\\"getheight-as-integer\\\">GetHeight() as Integer</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the height of the region.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The height of the region.</p>\\n<h3 id=\\\"offsetx-as-dynamic-y-as-dynamic-w-as-dynamic-h-as-dynamic-as-void\\\">Offset(x as Dynamic, y as Dynamic, w as Dynamic, h as Dynamic) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Adds the passed parameters x,y, w, and h to the values of those roRegion fields. Respects the wrap setting when adjusting the fields by the offsets.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Dynamic</td>\\n<td>The x-coordinate of the region.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Dynamic</td>\\n<td>The y-coordinate of the region.</td>\\n</tr>\\n<tr>\\n<td>w</td>\\n<td>Dynamic</td>\\n<td>The width of the region.</td>\\n</tr>\\n<tr>\\n<td>h</td>\\n<td>Dynamic</td>\\n<td>The height of the region.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setsrcregion-as-object-as-void\\\">Set(srcRegion as Object) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Initializes the fields of this region to be the same as the values of the fields in the srcRegion.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>srcRegion</td>\\n<td>Object</td>\\n<td>An roRegion object.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"copy-as-object\\\">Copy() as Object</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns a newly created copy of the region as a new <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a> object.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>An roRegion Object.</p>\\n<h3 id=\\\"setwrapwrap-as-boolean-as-void\\\">SetWrap(wrap as Boolean) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Wraps any part of a region that extends beyond the bounds of its bitmap to the other side of the bitmap and renders it there.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>wrap</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether wrapping of the region is enabled. If this flag is set to false, the part of the region beyond the bounds of its bitmap is not rendered.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getwrap-as-boolean\\\">GetWrap() as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns if the region can be wrapped.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<p>A flag indicating whether wrapping of the region is enabled. </p>\\n<h3 id=\\\"settimetime-as-integer-as-void\\\">SetTime(time as Integer) as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets the duration of each frame of any animated sprite that uses this region.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<p>A flag indicating whether wrapping of region is enabled. </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>time</td>\\n<td>Integer</td>\\n<td>The \\\"frame hold time\\\" in milliseconds.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"gettime-as-integer\\\">GetTime() as Integer</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>GetTime</td>\\n<td>Integer</td>\\n<td>Milliseconds - Integer</td>\\n<td>Returns the \\\"frame hold time\\\" in milliseconds</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setpretranslationx-as-integer-y-as-integer-as-void\\\">SetPretranslation(x as Integer, y as Integer) as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Sets the pre-translation for DrawObject, DrawRotatedObject, and DrawScaledObject.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The pre-translation x-value.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The pre-translation y-value.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getpretranslationx-as-integer\\\">GetPretranslationX() as Integer</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Returns the pre-translation x value. </p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The pre-translation x value.</p>\\n<h3 id=\\\"getpretranslationy-as-integer\\\">GetPretranslationY() as Integer</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Returns the pre-translation y value. </p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The pre-translation y value.</p>\\n<h3 id=\\\"setscalemodemode-as-integer-as-void\\\">SetScaleMode(mode as Integer) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Sets the scaling mode used for DrawScaledObject.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>mode</td>\\n<td>Integer</td>\\n<td>The scaling mode, which may be one of the following values: <ul>\\n<li>0 = fast scaling operation (may have jaggies)</li>\\n<li>1 = smooth scaling operation (may be slow)</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getscalemode-as-integer\\\">GetScaleMode() as Integer</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Returns the scaling mode.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>The scaling mode, which may be one of the following values:</p>\\n<ul>\\n<li>0 = fast scaling operation (may have jaggies)</li>\\n<li>1 = smooth scaling operation (may be slow)</li>\\n</ul>\\n<h3 id=\\\"setcollisiontypecollisiontype-as-integer-as-void\\\">SetCollisionType(collisiontype as Integer) as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Sets the type of region to be used for collision tests with this sprite.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>collisiontype</td>\\n<td>Integer</td>\\n<td>The collision type, which may be one of the following values: <ul>\\n<li>Type 0– Use the entire defined region of the sprite. Type 0 is the default</li>\\n<li>Type 1 – Use the defined rectangular region specified by the SetCollisionRectangle() method</li>\\n<li>Type 2 – Use a circular region specified by the SetCollisionCircle() method</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getcollisiontype-as-integer\\\">GetCollisionType() as Integer</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Returns the collision type.</p>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>The collision type, which may be one of the following values:</p>\\n<ul>\\n<li>Type 0– Use the entire defined region of the sprite. Type 0 is the default</li>\\n<li>Type 1 – Use the defined rectangular region specified by the SetCollisionRectangle() method</li>\\n<li>Type 2 – Use a circular region specified by the SetCollisionCircle() method</li>\\n</ul>\\n<h3 id=\\\"setcollisionrectanglexoffset-as-integer-yoffset-as-integer-width-as-integer-height-as-integer-as-void\\\">SetCollisionRectangle(xOffset as Integer, yOffset as Integer, width as Integer, height as Integer) as Void</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Sets the collision rectangle used for type-1 collision tests. The upper left corner of the rectangle is the (x,y) position of the sprite plus the specified offsets. The width and height specify the size of the rectangle.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>xOffset</td>\\n<td>Integer</td>\\n<td>The  offset for the x position of the sprite.</td>\\n</tr>\\n<tr>\\n<td>yOffset</td>\\n<td>Integer</td>\\n<td>The  offset for the y position of the sprite.</td>\\n</tr>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The width of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The height of the rectangle.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setcollisioncirclexoffset-as-integer-yoffset-as-integer-radius-as-integer-as-void\\\">SetCollisionCircle(xOffset as Integer, yOffset as Integer, Radius as Integer) as Void</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Sets the collision circle used for type-2 collision tests. The center of the circle is the  (x,y) position of the sprite plus the specified offsets. The radius specifies the size of the circle.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>xOffset</td>\\n<td>Integer</td>\\n<td>The  offset for the x position of the sprite.</td>\\n</tr>\\n<tr>\\n<td>yOffset</td>\\n<td>Integer</td>\\n<td>The  offset for the y position of the sprite.</td>\\n</tr>\\n<tr>\\n<td>Radius</td>\\n<td>Integer</td>\\n<td>The size of the circle.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifregistry.md":"{\n  \"content\": \"<h1 id=\\\"ifregistry\\\">ifRegistry</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roregistry.md\\\" title=\\\"roRegistry\\\">roRegistry</a></td>\\n<td>The Registry is an area of non-volatile storage where a small number of persistent settings can be stored</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getspaceavailable-as-integer\\\">GetSpaceAvailable() as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the number of bytes available in the channel application's device registry (16K minus current file size). This function can be used, for example, to check the remaining space and remove older entries before writing newer ones. The following code demonstrates how to do this:</p>\\n<pre><code>registry = CreateObject(\\\"roRegistry\\\")\\nbuffer = 512 ' arbitrary limit based on the channel application\\nif (registry.GetSpaceAvailable() &#x3C; buffer)\\n' remove some old registry entries before writing new ones\\nend if\\n</code></pre>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An integer representing the the number of bytes available in the device registry.</p>\\n<h3 id=\\\"getsectionlist-as-object\\\">GetSectionList() as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the registry sections on the device. </p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An roList with one entry for each registry section. Each registry section is an roString containing the name of the section. The section itself can be accessed by creating an <a href=\\\"/docs/references/brightscript/components/roregistrysection.md\\\" title=\\\"roRegistrySection\\\">roRegistrySection</a> object using that name.</p>\\n<h3 id=\\\"deletesection-as-string-as-boolean\\\">Delete(section as String) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Deletes the specified registry section.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>section</td>\\n<td>String</td>\\n<td>The registry section to be deleted.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p> A flag indicating whether the registry section was successfully deleted.</p>\\n<h3 id=\\\"flush-as-boolean\\\">Flush() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Flushes the contents of the registry out to persistent storage in order to permanently store a token or other setting on the device.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the registry was successfully flushed.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifregistrysection.md":"{\n  \"content\": \"<h1 id=\\\"ifregistrysection\\\">ifRegistrySection</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roregistrysection.md\\\" title=\\\"roRegistrySection\\\">roRegistrySection</a></td>\\n<td>A Registry Section enables the organization of settings within the registry</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"readkey-as-string-as-string\\\">Read(key as String) as String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Reads and returns the value of the specified key.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key name to be read.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The value of the key.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Read</td>\\n<td>String</td>\\n<td>${readparamTable}</td>\\n<td>Value of the key - String</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"readmultikeysarray-as-object-as-object\\\">ReadMulti(keysArray as Object) as Object</h3>\\n<p><em>Available since Roku OS 8.0</em></p>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Reads multiple values from the registry. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>keysArray</td>\\n<td>Object</td>\\n<td>An array of strings containing the key names to be read.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An associative array containing the keys and corresponding values read from the registry.</p>\\n<h3 id=\\\"writekey-as-string-value-as-string-as-boolean\\\">Write(key as String, value as String) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Replaces the value of the specified key. Does not guarantee a commit to non-volatile storage until an explicit <a href=\\\"#flush-as-boolean\\\">Flush()</a> is done.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The name of the key to be updated.</td>\\n</tr>\\n<tr>\\n<td>value</td>\\n<td>String</td>\\n<td>The updated value to be written to the specified key.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the value of the key was successfully updated. </p>\\n<h3 id=\\\"writemultiroassociativearray-as-object-as-boolean\\\">WriteMulti(roAssociativeArray as Object) as Boolean</h3>\\n<p><em>Available since Roku OS 8.0</em></p>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Writes multiple values to the registry. </p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>roAssociativeArray</td>\\n<td>Object</td>\\n<td>An associative array with key-value pairs to be updated.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the values were successfully updated. </p>\\n<h3 id=\\\"deletekey-as-string-as-boolean\\\">Delete(key as String) as Boolean</h3>\\n<p>Deletes the specified key.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key to be deleted.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the key was successfully deleted. </p>\\n<h3 id=\\\"existskey-as-string-as-boolean\\\">Exists(key as String) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Checks if the specified key resides in the registry.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>key</td>\\n<td>String</td>\\n<td>The key to be checked.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the key is in the registry. </p>\\n<h3 id=\\\"flush-as-boolean\\\">Flush() as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Flushes the contents of the registry out to persistent storage in order to permanently store a token or other setting on the device. Developers should explicitly this method after performing a write or series of writes. This method is transactional and all writes between calls to it are atomic.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the registry was successfully flushed. </p>\\n<h3 id=\\\"getkeylist-as-object\\\">GetKeyList() as Object</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Gets a list of the keys in the registry.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>An roList containing one entry per registry key in this section.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsgscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifsgscreen\\\">ifSGScreen</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGScreen\\\">roSGScreen</a></td>\\n<td>The roSGScreen object is a SceneGraph canvas that displays the contents of a SceneGraph Scene node tree</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setmessageportport-as-romessageport-as-void\\\">SetMessagePort(port as roMessagePort) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Specifies the roMessagePort object for the roSGScreen object</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>port</td>\\n<td>roMessagePort</td>\\n<td>The roMessagePort to be used for the SceneGraph scene.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getmessageport-as-romessageport\\\">GetMessagePort() as roMessagePort</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the roMessagePort object for the SceneGraph scene.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The roMessagePort object.</p>\\n<h3 id=\\\"getglobalnode-as-rosgnode\\\">getGlobalNode() as roSGNode</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns a global reference object for the SceneGraph application.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A global reference object.</p>\\n<h4 id=\\\"example-starting-scene-graph-applications\\\">Example: Starting Scene Graph Applications</h4>\\n<pre><code>sub showChannelSGScreen()\\n  print \\\"in showChannelSGScreen\\\"\\n  screen = CreateObject(\\\"roSGScreen\\\")\\n  m.port = CreateObject(\\\"roMessagePort\\\")\\n  screen.setMessagePort(m.port)\\n  m.global = screen.getGlobalNode()\\n  m.global.id = \\\"GlobalNode\\\"\\n  m.global.addFields( {red: &#x26;hff0000ff, green: &#x26;h00ff00ff, blue: &#x26;h0000ffff} )\\n  scene = screen.CreateScene(\\\"TrivialScene\\\")\\n  screen.show()\\n  scene.setFocus(true)\\n\\n  child = createObject(\\\"RoSGNode\\\",\\\"ContentNode\\\")\\n  child.contentkey = \\\"test_string\\\"\\n  print \\\"child: '\\\"; child.contentkey; \\\"'\\\"\\n\\n  while(true)\\n    msg = wait(0, m.port)\\n    msgType = type(msg)\\n    if msgType = \\\"roSGScreenEvent\\\"\\n      if msg.isScreenClosed() then return\\n    end if\\n  end while\\n\\nend sub\\n</code></pre>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Renders the SceneGraph scene defined by the roSGScreen object on the display screen.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the screen is displayed. </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Removes the SceneGraph scene from the display screen.</p>\\n<h3 id=\\\"createscenescenetype-as-string-as-object\\\">CreateScene(sceneType as String) as Object</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Creates the SceneGraph scene object based on the specified sceneType object.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sceneType</td>\\n<td>String</td>\\n<td>The sceneType object to be used to create the scene object.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The roSGScene object associated with the screen.</p>\\n<h3 id=\\\"getscene-as-rosgnode\\\">GetScene() as roSGNode</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>The roSGScene object associated with the screen.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>Typically, the scene created in main.brs by a roSGScreen.CreateScene() call.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifrsa.md":"{\n  \"content\": \"<h1 id=\\\"ifrsa\\\">ifRSA</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rorsa.md\\\" title=\\\"roRSA\\\">roRSA</a></td>\\n<td>The RSA component provides an interface to the OpenSSL RSA library of signing algorithms</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setprivatekeykeyfilename-as-string-as-integer\\\">SetPrivateKey(keyFileName as String) as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Specifies the private key to use for signing. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>keyFileName</td>\\n<td>String</td>\\n<td>Specifies the private key to be used for signing. The file name should specify a path, either in the package or a temp path.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<ul>\\n<li>1 = The key is valid.</li>\\n<li>0 = The file does not contain a valid key.</li>\\n<li>-1 = The file was not found.</li>\\n</ul>\\n<h3 id=\\\"setpublickeykeyfilename-as-string-as-integer\\\">SetPublicKey(keyFileName as String) as Integer</h3>\\n<p>Specifies the public key to be used for verification. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>keyFileName</td>\\n<td>String</td>\\n<td>Specifies the public key to be used for signing. The file name should specify a path, either in the package or a temp path.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<ul>\\n<li>1 = The key is valid.</li>\\n<li>0 = The file does not contain a valid key.</li>\\n<li>-1 = The file was not found.</li>\\n</ul>\\n<h3 id=\\\"setdigestalgorithmdigestalgorithm-as-string-as-boolean\\\">SetDigestAlgorithm(digestAlgorithm as String) as Boolean</h3>\\n<p>Specifies the digest algorithm to use for signing and verification. </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>digestAlgorithm</td>\\n<td>String</td>\\n<td>An openssl string with the digest to be used. Common digest algorithms are \\\"sha1\\\", \\\"ripemd160\\\", and \\\"md5\\\".</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the algorithm was successfully set (true) or the string was not recognized (false).</p>\\n<h3 id=\\\"signdigest-as-object-as-object\\\">Sign(digest as Object) as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Generates a signature based on the specified digest.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>digest</td>\\n<td>roByteArray Object</td>\\n<td>The roByteArray to be signed. Errors will be printed in the BrightScript console. If the digest algorithm is not set (using SetDigestAlgorithm) before calling Sign(), the digest is not encapsulated. This would be equivalent to simply calling the openssl function RSA_private_encrypt()</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>An roByteArray containing the signature, or invalid if an error occurred. Typical values include the following: </p>\\n<ul>\\n<li>digest is empty</li>\\n<li>SetPrivateKey() was not yet called</li>\\n<li>out of memory</li>\\n<li>the digest could not be signed</li>\\n</ul>\\n<h3 id=\\\"verifydigest-as-object-signature-as-object-as-integer\\\">Verify(digest as Object, signature as Object) as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Verifies the given digest and signature. Both digest and signature should be roByteArrays. If the digest algorithm is not set (using the <a href=\\\"#setdigestalgorithmdigestalgorithm-as-string-as-boolean\\\">SetDigestAlgorithm</a> method) before calling Verify(), the digest associated with the signature is not expected to be encapsulated. This would be equivalent to simply calling the openssl function RSA_public_decrypt(signature) and then comparing the result with the digest</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>digest</td>\\n<td>roByteArray Object</td>\\n<td>The digest to be verified.</td>\\n</tr>\\n<tr>\\n<td>signature</td>\\n<td>roByteArray Object</td>\\n<td>The signature to be verified.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>Indicates the result of the validation. This may be one of the following values:</p>\\n<ul>\\n<li>1 = The signature matches.</li>\\n<li>-1 = The SetPublicKey() method was not yet called.</li>\\n<li>-2 = The digest is empty.</li>\\n<li>-3 = There is not enough memory.</li>\\n<li>0 = The signature does not match.</li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifscreen\\\">ifScreen</h1>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roscreen.md\\\" title=\\\"roScreen\\\">roScreen</a></td>\\n<td>The roScreen component provides a full screen drawing surface that can be stacked and that you can receive input events from</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"swapbuffers-as-void\\\">SwapBuffers() as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>This function first operates the same as a call to <a href=\\\"/docs/references/brightscript/interfaces/ifdraw2d.md\\\" title=\\\"ifDraw2D\\\">ifDraw2D</a>, completing all queued drawing operations on the back buffer (draw surface).</p>\\n<p>The new back buffer should be assumed to be in a garbage state after this call is complete, which means you will need to re-render the entire frame before a subsequent call to SwapBuffers. This call will not return until the back buffer is ready to be drawn on to. Depending on the implementation, it may take up to a single video frame period for the new front buffer to become visible.</p>\\n<p>This operation is extremely fast (that is, it never copies a bitmap from one location to another), and is guaranteed not to \\\"tear\\\" the visible image.</p>\\n<p>If the screen is single buffered, this method returns immediately after this operation. If the screen is double buffered, this method swaps the back buffer with the front buffer, so the back buffer is now visible.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsearchhistory.md":"{\n  \"content\": \"<h1 id=\\\"ifsearchhistory\\\">ifSearchHistory</h1>\\n<blockquote>\\n<p><em>This interface is known as ifRoSearchHistory in some Roku OS versions.</em></p>\\n</blockquote>\\n<h2 id=\\\"description\\\">Description</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosearchhistory.md\\\" title=\\\"roSearchHistory\\\">roSearchHistory</a></td>\\n<td>The Search History object implements the system-wide storage of search terms for use in implementing the roSearchScreen</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"clear-as-void\\\">Clear() as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Clears all elements from the search history.</p>\\n<blockquote>\\n<p>This method clears the search history for all applications and should be used carefully. The standard usage is to provide a \\\"clear history\\\" button on the search screen, so that it is up to the user when the history stack is cleared.</p>\\n</blockquote>\\n<h3 id=\\\"pushsearchterm-as-string--as-void\\\">Push(searchTerm as String ) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Pushes a new search term onto the search history stack.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>searchTerm</td>\\n<td>String</td>\\n<td>The search term to be pushed onto the search history stack.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getasarray-as-object\\\">GetAsArray() as Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the current search history stack.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of Strings with all available search history elements.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsearchscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifsearchscreen\\\">ifSearchScreen</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosearchscreen.md\\\" title=\\\"roSearchScreen\\\">roSearchScreen</a></td>\\n<td>The Search Screen provides a standard way to allow users to enter text for searching</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setsearchtermheadertexttext-as-string-as-void\\\">SetSearchTermHeaderText(text as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the text to be displayed for the header in the list area. This area could contain a list of search terms previously used as a search history or partial results in the case of a progressive disclosure search</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be displayed for the header in the list are.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setsearchbuttontexttext-as-string-as-void\\\">SetSearchButtonText(text as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the text label to be displayed on the search button. For example \\\"search\\\", \\\"find\\\", etc.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text label to be displayed on the search button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setclearbuttontexttext-as-string-as-void\\\">SetClearButtonText(text as String) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Set the text label for the button at the bottom of the list area. Example text might be \\\"clear history\\\", \\\"clear results\\\" or similar</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text label to be displayed on the button at the bottom of the list area</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addsearchtermsearchterm-as-string-as-void\\\">AddSearchTerm(searchTerm as String) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Adds an individual value to the search term list.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>searchTerm</td>\\n<td>String</td>\\n<td>The search term to be added.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setsearchtermssearchterms-as-object-as-void\\\">SetSearchTerms(searchTerms as Object) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the search terms list to the values contained in the array provided. </p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>searchTerms</td>\\n<td>Object</td>\\n<td>An array of string values to be displayed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearsearchterms-as-void\\\">ClearSearchTerms() as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Clears all values from the search terms list.</p>\\n<h3 id=\\\"setbreadcrumbtextlocation1-as-string-location2-as-string-as-void\\\">SetBreadcrumbText(location1 as String, location2 as String) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Sets a two-part navigational title that shows the current and the previous locations in the application hierarchy (for example, TV – Friends).</p>\\n<p>If both location values are set, the application will display the title in breadcrumb format. If only the first location is set, the application will display the specified text in the title area like the SetTitle API call.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>location1</td>\\n<td>String</td>\\n<td>The location 1 name.</td>\\n</tr>\\n<tr>\\n<td>location2</td>\\n<td>String</td>\\n<td>The location 2 name.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbenabledenable-as-boolean-as-void\\\">SetBreadcrumbEnabled(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Shows or hides the breadcrumb text in the title area</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to show (true) or hide (false) the breadcrumb text.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setclearbuttonenabledenable-as-boolean-as-void\\\">SetClearButtonEnabled(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Shows or hides the clear button on the keypad.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to show (true) or hide (false) the clear button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setemptysearchtermstexttext-as-string-as-void\\\">SetEmptySearchTermsText(text as String) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Displays the default text in the search terms box when no search terms have been entered.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be displayed in the search terms box by default.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setsearchtexttext-as-string-as-void\\\">SetSearchText(text as String) as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets the keyboard search string box to the specified text.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be displayed in the keyboard search string box.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the search screen successfully was displayed. </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsetmessageport.md":"{\n  \"content\": \"<h1 id=\\\"ifsetmessageport\\\">ifSetMessagePort</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rohdmistatus.md\\\" title=\\\"roHdmiStatus\\\">roHdmiStatus</a></td>\\n<td>The HDMI status component provides an interface to the current HDMI operational status</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roscreen.md\\\" title=\\\"roScreen\\\">roScreen</a></td>\\n<td>The roScreen component provides a full screen drawing surface that can be stacked and that you can receive input events from</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rourltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a></td>\\n<td>A roUrlTransfer object transfers data to or from remote servers specified by URLs. It can perform mutual authentication with a web server</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotexttospeech.md\\\" title=\\\"roTextToSpeech\\\">roTextToSpeech</a></td>\\n<td>The roTextToSpeech component provides text to speech capabilities to applications</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setmessageportport-as-object--as-void\\\">SetMessagePort(port as Object ) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a> to be used for all events from the screen.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Port</td>\\n<td>Object</td>\\n<td>The roMessagePort to be used for screen events.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsgnodeboundingrect.md":"{\n  \"content\": \"<h1 id=\\\"ifsgnodeboundingrect\\\">ifSGNodeBoundingRect</h1>\\n<p>The ifSGNodeBoundingRect interface can be used to query the bounding rectangle of subject node. The ifSGNodeBoundingRect interface methods return a node bounding rectangle as an associative array with four elements:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>x-coordinate of the origin of the bounding rectangle</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>y-coordinate of the origin of the bounding rectangle</td>\\n</tr>\\n<tr>\\n<td>width</td>\\n<td>width of the bounding rectangle</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>height of the bounding rectangle</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>These methods return the bounding rectangle dimensions and location of component objects at the time they are called. If they are called before an object is fully constructed, such as before all graphical images have been loaded, they will return the dimensions and location at the time of the call, which may not be the correct values for placing the component object properly. To ensure that your screen has the component objects located as you intended, make sure you call these methods after the component object is fully constructed. For example, if the component object relies on loading graphical images to construct its appearance, it is best to use these methods as part of an observer callback function triggered by the image loading field events, such as the loadStatus field of the Poster node.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"boundingrect-as-dynamic\\\">boundingRect() as Dynamic</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the node bounding rectangle. The bounding rectangle of a node is the axis-aligned rectangle computed by transforming the local bounding rectangle of the node by the node transformation matrix. The resulting rectangle corresponds to the node local bounding rectangle transformed into its parent node local coordinate system.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An associative array with the node bounding rectangle.</p>\\n<h3 id=\\\"localboundingrect-as-dynamic\\\">localBoundingRect() as Dynamic</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the node local bounding rectangle. The local bounding rectangle of a node is the axis-aligned rectangle, that includes the union of the bounding rectangle of the geometry of the node, and the bounding rectangles of all of the node children, transformed into the local coordinate system of the node.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An associative array with the node local bounding rectangle.</p>\\n<h3 id=\\\"sceneboundingrect-as-dynamic\\\">sceneBoundingRect() as Dynamic</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the bounding rectangle for scene components (component nodes extended from a <a href=\\\"/docs/references/scenegraph/scene.md\\\" title=\\\"Scene\\\">Scene</a> or <a href=\\\"/docs/references/scenegraph/sliding-panels-nodes/overhangpanelsetscene.md\\\" title=\\\"OverhangPanelSetScene\\\">OverhangPanelSetScene</a> node class).</p>\\n<p>If this method is called before any child components have been added to the <strong>Scene</strong> component, or the child components are smaller than the <strong>Scene</strong> component, this is the screen dimensions of the user interface, so can be used to automatically create a bounding rectangle for the specified display user interface dimensions (SD, HD, FHD), to locate and dimension child components within the screen.</p>\\n<p>If this method is called after child components have been added that are larger than the <strong>Scene</strong> component, the returned bounding rectangle will be larger than the user interface dimensions.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An associative array with the bounding rectangle.</p>\\n<h3 id=\\\"ancestorboundingrectancestor-as-rosgnode-as-dynamic\\\">ancestorBoundingRect(ancestor as roSGNode) as Dynamic</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the bounding rectangle of this node and all of its children in the Scene's root coordinate system, including any transformation specified in the Scene node.</p>\\n<p>In most cases, this will result in the bounding rectangle expressed in display coordinates.</p>\\n<p>If the node is not connected to a Scene node, this will return the same value as the <a href=\\\"#boundingrect-as-dynamic\\\">boundingRect()</a> method.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ancestor</td>\\n<td>roSGNode</td>\\n<td>The ancestor of the subject node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>An associative array with the bounding rectangle and all of its children in the Scene's root coordinate system.</p>\\n<h3 id=\\\"localsubboundingrectitemnumber-as-string-as-dynamic\\\">localSubBoundingRect(itemnumber as String) as Dynamic</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the local bounding rectangle of this node's identified sub part in the node's local coordinate system. If the subpart does not exist, the node's local bounding rectangle is returned.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>itemnumber</td>\\n<td>String</td>\\n<td>The index of the grid item for the local bounding rectangle to be returned in the following format: <em>rowindex</em>_<em>itemindex</em>.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>An associative array with the local bounding rectangle of the node's identified sub part.</p>\\n<h3 id=\\\"subboundingrectitemnumber-as-string-as-dynamic\\\">subBoundingRect(itemnumber as String) as Dynamic</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns the bounding rectangle of this node's identified sub part, as transformed by this node's transformation matrix, in its parent node's coordinate system. If the subpart does not exist, the node's bounding rectangle is returned.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>itemnumber</td>\\n<td>String</td>\\n<td>The index of the grid item for the local bounding rectangle to be returned in the following format: <em>rowindex</em>_<em>itemindex</em>.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>An associative array with the bounding rectangle. </p>\\n<h3 id=\\\"scenesubboundingrectitemnumber-as-string-as-dynamic\\\">sceneSubBoundingRect(itemnumber as String) as Dynamic</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the bounding rectangle of this node's subpart in its Scene's coordinate system If the subpart does not exist or if the node is not an ancestor of a Scene node, this will return the node's bounding rectangle.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>itemnumber</td>\\n<td>String</td>\\n<td>The index of the grid item for the bounding rectangle to be returned in the following format: <em>rowindex</em>_<em>itemindex</em>.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>An associative array with the bounding rectangle. </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sceneSubBoundingRect</td>\\n<td>Dynamic</td>\\n<td>${sceneSubBoundingRect}</td>\\n<td>Bounding rectangle</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"ancestorsubboundingrectitemnumber-as-string-ancestor-as-rosgnode-as-object\\\">ancestorSubBoundingRect(itemnumber as String, ancestor as roSGNode) as Object</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns the bounding rectangle of this node's subpart into the specified  ancestor' s coordinate system. If the subpart does not exist or if the node is not an ancestor of the specified node, this will return the node's bounding rectangle</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>itemnumber</td>\\n<td>String</td>\\n<td>The index of the grid item for the bounding rectangle to be returned in the following format: <em>rowindex</em>_<em>itemindex</em>.</td>\\n</tr>\\n<tr>\\n<td>ancestor</td>\\n<td>roSGNode</td>\\n<td>The ancestor of the subject node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>An associative array with the bounding rectangle. </p>\\n<h2 id=\\\"example-illustrating-bounding-rectangles\\\">Example: Illustrating Bounding Rectangles</h2>\\n<p>We start with the following code example:</p>\\n<p>The scene has the following parenting structure:</p>\\n<pre><code>Scene\\nRectangleGroup\\nRectangle (Green)\\nRectangle (Yellow)\\n&#x3C;Scene>\\n  &#x3C;Group id=\\\"RectGroup\\\" translation=\\\"[100, 50]\\\" >\\n        &#x3C;Rectangle id=\\\"GreenRect\\\" width=\\\"100\\\" height=\\\"150\\\" color=\\\"0x00FF00FF\\\" translation=\\\"[200, 75]\\\" >\\n            &#x3C;Rectangle id=\\\"YellowRect\\\" width=\\\"150\\\" height=\\\"250\\\" color=\\\"0xFFFF00FF\\\" translation=\\\"[200,100]\\\" rotation=\\\"-0.45\\\"/>\\n        &#x3C;/Rectangle>\\n   &#x3C;/Group>\\n&#x3C;/Scene>\\n</code></pre>\\n<p>Initially, the illustration shows the local coordinates systems of each of these nodes.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/rectangle-group1.png\\\" alt=\\\"rectangle-group1\\\" title=\\\"rectangle-group1\\\"></p>\\n<p>The next illustration shows the Yellow rectangle's localBoundingRect().</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/rectangle-group2.png\\\" alt=\\\"rectangle-group2\\\" title=\\\"rectangle-group2\\\"></p>\\n<p>The next illustration shows the Yellow rectangle's boundingRect(), which is relative to it's parent's coordinate system.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/rectangle-group3.png\\\" alt=\\\"rectangle-group3\\\" title=\\\"rectangle-group3\\\"></p>\\n<p>The next illustration shows the Yellow rectangle's sceneBoundingRect(), which is relative to the Scene's coordinate system.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/rectangle-group4.png\\\" alt=\\\"rectangle-group4\\\" title=\\\"rectangle-group4\\\"></p>\\n<p>The next illustration shows the localBoundingRect() of the Green rectangle, that includes the union of the Green rectangle's local rectangle and the boundingRect() of it's child. This rectangle is relative to the Green rectangle's local coordinate system.</p>\\n<blockquote>\\n<p>Note that this is the smallest, screen-aligned rectangle the encloses both the Green and Yellow rectangle.</p>\\n</blockquote>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/rectangle-group5.png\\\" alt=\\\"rectangle-group5\\\" title=\\\"rectangle-group5\\\"></p>\\n<p>The next illustration shows the boundingRect() of the Green rectangle, which is relative to its parent Group's coordinate system.</p>\\n<p><img src=\\\"https://image.roku.com/ZHZscHItMTc2/rectangle-group6.png\\\" alt=\\\"rectangle-group6\\\" title=\\\"rectangle-group6\\\"></p>\\n<p>The last illustration shows the Green rectangle's sceneBoundingRect(), which is relative to the Scene's coordinate system.</p>\\n<p> <img src=\\\"https://image.roku.com/ZHZscHItMTc2/rectangle-group7.png\\\" alt=\\\"rectangle-group7\\\" title=\\\"rectangle-group7\\\"></p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsgnodechildren.md":"{\n  \"content\": \"<h1 id=\\\"ifsgnodechildren\\\">ifSGNodeChildren</h1>\\n<p>The ifSGNodeChildren interface allows querying and manipulation of nodes in a SceneGraph node tree, such as creating new nodes, placing them at certain positions in the tree, and removing them.</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNode\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>To use the methods in this interface to manipulate child nodes at the scene level, the subject nodes must be wrapped in another element, typically a Group node. For example:</p>\\n<pre><code>&#x3C;?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\\n&#x3C;component name = \\\"myScene\\\" extends = \\\"Scene\\\" >\\n  &#x3C;script type = \\\"text/brightscript\\\" >\\n    &#x3C;![CDATA[\\n    sub init()\\n      m.myGroup = m.top.FindNode(\\\"myGroup\\\")\\n      m.label = m.myGroup.getChild(0)\\n    end sub\\n    ]]>\\n  &#x3C;/script>\\n\\n  &#x3C;children>\\n    &#x3C;Group id = \\\"myGroup\\\">\\n      &#x3C;Label id = \\\"myLabel\\\" ... />\\n    &#x3C;/Group>\\n  &#x3C;/children>\\n&#x3C;/component>\\n</code></pre>\\n<p>In the example above, m.label will contain the roSGNode corresponding to the Label node after the getChild() call. On the other hand, the following will not work:</p>\\n<pre><code>&#x3C;?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\\n&#x3C;component name = \\\"myScene\\\" extends = \\\"Scene\\\" >\\n  &#x3C;script type = \\\"text/brightscript\\\" >\\n    &#x3C;![CDATA[\\n    sub init()\\n      m.label = m.top.getChild(0)\\n    end sub\\n    ]]>\\n  &#x3C;/script>\\n\\n  &#x3C;children>\\n    &#x3C;Label id = \\\"myLabel\\\" ... />\\n  &#x3C;/children>\\n&#x3C;/component>\\n</code></pre>\\n<p>The Scene node children are hidden elements used by the SceneGraph framework. Thus, despite the fact that the Label node is in the scene  element, it will not be retrieved by getChild() .</p>\\n<blockquote>\\n<p>Removing or replacing a node in a SceneGraph node tree can cause that node to be destroyed entirely if there are no more references to it.</p>\\n</blockquote>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"appendchildchild-as-rosgnode-as-boolean\\\">appendChild(child as roSGNode) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Adds a child node to the end of the subject node list of children so that it is traversed last (of those children) during render.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>child</td>\\n<td>roSGNode</td>\\n<td>The child node to be appended to the end of the list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the child node was successfully appended.</p>\\n<h3 id=\\\"createchildnodetype-as-string-as-object\\\">createChild(nodeType as String) as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Creates a child node of type nodeType, and adds the new node to the end of the subject node list of children.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>nodeType</td>\\n<td>String</td>\\n<td>The node class to be created.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The child node that was created.</p>\\n<h3 id=\\\"insertchildchild-as-rosgnode-index-as-integer-as-boolean\\\">insertChild(child as roSGNode, index as Integer) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Inserts a previously-created child node at the position index in the subject node list of children, so that this is the position that the new child node is traversed during render.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>child</td>\\n<td>roSGNode</td>\\n<td>The child node to be added to the child tree.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The postion index where the child node is to be inserted.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the child node that was successfully inserted.</p>\\n<h3 id=\\\"removechildchild-as-rosgnode-as-boolean\\\">removeChild(child as roSGNode) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Finds a child node in the subject node list of children, and if found, remove it from the list of children. The match is made on the basis of actual object identity, that is, the value of the pointer to the child node.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>child</td>\\n<td>roSGNode</td>\\n<td>The child node to be removed from the child tree.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the child node that was successfully removed.</p>\\n<h3 id=\\\"removechildindexindex-as-integer-as-boolean\\\">removeChildIndex(index as Integer) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>If the subject node has a child node in the index position, removes that child node from the subject node list of children.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The position in the tree of the child node to be removed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the child node that was successfully removed.</p>\\n<h3 id=\\\"replacechildnewchild-as-rosgnode-index-as-integer-as-boolean\\\">replaceChild(newChild as roSGNode, index as Integer) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>If the subject node has a child node in the index position, replace that child node with the newChild node in the subject node list of children, otherwise do nothing.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>newChild</td>\\n<td>roSGNode</td>\\n<td>The child node to replace the one specified by the index.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the child node to be replaced.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the child node that was successfully replaced.</p>\\n<h3 id=\\\"getchildindex-as-integer-as-dynamic\\\">getChild(index as Integer) as Dynamic</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the child node specified by the index.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The index of the child node to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The child node at the index position; otherwise, \\\"invalid\\\".</p>\\n<h3 id=\\\"getparent-as-rosgnode\\\">getParent() as roSGNode</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns the parent node of a node has been added to a list of children.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The parent node; otherwise, \\\"invalid\\\".</p>\\n<h3 id=\\\"getchildcount-as-integer\\\">getChildCount() as Integer</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Returns the current number of children in the subject node list of children. This is always a non-negative number.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>The number of child nodes in the tree.</p>\\n<h3 id=\\\"reparentnewparent-as-rosgnode-adjusttransform-as-boolean-as-boolean\\\">reparent(newParent as roSGNode, adjustTransform as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Moves the subject node to another parent node.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>newParent</td>\\n<td>roSGNode</td>\\n<td>The new parent node where the child node is to be moved.</td>\\n</tr>\\n<tr>\\n<td>adjustTransform</td>\\n<td>Boolean</td>\\n<td>Specifies whether the translation, rotation, and scale of the node are adjusted so that the node has the same transformation factors relative to the screen as it previously did.<br /><br />If <strong>adjustTransform</strong> is true, the subject node transformation factor fields (translation/rotation/scale) are adjusted so that the node has the same transformation factors relative to the screen as it previously did.<br /><br />If <strong>adjustTransform</strong> is false, the subject node is simply parented to the new node without adjusting its transformation factor fields, in which case, the reparenting operation could cause the node to jump to a new position on the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>A flag indicating whether the node that was successfully moved to another parent node.</p>\\n<h3 id=\\\"appendchildrenchild_nodes-as-object-as-boolean\\\">appendChildren(child_nodes as Object) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Appends an array of children nodes to the subject node.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>child_nodes</td>\\n<td>Object</td>\\n<td>An roArray of child nodes to be appended to the subject node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>A flag indicating whether the children nodes were successfully appended.</p>\\n<h3 id=\\\"insertchildrenchild_nodes-as-object-index-as-integer-as-boolean\\\">insertChildren(child_nodes as Object, index as Integer) as Boolean</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Inserts an array of child nodes to the subject node, starting at a specific position.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>child_nodes</td>\\n<td>Object</td>\\n<td>An roArray of child nodes to be inserted in the tree.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The position in the tree where to insert the child nodes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>A flag indicating whether the children nodes were successfully inserted.</p>\\n<h3 id=\\\"removechildrenchild_nodes-as-object-as-boolean\\\">removeChildren(child_nodes as Object) as Boolean</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Removes an array of child nodes from the subject node.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>child_nodes</td>\\n<td>Object</td>\\n<td>An roArray of child nodes to removed from the tree</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-12\\\">Return Value</h4>\\n<p>A flag indicating whether the children nodes were successfully removed.</p>\\n<h3 id=\\\"removechildrenindexnum_children-as-integer-index-as-integer--as-boolean\\\">removeChildrenIndex(num_children as Integer, index as Integer ) as Boolean</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Removes a specific number of child nodes from the subject node starting at a specific position.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>num_children</td>\\n<td>Integer</td>\\n<td>The number of child nodes to be removed.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The starting position in the child node tree where the specified number of nodes are to be removed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-13\\\">Return Value</h4>\\n<p>A flag indicating whether the children nodes were successfully removed.</p>\\n<h3 id=\\\"updatefields-as-roassociativearray-addfields-as-boolean-as-void\\\">update(fields as roAssociativeArray[, addFields as Boolean]) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Takes the key-value pairs in an roAssociativeArray and maps the values to the respective field name in the calling node.</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fields</td>\\n<td>roAssociativeArray</td>\\n<td>Contains key-value pairs corresponding to the fields in the subject node to be updated.</td>\\n</tr>\\n<tr>\\n<td>addFields</td>\\n<td>Boolean</td>\\n<td>optional (default = false). If true, and a specified key is not yet present, add it and value to the node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"example\\\">Example</h4>\\n<p>The following example demonstrates how to use this method:</p>\\n<pre><code>aa = {\\\"a\\\":\\\"1\\\", \\\"b\\\":\\\"2\\\", \\\"c\\\":\\\"3\\\", \\\"d\\\":\\\"4\\\"}\\ncn = createObject(\\\"roSGNode\\\", \\\"contentNode\\\")\\ncn.addfield(\\\"a\\\",\\\"string\\\",false)\\ncn.addfield(\\\"b\\\",\\\"string\\\",false)\\ncn.addfield(\\\"c\\\",\\\"string\\\",false)\\ncn.update(aa,false)\\n'At this point, cn would contain the following:\\n&#x3C;Component: roSGNode> =\\n{\\n    change: &#x3C;Component: roAssociativeArray>\\n    focusable: false\\n    focusedChild: &#x3C;Component: roInvalid>\\n    id: \\\"\\\"\\n    a: \\\"1\\\"\\n    b: \\\"2\\\"\\n    c: \\\"3\\\"\\n}\\n</code></pre>\\n<h3 id=\\\"replacechildrenchild_nodes-as-object-index-as-integer-as-boolean\\\">replaceChildren(child_nodes as Object, index as Integer) as Boolean</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Replaces the child nodes in the subject node, starting at the position specified by index, with new child nodes specified by child_nodes</p>\\n<blockquote>\\n<p>Starting from Roku OS 8.1, when using this method to update the content of each item in a markupGrid, if more items are supplied than there are in the original list (going from 4 items to 5), the 'extra' items are ignored and not added as children.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-13\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>child_nodes</td>\\n<td>Object</td>\\n<td>An roArray of child nodes to replace the nodes in the tree.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The starting position in the tree from where to replace the child nodes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-14\\\">Return Value</h4>\\n<p>A flag indicating whether the children nodes were successfully replaced.</p>\\n<h3 id=\\\"getchildrennum_children-as-integer-index-as-integer-as-object\\\">getChildren(num_children as Integer, index as Integer) as Object</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Retrieves a specific number of child nodes from the subject node, starting at a specific position.</p>\\n<h4 id=\\\"parameters-14\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>num_children</td>\\n<td>Integer</td>\\n<td>The number of child nodes to be retrieved.</td>\\n</tr>\\n<tr>\\n<td>index</td>\\n<td>Integer</td>\\n<td>The starting position in the child node tree where the specified number of nodes are to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-15\\\">Return Value</h4>\\n<p>An roArray containing the child nodes retrieved. If num_children is -1, all the child nodes are returned.</p>\\n<h3 id=\\\"createchildrennum_children-as-integer-subtype-as-string--as-object\\\">createChildren(num_children as Integer, subtype as String ) as Object</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Creates a specific number of new child nodes of a specific type or extended type.</p>\\n<h4 id=\\\"parameters-15\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>num_children</td>\\n<td>Integer</td>\\n<td>Number of new child nodes to be created.</td>\\n</tr>\\n<tr>\\n<td>subtype</td>\\n<td>String</td>\\n<td>Node type or extended type of the new child nodes to be created.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-16\\\">Return Value</h4>\\n<p>An roArray containing the new child nodes created.</p>\\n<h3 id=\\\"getscene-as-rosgnode\\\">getScene() as roSGNode</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Returns the node's root Scene. This returns a valid Scene even if the node is not parented.</p>\\n<h4 id=\\\"return-value-17\\\">Return Value</h4>\\n<p>The node's root Scene.</p>\\n<h2 id=\\\"debugging-only-methods\\\">Debugging-only Methods</h2>\\n<p>The following methods can be called on any subject node and return the same global results. They can be used in a development channel for debugging purposes, but should not be used in a production channel.</p>\\n<blockquote>\\n<p>These methods are similar to the debugger sgnodes commands. See <a href=\\\"/docs/developer-program/debugging/debugging-channels.md#special-scenegraph-debugging-commands\\\">Special SceneGraph Debugging Commands</a> for information on the debugger sgnodes commands. Also please note that calling these functions from code should only be done for debugging purposes. Any calls to <a href=\\\"#getall-as-object\\\">getAll()</a>, <a href=\\\"#getroots-as-object\\\">getRoots()</a>, <a href=\\\"#getrootsmeta-as-object\\\">getRootsMeta()</a> and <a href=\\\"#getallmeta-as-object\\\">getAllMeta()</a> should be removed from your production channels. |</p>\\n</blockquote>\\n<h3 id=\\\"getall-as-object\\\">getAll() as Object</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Returns an array with every existing node created by the currently running channel.</p>\\n<h4 id=\\\"return-value-18\\\">Return Value</h4>\\n<p>An roArray with the all the existing nodes created by the channel.</p>\\n<h3 id=\\\"getroots-as-object\\\">getRoots() as Object</h3>\\n<h4 id=\\\"description-20\\\">Description</h4>\\n<p>Returns an array with every existing node without a parent created by the currently running channel.</p>\\n<p>The existence of these unparented nodes means they are being kept alive by direct BrightScript references. These could be in variables local to a function, arrays, or associative arrays, including a component global m or an associative array field of a node.</p>\\n<h4 id=\\\"return-type\\\">Return Type</h4>\\n<p>An roArray with every existing node without a parent created by the currently running channel</p>\\n<h3 id=\\\"getrootsmeta-as-object\\\">getRootsMeta() as Object</h3>\\n<h4 id=\\\"description-21\\\">Description</h4>\\n<p>Returns an array with every existing node without a parent created by the currently running channel.</p>\\n<p>The existence of these unparented nodes means they are being kept alive by direct BrightScript references. These could be in variables local to a function, arrays, or associative arrays, including a component global m or an associative array field of a node. These unparented nodes are organized as an XML forest of trees.</p>\\n<h4 id=\\\"return-value-19\\\">Return Value</h4>\\n<p>An roArray with every existing node without a parent created by the currently running channel.</p>\\n<h3 id=\\\"getallmeta-as-object\\\">getAllMeta() as Object</h3>\\n<h4 id=\\\"description-22\\\">Description</h4>\\n<p>Returns an array with every existing node created by the currently running channel (similar to the <a href=\\\"#getall-as-object\\\">getAll()</a> method) organized as an XML forest of trees according to the usual parent-child node relationship. Cycles are handled with a reference entry in the tree rather than indefinite recursion.</p>\\n<h4 id=\\\"return-value-20\\\">Return Value</h4>\\n<p>An roArray of strings with the all the existing nodes created by the channel.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsgnodedict.md":"{\n  \"content\": \"<h1 id=\\\"ifsgnodedict\\\">ifSGNodeDict</h1>\\n<p>The ifSGNodeDict interface allows you access information about the nodes in a SceneGraph node tree, and find and return a node with a specific ID.</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNode\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"findnodename-as-string-as-object\\\">findNode(name as String) as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the node that is a descendant of the nearest component ancestor of the subject node (possibly the subject node itself) and whose id field is set to name. The search for the descendant node is a breadth-first search that includes child nodes in nodes that are declared as custom components defined in other XML component files. These together allow finding siblings and cousins of a node within the context of a component. If a node with the specified name is not found, an invalid object is returned</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The name of the node to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The node that is a descendant of the nearest component ancestor of the subject node.</p>\\n<h3 id=\\\"subtype-as-string\\\">subtype() as String</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the subtype of the subject node as specified when it was created.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The subtype of the subject node. </p>\\n<h3 id=\\\"parentsubtypenodetype-as-string-as-string\\\">parentSubtype(nodeType as String) as String</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the subtype of the parent of the nodeType in the SceneGraph node class hierarchy. </p>\\n<blockquote>\\n<p>This method does not actually reference the subject node.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>nodeType</td>\\n<td>String</td>\\n<td>The node type of the parent node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The subtype of the parent node.</p>\\n<h3 id=\\\"issubtypenodetype-as-string-as-boolean\\\">isSubtype(nodeType as String) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Checks whether the subtype of the subject node is a descendant of the subtype nodeType in the SceneGraph node class hierarchy.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>nodeType</td>\\n<td>String</td>\\n<td>The node type of the subject node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the subtype of the subject node is a descendant of the subtype nodeType.</p>\\n<h3 id=\\\"issamenoderosgnode-as-object-as-boolean\\\">isSameNode(RoSGNode as Object) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Checks whether a specific roSGNode refers to the same SceneGraph node object as the subject node.</p>\\n<p>This can be useful when the RoSGNode objects come from two different sources, for example when one is stored in an associative array, and the other is obtained from an RoSGNode interface method that returns an RoSGNode object, like getChild(). It may be that the application needs to know whether the two RoSGNode objects are actually referring to the same underlying SceneGraph node. </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>isSameNode</td>\\n<td>Boolean</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>RoSGNode</td>\\n<td>Object</td>\\n<td>The roSGNode to be checked.</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td>True/False</td>\\n<td>Returns a Boolean value indicating whether the RoSGNode parameter refers to the same SceneGraph node object as the subject node</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the nodes refer to the same SceneGraph node object.</p>\\n<h4 id=\\\"example\\\">Example:</h4>\\n<p>The following example should print \\\"same\\\":</p>\\n<pre><code>n = createObject(\\\"roSGNode\\\", \\\"Node\\\")\\nc = n.createChild(\\\"Node\\\")\\nif c.isSameNode(n.getChild(0)) then print \\\"same\\\"\\n</code></pre>\\n<h3 id=\\\"cloneisdeepcopy-as-boolean-as-object\\\">clone(isDeepCopy as Boolean) as Object</h3>\\n<p>Returns a copy of the entire node tree or just a shallow copy.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>clone</td>\\n<td>Object</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>isDeepCopy</td>\\n<td>Boolean</td>\\n<td>True = return a copy of the entire node tree. <br />False = return a shallow copy of the node tree.</td>\\n</tr>\\n</tbody>\\n</table></td>\\n<td>Node tree</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A node tree.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsgnodefield.md":"{\n  \"content\": \"<h1 id=\\\"ifsgnodefield\\\">ifSGNodeField</h1>\\n<p>The ifSGNodeField interface allows querying, getting, setting, and performing other similar manipulation operations on Scene Graph node fields. This interface also allows you to set and unset event observers on a subject node field.</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNode\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setfieldfieldname-as-string-value-as-object-as-boolean\\\">setField(fieldName as String, value as Object) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the value of a subject node field. This will fail and stop script execution if the value is not of the appropriate type.</p>\\n<p>You can also use the node.field syntax to get the same result as setField(). Specifically, rect.setField(\\\"opacity\\\", 0.5) is equivalent to rect.opacity = 0.5. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be updated.</td>\\n</tr>\\n<tr>\\n<td>value</td>\\n<td>Object</td>\\n<td>The updated value for the field.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the field was successfully updated.</p>\\n<p><em>Since Roku OS 9.3</em>, <code>observeField()</code> and <code>observeFieldScoped()</code> methods include an optional <code>infoFields</code> parameter, which is an array of field names.  Generally, these should be relevant fields in the same object being observed, which are necessary to give context to the field that triggered the field change event. The triggered event object itself will provide a <code>getInfo()</code> method, which returns an AA that contains the names and instantaneous values of the requested \\\"context\\\" fields at the point when the observed field changed. For example, use of <code>videoNode.observeField(\\\"position\\\", m.port, [\\\"clipId\\\", \\\"programId\\\"])</code> to set up an observer for <code>position</code> would later allow the call <code>extraInfo = msg.GetInfo()</code> to retrieve requested \\\"context\\\" information, given that <code>msg</code> is the relevant roSGNodeEvent indicating that <code>position</code> has changed. The contents of <code>extraInfo</code> would resemble <code>{\\\"clipid\\\": 1, \\\"programid\\\": 0}</code>.</p>\\n<h3 id=\\\"observefieldfieldname-as-string-functionname-as-string--infofields-as-object-as-boolean\\\">observeField(fieldName as String, functionName as String [, infoFields as Object]) as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Calls a function when a field of the subject node changes. The function called must be in the scope of the current component.</p>\\n<p>Optionally, this form can pass an <a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNodeEvent\\\">roSGNodeEvent</a> message to the callback function by specifying the message object as an argument to the callback function. The following sample demonstrates how to do this:</p>\\n<pre><code>sub callback_function(message as Object)\\n  ...\\nend sub\\n</code></pre>\\n<p>From this message in the callback function, you can get the node ID, the field name, and the field value at the time it was set, using the same <a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNodeEvent\\\">roSGNodeEvent</a> methods described in the overloaded form observeField(fieldName as String, port as Object). The <a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNodeEvent\\\">roSGNodeEvent</a> message also includes a pointer to the node that can be accessed using getRoSGNode(), to associate nodes without an ID in the callback function. Additional information can be accessed in the callback function by storing the information in a custom field of the node. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be monitored.</td>\\n</tr>\\n<tr>\\n<td>functionName</td>\\n<td>String</td>\\n<td>The name of the method to be executed when the value of the field   changes.</td>\\n</tr>\\n<tr>\\n<td>infoFields</td>\\n<td>Object (String array)</td>\\n<td>Optional. Names of \\\"context\\\" field values to be reported via getInfo() when the monitored field changes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the value of the field being monitored changes.  </p>\\n<h3 id=\\\"observefieldfieldname-as-string-port-as-object--infofields-as-object-as-boolean\\\">observeField(fieldName as String, port as Object [, infoFields as Object]) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>This overloaded form sends an <a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNodeEvent\\\">roSGNodeEvent</a> message to the <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a> identified by port when the subject node field identified by fieldName changes value. </p>\\n<ul>\\n<li>Running GetNode() on the message retrieves the ID of the node that changed.</li>\\n<li>Running GetField() on the message gets the name of the field that changed.</li>\\n<li>Running GetData() on the message gets the new field value at the time of the change.</li>\\n</ul>\\n<p>This allows other threads to react to field changes, and avoids missing a value when the field changes twice before the message handler is able to receive the <a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNodeEvent\\\">roSGNodeEvent</a> messages.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be monitored.</td>\\n</tr>\\n<tr>\\n<td>port</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a> to receive a <a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNodeEvent\\\">roSGNodeEvent</a> message when the value of the field changes.</td>\\n</tr>\\n<tr>\\n<td>infoFields</td>\\n<td>Object (String array)</td>\\n<td>Optional. Names of \\\"context\\\" field values to be reported via getInfo() when the monitored field changes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the value of the field being monitored changes. </p>\\n<h3 id=\\\"queuefieldsqueuenode-as-boolean-as-boolean\\\">queueFields(queueNode as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Makes subsequent operations on the node fields to queue on the node itself rather than on the <a href=\\\"/docs/references/scenegraph/scene.md\\\" title=\\\"Scene\\\">Scene</a> node render thread. This prevents the operations from being executed immediately.</p>\\n<p>Subsequently setting this method to false will then cause all of the operations to be transferred to the <a href=\\\"/docs/references/scenegraph/scene.md\\\" title=\\\"Scene\\\">Scene</a> node render thread queue to be immediately executed in a single render cycle. This can be helpful when multiple fields of a node that affect the appearance of the user interface need to be changed at one time from another thread. </p>\\n<p>This method should not be used on a node that is not owned by the render thread, as the render thread will not be able to execute the operations when they are released to it. You can use it when a node owned by a <a href=\\\"/docs/references/scenegraph/control-nodes/task.md\\\" title=\\\"Task\\\">Task</a> node thread is transferred to the render thread, by setting it to a child or a node field of a node already owned by the render thread, where the queue is then released.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>queueNode</td>\\n<td>Boolean</td>\\n<td>A flag enabling queuing on the node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating the current state of <strong>queueNode</strong>.</p>\\n<h3 id=\\\"addfieldsfields-as-object-as-boolean\\\">addFields(fields as Object) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds the field(s) and corresponding field value(s) defined as key-value pair(s) in the associative array fields to the subject node. The types of the added fields are determined by the values which correspond to the allowable types for an <code>&#x3C;interface></code> field.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fields</td>\\n<td>Object</td>\\n<td>An roAssociativeArray containing key-value pairs for the fields to be added.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the fields have been successfully added.</p>\\n<h3 id=\\\"getfieldfieldname-as-string-as-object\\\">getField(fieldName as String) as Object</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns the appropriately-typed value from the specified field of the subject node.</p>\\n<p>You can also use the node.field syntax to get the same result as getField(). Specifically, <code>rectpos = rect.getField(\\\"translation\\\")</code> is equivalent to <code>rectpos = rect.translation</code>. You can also use the syntax node[fieldName].</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A typed value.</p>\\n<h3 id=\\\"addfieldfieldname-as-string-type-as-string-alwaynotify-as-boolean-as-boolean\\\">addField(fieldName as String, type as String, alwayNotify as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Adds a field with the specified name and type to the subject node. The added field is initialized to the default value for the type.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be added.</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>String</td>\\n<td>The type of the field to be added.<br /><br />Type declarations must be lowercase or the field will not be added to the node. For example, declaring \\\"Boolean\\\" as the type will prevent the field from being added.</td>\\n</tr>\\n<tr>\\n<td>alwayNotify</td>\\n<td>Boolean</td>\\n<td>Specifies whether observers of the field are triggered when the field value is updated to the same or new value (true), or only when the field changes to a new value (false).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the field have been successfully added.</p>\\n<h3 id=\\\"getfieldtypefieldname-as-string-as-string\\\">getFieldType(fieldName as String) as String</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns the type of a specific field of the subject node.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to have its type retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The field type. </p>\\n<h3 id=\\\"setfieldsfields-as-object-as-boolean\\\">setFields(fields as Object) as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Sets the values for one or more fields.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fields</td>\\n<td>Object</td>\\n<td>An roAssociativeArray containing key-value pairs for the fields to be updated.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>A flag indicating whether the fields have been successfully updated.</p>\\n<h3 id=\\\"removefieldsfieldnames-as-object-as-boolean\\\">removeFields(fieldNames as Object) as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Removes one or more fields from the subject node. </p>\\n<p>Fields defined as part of the built-in node class cannot be removed. Fields defined in <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">content metadata</a> and the related SceneGraph node class metadata bindings can be removed, but will be dynamically re-added at any time they are explicitly accessed.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldNames</td>\\n<td>Object</td>\\n<td>An roArray containing the names of the fields to be removed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>A flag indicating whether the fields have been successfully removed.</p>\\n<h3 id=\\\"unobservefieldscopedfieldname-as-string-as-boolean\\\">unobserveFieldScoped(fieldName as String) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Removes the connection between the observing component and the observed node's field. </p>\\n<p>This is similar to the <a href=\\\"/docs/references/brightscript/interfaces/ifsgnodefield.md#unobservefieldfieldname-as-string-as-boolean\\\" title=\\\"unobserveField(fieldName as String)\\\">unobserveField()</a> method, which undoes both forms of observeField() and thus undoes both forms of observeFieldScoped(). </p>\\n<p>This method looks for and removes the implicit connection state stored in the observing object so that the calling component will no longer receive notification of changes in the specified node's field. Connections in other observing objects or even in the observed object are not affected</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to no longer be monitored.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>A flag indicating whether this operation was successful. </p>\\n<h3 id=\\\"removefieldfieldname-as-string-as-boolean\\\">removeField(fieldName as String) as Boolean</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Removes a field from the subject node. Fields defined in <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">content metadata</a> and the related SceneGraph node class metadata bindings can be removed, but will be dynamically re-added at any time they are explicitly accessed.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be removed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>A flag indicating whether the field has been successfully removed.</p>\\n<h3 id=\\\"observefieldscopedfieldname-as-string-functionname-as-string-infofields-as-object-as-boolean\\\">observeFieldScoped(fieldName as String, functionName as String[, infoFields as Object]) as Boolean</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Sets up a connection between the observed node's field and the current component from which this call is made. This method is similar to the <a href=\\\"/docs/references/brightscript/interfaces/ifsgnodefield.md#observefieldfieldname-as-string-functionname-as-string-as-boolean\\\" title=\\\"observeField(fieldName as String, functionName as String)\\\">observeField()</a> method.</p>\\n<p>While the connection exists, any change in the called/observed node's field specified by <strong>fieldName</strong> results in calling the function specified by functionName in the observing component. </p>\\n<p>The callback will be on the thread that owns the observed node. This is usually the render thread except in some narrowly defined scenarios. See <a href=\\\"/docs/developer-program/core-concepts/threads.md\\\" title=\\\"SceneGraph Threads\\\">SceneGraph Threads</a> for further details.</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be monitored.</td>\\n</tr>\\n<tr>\\n<td>functionName</td>\\n<td>String</td>\\n<td>The name of the method to be executed when the value of the field   changes.</td>\\n</tr>\\n<tr>\\n<td>infoFields</td>\\n<td>Object (String array)</td>\\n<td>Optional. Names of \\\"context\\\" field values to be reported via getInfo() when the monitored field changes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-12\\\">Return Value</h4>\\n<p>A flag indicating whether the value of the field has changed. </p>\\n<h3 id=\\\"observefieldscopedfieldname-as-string-port-as-object-infofields-as-object-as-boolean\\\">observeFieldScoped(fieldName as String, port as Object[, infoFields as Object]) as Boolean</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Sets up a connection between the observed node's field and the current component from which this call is made. This method is similar to the <a href=\\\"/docs/references/brightscript/interfaces/ifsgnodefield.md#observefieldfieldname-as-string-functionname-as-string-as-boolean\\\" title=\\\"observeField(fieldName as String, functionName as String)\\\">observeField()</a> method.</p>\\n<p>While the connection exists, any change in the called/observed node's field specified by fieldName results in a message being sent to the <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a> specified by port.</p>\\n<p>The message will be received on the thread that owns the port. This is either a task thread or the main BrightScript thread. See <a href=\\\"/docs/developer-program/core-concepts/threads.md\\\" title=\\\"SceneGraph Threads\\\">SceneGraph Threads</a> for further details.</p>\\n<h4 id=\\\"parameters-13\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be monitored.</td>\\n</tr>\\n<tr>\\n<td>port</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a> to receive a <a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNodeEvent\\\">roSGNodeEvent</a> message when the value of the field changes.</td>\\n</tr>\\n<tr>\\n<td>infoFields</td>\\n<td>Object (String array)</td>\\n<td>Optional. Names of \\\"context\\\" field values to be reported via getInfo() when the monitored field changes.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-13\\\">Return Value</h4>\\n<p>A flag indicating whether the value of the field has changed. </p>\\n<h3 id=\\\"unobservefieldfieldname-as-string-as-boolean\\\">unobserveField(fieldName as String) as Boolean</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Removes the previously established connections between the subject node field identified by fieldName and any callback functions or message ports.</p>\\n<h4 id=\\\"parameters-14\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to no longer be monitored.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-14\\\">Return Value</h4>\\n<p>A flag indicating whether this operation was successful. </p>\\n<h3 id=\\\"getfields-as-object\\\">getFields() as Object</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Returns the names and values of all the fields in the node.</p>\\n<h4 id=\\\"return-value-15\\\">Return Value</h4>\\n<p>An roAssociativeArray containing key-value pairs with the element names and values. </p>\\n<h3 id=\\\"hasfieldfieldname-as-string-as-boolean\\\">hasField(fieldName as String) as Boolean</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Checks whether a field exists in the node. </p>\\n<h4 id=\\\"parameters-15\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fieldName</td>\\n<td>String</td>\\n<td>The name of the field to be checked for whether it exists in the node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-16\\\">Return Value</h4>\\n<p>A flag indicating whether the subject node has a field whose name exactly matches fieldName, or whose fully lowercase analog is identical to that of fieldName.</p>\\n<h3 id=\\\"getfieldtypes-as-object\\\">getFieldTypes() as Object</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Returns the names and types of all the fields in the node.</p>\\n<h4 id=\\\"return-value-17\\\">Return Value</h4>\\n<p>An roAssociativeArray containing key-value pairs with the element names and types. </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>getFieldTypes</td>\\n<td>Object</td>\\n<td>roAssociatve Array</td>\\n<td>Returns an roAssociativeArray for the subject node containing key-value pairs with the field names and field types, respectively.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"threadinfo-as-object\\\">threadinfo() as Object</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>A runtime debugging method for helping minimize Rendezvous spread.  This method can be called on any node from any thread.</p>\\n<p>The following example demonstrates the information returned by this method: </p>\\n<pre><code>{   node: { type: \\\"XXComponent\\\",          \\n    id: \\\"XXID\\\",          \\n    address: 0x123XXX,          \\n    willRendezvousFromCurrentThread: \\\"yes\\\",          \\n    owningThread: { type: \\\"Render\\\", name: \\\"newMainScene\\\", id:\\\"123456\\\" }        \\n},\\n    currentThread: { type: \\\"Task\\\",   name: \\\"conviva\\\",     id: \\\"234567\\\" },    \\n    renderThread: { type: \\\"Render\\\", name: \\\"newMainScene\\\", id: \\\"123456\\\" }\\n}\\n</code></pre>\\n<blockquote>\\n<p>Do not call this method from within function main() or any function called by function main()</p>\\n</blockquote>\\n<h4 id=\\\"return-value-18\\\">Return Value</h4>\\n<p>An roAssociatveArray with the following information:</p>\\n<ul>\\n<li>What is calling a thread function is being called from.</li>\\n<li>On which component's behalf (what m.top) the current function is executing.</li>\\n<li>The thread ownership of the node in question.</li>\\n<li>Whether or not access to the node from the current thread would cause a rendezvous.</li>\\n</ul>\\n<h3 id=\\\"signalbeaconbeacon-as-string-as-integer\\\">signalBeacon(beacon As String) As Integer</h3>\\n<p><em>Available since Roku OS 9.1</em></p>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Signals start and/or stop points for measuring channel launch and Electronic Program Grid (EPG) launch times.                                                                                                                     </p>\\n<p>To pass certification, a channel must finish launching within the time specified in the <a href=\\\"/docs/developer-program/certification/certification.md#3performance\\\">certification performance requirements</a>. The Roku OS automatically fires an <strong>AppLaunchInitiate</strong> event to mark when the user presses the OK button to launch a channel from the Roku home screen. The channel, however, must fire the corresponding <code>AppLaunchComplete</code> to mark when the channel home page is fully rendered or when video playback starts after handling a <a href=\\\"/docs/references/brightscript/interfaces/ifsgnodefield.md\\\">deep link</a> and the channel can respond to commands sent via the remote control.</p>\\n<p>Starting in Roku OS 9.3, if the channel UI displays a login or user selection dialog before the home page, the channel can fire <strong>AppDialogInitiate</strong> and <strong>AppDialogComplete</strong> beacons when the dialog loads and exits, respectively. These new beacons enable more accurate measurements of channel launch times as the time spent on any dialogs requiring user input prior to rendering the home page are subtracted from the overall channel launch time. If the channel displays more that one dialog before the home page, multiple pairs of <strong>AppDialogInitiate</strong>/<strong>AppDialogComplete</strong> beacons may be fired. Do not fire AppDialog beacons on message dialogs that do not involve any user interaction (for example, a \\\"please wait\\\" or \\\"loading\\\" dialog).</p>\\n<p>To fire signal beacons within your application, call the <code>signalBeacon()</code> function on any node as demonstrated in the following examples:</p>\\n<pre><code>myScene.signalBeacon(“AppLaunchComplete”)\\nmyEPGComponent.signalBeacon(“EPGLaunchInitiate”) \\nm.top.signalBeacon(“EPGLaunchComplete”)`\\n</code></pre>\\n<blockquote>\\n<p>Only the first sequence of EPG launch beacons is recorded.  If a user launches the EPG more than once while the channel is running, a warning message is output to the debug console. This warning message, which acknowledges the receipt of the beacon while notifying that subsequent ones will not be recorded, may be ignored. </p>\\n<p>Only EPG launch sequences that start within 5 seconds of the <code>AppLaunchComplete</code> event being fired qualify as a valid measurements for certification. EPG launch sequences fired after the 5-second window are still recorded so that channel performance can be compared against requirements.</p>\\n</blockquote>\\n<p>The following table summarizes when to fire the <code>AppLaunchComplete</code>, <code>AppDialogLaunch/AppDialogComplete</code>,  and <code>EPGLauchInitiate</code>/<code>EPGLauchComplete</code> beacons and when their timestamps are recorded:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Launch Event</th>\\n<th><strong>Placement</strong></th>\\n<th><strong>Timestamping</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>AppLaunchComplete</td>\\n<td>When the channel home page is fully rendered, or when video playback starts and the channel can responds to commands sent via the remote control (if your channel is launched to direct playback).The system automatically fires an AppLaunchInitiated beacon to marks when your app is initially launched.</td>\\n<td>The first render pass completes after the stop point has been signaled.</td>\\n</tr>\\n<tr>\\n<td>AppDialogLaunch</td>\\n<td>Before signaling AppLaunchComplete, when the channel enters a login dialog, user selection screen, network error dialog or any other dialog/screen where the app waits for user input.</td>\\n<td>The dialog is fully displayed and ready for user interaction.</td>\\n</tr>\\n<tr>\\n<td>AppDialogComplete</td>\\n<td>The channel exits the last dialog before the home screen is rendered.</td>\\n<td>The user dismisses the dialog or a timeout occurs that forces the dialog to exit.</td>\\n</tr>\\n<tr>\\n<td>EPGLaunchInitiate</td>\\n<td>Where your app initiates the display of the channel guide.</td>\\n<td>The last keypress before the start beacon was signaled. If there was no prior keypress, the start beacon signal time.</td>\\n</tr>\\n<tr>\\n<td>EPGLaunchComplete</td>\\n<td>Where the channel guide is fully rendered and operational.</td>\\n<td>The first render pass completes after the stop point has been signaled.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-19\\\">Return Value</h4>\\n<p>When you fire a launch event, the system will return an integer indicating the result of its signaling:</p>\\n<table>\\n<thead>\\n<tr>\\n<th><strong>Return Code</strong></th>\\n<th><strong>Description</strong></th>\\n<th></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>0</td>\\n<td>Success</td>\\n<td>The event was successfully signaled.</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>Not Ready</td>\\n<td>The event cannot be fired until after the AppLaunchComplete beacon has been completed.</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>Invalid</td>\\n<td>An invalid string was passed into the signalBeacon function.</td>\\n</tr>\\n<tr>\\n<td>3</td>\\n<td>Already Signaled</td>\\n<td>An event that can only be fired once (AppLaunchComplete) was signaled again.</td>\\n</tr>\\n<tr>\\n<td>4</td>\\n<td>Wrong Order</td>\\n<td>The completion event was fired before the corresponding initiate event (for example, EPGLaunchComplete was signaled before EPGLaunchInitiate).</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>In addition to the channel launch, dialog launch, and EPG launch times, the Roku OS automatically measures five other certification performance metrics: app compile time, video start time, live start time, channel change time, and channel exit time. You can use the <a href=\\\"/docs/developer-program/debugging/debugging-channels.md\\\">BrightScript console</a> (port 8085) to view a report detailing your channel's performance. See <a href=\\\"/docs/developer-program/debugging/debugging-channels.md\\\">Measuring channel performance</a> for more information.</p>\\n</blockquote>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsgnodefocus.md":"{\n  \"content\": \"<h1 id=\\\"ifsgnodefocus\\\">ifSGNodeFocus</h1>\\n<p>The ifSGNodeFocus interface is used to query and manipulate the remote control focus of the nodes in a SceneGraph node tree.</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNode\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setfocuson-as-boolean-as-boolean\\\">setFocus(on as Boolean) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the current remote control focus to the subject node.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>on</td>\\n<td>Boolean</td>\\n<td>True = Sets the current remote control focus to the subject node. This also automatically removes focus from the node on which it was previously set. <br />False = Removes focus from the subject node if it had it. Setting the remote control focus to false is rarely necessary, and can lead to unexpected behavior.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether focus on the subject node has successfully been updated. </p>\\n<h3 id=\\\"hasfocus-as-boolean\\\">hasFocus() as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Checks whether the subject node has the remote control focus.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the subject node has the remote control focus.</p>\\n<h3 id=\\\"isinfocuschain-as-boolean\\\">isInFocusChain() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks whether the subject node or any of its descendants in the SceneGraph node tree have remote control focus.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the subject node or any of its descendants in the SceneGraph node tree have the remote control focus.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsgnodehttpagentaccess.md":"{\n  \"content\": \"<h1 id=\\\"ifsgnodehttpagentaccess\\\">ifSGNodeHttpAgentAccess</h1>\\n<p>The ifSGNodeHttpAgentAccess interface allows you to get an <a href=\\\"/docs/references/brightscript/components/rohttpagent.md\\\" title=\\\"roHttpAgent\\\">roHttpAgent</a> object from a SceneGraph node, and set an roHttpAgent object for a nod</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosgnode.md\\\" title=\\\"roSGNode\\\">roSGNode</a></td>\\n<td>The roSGNode object is the BrightScript equivalent of SceneGraph XML file node creation</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"gethttpagent-as-object\\\">getHttpAgent() as Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the roHttpAgent object for the node.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The roHttpAgent object for the node, which may be one of the following:</p>\\n<ul>\\n<li>the node roHttpAgent object, if it was set using setHttpAgent()</li>\\n<li>the roHttpAgent object of the closest ancestor node that has an roHttpAgent set</li>\\n<li>the default roHttpAgent object for the application that contains the node</li>\\n</ul>\\n<h3 id=\\\"sethttpagenthttp_agent-as-object-as-boolean\\\">setHttpAgent(HTTP_agent as Object) as Boolean</h3>\\n<p>Sets an roHttpAgent object for the node. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>HTTP_agent</td>\\n<td>Object</td>\\n<td>The roHttpAgent object to be set for the node.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the roHttpAgent object was successfully set.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifslideshow.md":"{\n  \"content\": \"<h1 id=\\\"ifslideshow\\\">ifSlideShow</h1>\\n<blockquote>\\n<p>This interface is deprecated.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roslideshow.md\\\" title=\\\"roSlideShow\\\">roSlideShow</a></td>\\n<td>The Slide Show screen provides the ability to setup a photo slide show to playback a series of images</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setcontentlistcontentlist-as-object-as-void\\\">SetContentList(contentList as Object) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Set the content to be played by the slide show. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArrays\\\">roAssociativeArrays</a> (<a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">Content Meta-Data</a> objects) representing the information for each title to be displayed on screen</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addcontentcontentitem-as-object-as-void\\\">AddContent(contentItem as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Add a new <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\"Content Meta-Data\\\">content metadata</a> item to the end of the content list for the slide show.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentItem</td>\\n<td>Object</td>\\n<td>The content metadata item to be added to the slideshow list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearcontent-as-void\\\">ClearContent() as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Clears all content from the content list.</p>\\n<h3 id=\\\"countbuttons-as-integer\\\">CountButtons() as Integer</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the count of all the buttons added to the slide show screen.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The button count value.</p>\\n<h3 id=\\\"setnextitem-as-integer-isimmediate-as-boolean-as-void\\\">SetNext(item as Integer, isImmediate as Boolean) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Makes the SlideShow object queue a specific slide up as the next slide.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>item</td>\\n<td>Integer</td>\\n<td>The zero-based index of the item in the content list.</td>\\n</tr>\\n<tr>\\n<td>isImmediate</td>\\n<td>Boolean</td>\\n<td>Forces an immediate update to the slideshow.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setperiodseconds-as-integer-as-void\\\">SetPeriod(seconds as Integer) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Specifies the number of seconds that each slide is displayed.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>seconds</td>\\n<td>Integer</td>\\n<td>The number of seconds that each slide is displayed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"settextoverlayholdtimemilliseconds-as-integer-as-void\\\">SetTextOverlayHoldTime(milliseconds as Integer) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Defines the number of milliseconds to display the text overlay for each slide.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>milliseconds</td>\\n<td>Integer</td>\\n<td>The number of milliseconds to display the text overlay. If this is set to 0, the overlay is off.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"pause-as-boolean\\\">Pause() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Puts the slide show into pause mode. Setting the player to pause mode if it is not in play mode generates in  error. </p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag that indicates whether the slide show was successfully set to pause mode.</p>\\n<h3 id=\\\"resume-as-boolean\\\">Resume() as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Puts the slide show into play mode starting from the pause point. Setting the player to play mode when it is not in pause mode generates in  error. </p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag that indicates whether the slide show was successfully set to pause mode.</p>\\n<h3 id=\\\"settextoverlayisvisibleisvisible-as-boolean-as-void\\\">SetTextOverlayIsVisible(IsVisible as Boolean) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Displays the overlay. This method is OR'd with the overlay hold time; therefore, even if <strong>IsVisible</strong> is false, the overlay is displayed during the slide's overlay hold time. </p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>IsVisible</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether the overlay is displayed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-boolean\\\">AddButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Adds a button to the screen. The buttons are displayed in a standard location on the screen and appear in the order added. When the button is pressed, the script will receive an event from the application containing the ID of the button pressed</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID used to uniquely identify the button instance.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title used for the button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added. </p>\\n<h3 id=\\\"addratingbuttonid-as-integer-rating-as-integer-as-boolean\\\">AddRatingButton(id as Integer, rating as Integer) as Boolean</h3>\\n<p>Adds a star rating button to the screen. This button is displayed in a standard location on the screen and appear in the order added.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>AddRatingButton</td>\\n<td>Boolean</td>\\n<td>${addratingbuttonparamTable}</td>\\n<td>True/False</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The ID used to uniquely identify the rating button instance.</td>\\n</tr>\\n<tr>\\n<td>rating</td>\\n<td>Integer</td>\\n<td>A value between 1-100 that represents the number of stars (1 to 5) to be displayed. Essentially this a percentage value: &#x3C;20% = 1 star.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the rating button was successfully added. </p>\\n<h3 id=\\\"clearbuttons-as-void\\\">ClearButtons() as Void</h3>\\n<p>Clears all of the buttons from the screen and resets the array of buttons back to default with no buttons set.</p>\\n<h3 id=\\\"setunderscanpercentage-as-float-as-void\\\">SetUnderscan(percentage as Float) as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Set the percentage to reduce the image size by to compensate for monitor overscan (for example, 2.5 for 2.5%).</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>percentage</td>\\n<td>Float</td>\\n<td>The percentage to be used to reduce the image size.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdisplaymodedisplaymode-as-string-as-void\\\">SetDisplayMode(displayMode as String) as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Sets the mode for displaying slideshow images. This allows images to be either scaled to completely fill the screen (scale-to-fill) or scaled to fit inside the screen (scale-to-fit) while maintaining aspect ratio.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>displayMode</td>\\n<td>String</td>\\n<td>The display mode, which may be one of the following values: <ul>\\n<li>scale-to-fill – scale image to completely fill the rectangle of the bounding frame (Default)</li>\\n<li>scale-to-fit – scale image to fit horizontally or vertically as appropriate while still maintaining aspect ratio. Note that scale-to-fit may result in pillar-box or letter-box display of images.</li>\\n<li>zoom-to-fill – scales and crops image to maintain aspect ratio and completely fill the rectangle of the bounding frame.</li>\\n<li>photo-fit – Uses several methods to fit the image with a different aspect ratio to the screen. First, it will asymmetrically scale up to a maximum of 5%. Second, for landscape images, if vertical cropping is necessary, it will remove two lines off the bottom for every one line off the top up to a maximum of 30% of the image. For all images, if horizontal cropping is necessary it will crop an equal amount from both sides. </li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setmaxupscalemaxupscale-as-float-as-void\\\">SetMaxUpscale(maxUpscale as Float) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Set the maximum scale factor for scale-to-fill, zoom-to-fill, and photo-fit modes.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>maxUpscale</td>\\n<td>Float</td>\\n<td>The maximum scale factor to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getmaxupscale-as-float\\\">GetMaxUpscale() as Float</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Retrieves the maximum scale factor. </p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>The scale factor.</p>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Displays or refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was successfully displayed. </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Closes the screens and delete the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack</p>\\n<h3 id=\\\"setbordercolorcolor-as-string-as-void\\\">SetBorderColor(color as String) as Void</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Sets the border color used as the background around the slide.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>color</td>\\n<td>String</td>\\n<td>The HTML hex color value to be used as the border.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setlooploop-as-boolean-as-void\\\">SetLoop(loop as Boolean) as Void</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Makes the slideshow loop through all the slides.</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>loop</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to loop through all the slides.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocket.md":"{\n  \"content\": \"<h1 id=\\\"ifsocket\\\">ifSocket</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\" title=\\\"roDataGramSocket\\\">roDataGramSocket</a></td>\\n<td>The roDataGramSocket component enables Brightscript apps to send and receive UDP packets</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a></td>\\n<td>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<p>These are the basic binding and data transfer operations used on both <a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a> and <a href=\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\" title=\\\"roDataGramSocket\\\">roDataGramSocket</a>. They are synchronous or asynchronous as determined by the socket's blocking behavior. If there is a valid assigned <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a>, the blocking behavior is considered asynchronous (non-blocking). Otherwise, the blocking behavior is considered synchronous.</p>\\n<h3 id=\\\"senddata-as-object-startindex-as-integer-length-as-integer-as-integer\\\">Send(data as Object, startIndex as Integer, length as Integer) as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sends up to length bytes of data to the socket.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>data</td>\\n<td>Object</td>\\n<td>A <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> containing the data to be sent.</td>\\n</tr>\\n<tr>\\n<td>startIndex</td>\\n<td>Integer</td>\\n<td>The index of the byte array from which to start sending data.</td>\\n</tr>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The amount of data to be sent to the socket.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The number of bytes sent.</p>\\n<h3 id=\\\"sendstrdata-as-string-as-integer\\\">SendStr(data as String) as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sends the whole string to the socket, if possible.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>data</td>\\n<td>String</td>\\n<td>A string containing the data to be sent.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The number of bytes sent.</p>\\n<h3 id=\\\"receivedata-as-object-startindex-as-integer-length-as-integer-as-integer\\\">Receive(data as Object, startIndex as Integer, length as Integer) as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Reads data from the socket. </p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>data</td>\\n<td>Object</td>\\n<td>A <a href=\\\"/docs/references/brightscript/components/robytearray.md\\\" title=\\\"roByteArray\\\">roByteArray</a> containing the data to be stored.</td>\\n</tr>\\n<tr>\\n<td>startIndex</td>\\n<td>Integer</td>\\n<td>The index of the byte array from which to start reading data.</td>\\n</tr>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The amount of data to be read from the socket.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The number of bytes read.</p>\\n<h3 id=\\\"receivestrlength-as-integer-as-string\\\">ReceiveStr(length as Integer) as String</h3>\\n<p>Reads data from the socket and stores the result in a string.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>length</td>\\n<td>Integer</td>\\n<td>The amount of data to be read from the socket.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The received byte length string.  If no bytes are received, the string is empty.</p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<p>Performs an orderly close of socket. After a close, most operations on the socket will return invalid.</p>\\n<p>On blocking sockets, this clears the receive buffer and blocks until the send buffer is emptied. Neither buffer may be read or written afterward.</p>\\n<p>On non-blocking sockets, both the send and the receive buffer may be read but not written.</p>\\n<h3 id=\\\"setaddresssockaddr-as-object-as-boolean\\\">SetAddress(sockAddr as Object) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the address using a BSD bind() call</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>SetAddress</td>\\n<td>Boolean</td>\\n<td>${setaddressparamTable}</td>\\n<td>True/False</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sockAddr</td>\\n<td>Object</td>\\n<td>An roSocketAddress.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the address was successfully set. </p>\\n<h3 id=\\\"getaddress-as-object\\\">GetAddress() as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the roSocketAddress object bound to this socket.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>roSocketAddress Object.</p>\\n<h3 id=\\\"setsendtoaddresssockaddr-as-object-as-boolean\\\">SetSendToAddress(sockAddr as Object) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Sets the remote address for next message to be sent.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sockAddr</td>\\n<td>Object</td>\\n<td>An roSocketAddress.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the address was successfully stored as the first half of underlying BSD sendto() call.</p>\\n<h3 id=\\\"getsendtoaddress-as-object\\\">GetSendToAddress() as Object</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the roSocketAddress for the remote address of the next message to be sent. This method can also be used to return the remote address on newly accepted sockets.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The roSocketAddress for the remote address of the next message to be sent.</p>\\n<h3 id=\\\"getreceivedfromaddress-as-object\\\">GetReceivedFromAddress() as Object</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns the roSocketAddress for the remote address of the last message received via the <a href=\\\"#receivedata-as-object-startindex-as-integer-length-as-integer-as-integer\\\">receive()</a> method. This method can also be used to return the remote address on newly accepted sockets.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>The roSocketAddress for the remote address of the last message received.</p>\\n<h3 id=\\\"getcountrcvbuf-as-integer\\\">GetCountRcvBuf() as Integer</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Returns the number of bytes in the receive buffer.</p>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>Number of bytes.</p>\\n<h3 id=\\\"getcountsendbuf-as-integer\\\">GetCountSendBuf() as Integer</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns the number of bytes in the send buffer.</p>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>Number of bytes.</p>\\n<h3 id=\\\"status-as-integer\\\">Status() as Integer</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Indicates whether the last operation was successful.</p>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>This method returns 0 if the last operation was successful or an error number if it failed.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketaddress.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketaddress\\\">ifSocketAddress</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosocketaddress.md\\\" title=\\\"roSocketAddress\\\">roSocketAddress</a></td>\\n<td>The roSocketAddress is used by the roStreamSocket and roDataGramSocket components for TCP and UDP traffic respectively</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setaddressaddress-as-string-as-boolean\\\">SetAddress(address as String) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the IPV4 address. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>address</td>\\n<td>String</td>\\n<td>The string consists of a hostname, optionally followed by a colon and a decimal port number. The hostname may be either dotted quad (such as \\\"192.168.1.120\\\") or a DNS name (such as \\\"roku.com\\\"). If a name is given, a DNS lookup is performed to convert it to dotted quad. Use IsAddressValid() to determine the result of the DNS lookup. Example: \\\"192.168.1.120:8888\\\" or \\\"roku.com\\\".</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the IPV4 address was successfully set.</p>\\n<h3 id=\\\"getaddress-as-string\\\">GetAddress() as String</h3>\\n<p>Returns the IPV4 address in dotted quad format (for example, \\\"192.168.1.120:8888\\\").</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The IPV4 address.</p>\\n<h3 id=\\\"sethostnamehostname-as-string-as-boolean\\\">SetHostName(hostname as String) as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the hostname. The port number is unchanged. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>hostname</td>\\n<td>String</td>\\n<td>The hostname to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the hostname was successfully set.</p>\\n<h3 id=\\\"gethostname-as-string\\\">GetHostName() as String</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the hostname.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The hostname. </p>\\n<h3 id=\\\"setportport-as-integer-as-boolean\\\">SetPort(port as Integer) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the port number. The hostname is unchanged. </p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>port</td>\\n<td>Integer</td>\\n<td>The port number to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the port number was successfully set.</p>\\n<h3 id=\\\"getport-as-integer\\\">GetPort() as Integer</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the port number.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>The port number. </p>\\n<h3 id=\\\"isaddressvalid-as-boolean\\\">IsAddressValid() as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Checks whether the component contains a valid IP address.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the component contains a valid IP address.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketasync.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketasync\\\">ifSocketAsync</h1>\\n<p>The ifSocketAsync interface provides asynchronous socket features that utilize a full-featured select loop in the Roku OS that communicates to the application using a BrightScript <a href=\\\"/docs/references/brightscript/components/romessageport.md\\\" title=\\\"roMessagePort\\\">roMessagePort</a>. This interface is valid on roStreamSocket and roDataGramSocket objects that were assigned a BrightScript port via SetMessagePort().</p>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\" title=\\\"roDataGramSocket\\\">roDataGramSocket</a></td>\\n<td>The roDataGramSocket component enables Brightscript apps to send and receive UDP packets</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a></td>\\n<td>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isreadable-as-boolean\\\">IsReadable() as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Checks whether underlying select determines non-blocking read is possible.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether underlying select determines non-blocking read is possible.</p>\\n<h3 id=\\\"iswritable-as-boolean\\\">IsWritable() as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Checks whether underlying select determines non-blocking write is possible.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether underlying select determines non-blocking write is possible.</p>\\n<h3 id=\\\"isexception-as-boolean\\\">IsException() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks whether underlying select determines non-blocking read of OOB data is possible.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether underlying select determines non-blocking read of OOB data is possible.</p>\\n<h3 id=\\\"notifyreadableenable-as-boolean-as-void\\\">NotifyReadable(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Enables roSocketEvent events to be sent via the message port when the underlying socket becomes readable.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether roSocketEvent events are to be sent when the underlying socket becomes readable.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"notifywritableenable-as-boolean-as-void\\\">NotifyWritable(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Enables roSocketEvent events to be sent via the message port when the underlying socket becomes writable.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether roSocketEvent events are to be sent when the underlying socket becomes writable.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"notifyexceptionenable-as-boolean-as-void\\\">NotifyException(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Enables roSocketEvent events to be sent via the message port when the underlying socket gets an exception or OOB data.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether roSocketEvent events are to be sent when the underlying socket gets an exception or OOB data.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getid-as-integer\\\">GetID() as Integer</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns a unique identifier that can be compared to the value returned by the <a href=\\\"/docs/references/brightscript/events/rosocketevent.md#getsocketid-as-integer\\\">roSocketEvent.getSocketID()</a> method to match the underlying socket to receive the event.</p>\\n<h4 id=\\\"return-paramters\\\">Return Paramters</h4>\\n<p>A unique ID. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketcastoption.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketcastoption\\\">ifSocketCastOption</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\" title=\\\"roDataGramSocket\\\">roDataGramSocket</a></td>\\n<td>The roDataGramSocket component enables Brightscript apps to send and receive UDP packets</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<p>Only the <a href=\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\" title=\\\"roDataGramSocket\\\">roDataGramSocket</a> component supports the ifSocketCastOption multicast interface. The <a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a> component does not support multicast.</p>\\n<h3 id=\\\"getbroadcast-as-boolean\\\">GetBroadcast() as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Checks whether broadcast messages may be sent or received.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether broadcast messages may be sent or received.</p>\\n<h3 id=\\\"setbroadcastenable-as-boolean-as-boolean\\\">SetBroadcast(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Enables broadcast messages to be sent or received. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether broadcast messages may be sent or received.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether this operation succeeded.</p>\\n<h3 id=\\\"joingroupipaddress-as-object-as-boolean\\\">JoinGroup(ipAddress as Object) as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Joins a specific multicast group.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ipAddress</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roSocketAddress\\\">roSocketAddress</a> representing the group to be joined. IPV4 multicast addresses are in the range of 224.0.0.0 through 239.255.255.255.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether this operation was successful.</p>\\n<h3 id=\\\"dropgroupipaddress-as-object-as-boolean\\\">DropGroup(ipAddress as Object) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Drops out of a specific multicast group.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ipAddress</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roSocketAddress\\\">roSocketAddress</a> representing the group to leave. IPV4 multicast addresses are in the range of 224.0.0.0 through 239.255.255.255.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether this operation was successful.</p>\\n<h3 id=\\\"getmulticastloop-as-boolean\\\">GetMulticastLoop() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Checks whether multicast messages are enabled for local loopback.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether multicast messages are enabled for local loopback. If this flag is true, multicast message sent locally are to be received locally.</p>\\n<h3 id=\\\"setmulticastloopenable-as-boolean-as-boolean\\\">SetMulticastLoop(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Enables local loopback of multicast messages.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether local loopback of multicast messages; otherwise do not send or receive broadcast messages.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether this operation was successful.</p>\\n<h3 id=\\\"getmulticastttl-as-integer\\\">GetMulticastTTL() as Integer</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the TTL integer value for multicast messages. This is the number of hops a packet is allowed before a router drops the packet.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The multicast messages value.</p>\\n<h3 id=\\\"setmulticastttlttl-as-integer-as-boolean\\\">SetMulticastTTL(ttl as Integer) as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Sets the TTL integer value for multicast messages. </p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ttl</td>\\n<td>Integer</td>\\n<td>The number of hops a packet is allowed before a router drops the packet</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>A flag indicating whether the TTL value was successfully set.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketconnection.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketconnection\\\">ifSocketConnection</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a></td>\\n<td>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<p>Each of these operations except listen() is either synchronous or asynchronous as determined by the socket's blocking behavior. If there is a valid assigned roMessagePort, the blocking behavior is considered asynchronous (non-blocking). Otherwise, the blocking behavior is considered synchronous.</p>\\n<h3 id=\\\"listenbacklog-as-integer-as-boolean\\\">Listen(backlog as Integer) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Puts the socket into the listen state. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>backlog</td>\\n<td>Integer</td>\\n<td>The limit for the queue of incoming connections</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether listening can be done (generally, if bound address is valid).</p>\\n<h3 id=\\\"islistening-as-boolean\\\">IsListening() as Boolean</h3>\\n<p>Checks whether if the <a href=\\\"#listenbacklog-as-integer-as-boolean\\\">listen()</a> method has been successfully called on this socket.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the <a href=\\\"#listenbacklog-as-integer-as-boolean\\\">listen()</a> method has been successfully called on this socket.</p>\\n<h3 id=\\\"connect-as-boolean\\\">Connect() as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Establishes a connection. </p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether a socket connection has successfully been created. The connection might still not be complete if the socket is non-blocking</p>\\n<h3 id=\\\"accept-as-object\\\">Accept() as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Accepts incoming requests.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>An roStreamSocket if the connection is pending; invalid otherwise. Use status to distinguish among success (eSuccess() or isConnected()), not ready (eOK()), and error.</p>\\n<h3 id=\\\"isconnected-as-boolean\\\">IsConnected() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Checks whether a <a href=\\\"#connect-as-boolean\\\">connect</a> or <a href=\\\"#accept-as-object\\\">accept</a> function has been completed on this socket. </p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether a connection has been established or accepted on this socket.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketconnectionoption.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketconnectionoption\\\">ifSocketConnectionOption</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a></td>\\n<td>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getkeepalive-as-boolean\\\">GetKeepAlive() as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Checks whether keep alive is set. If keep alive is set, occasional no-data packets are sent to keep the connection alive. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether keep alive is set. </p>\\n<h3 id=\\\"setkeepaliveenable-as-boolean-as-boolean\\\">SetKeepAlive(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sends no-data packets to keep the connection alive. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether keep alive is enabled.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether keep alive was successfully set.</p>\\n<h3 id=\\\"getlinger-as-integer\\\">GetLinger() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the max time in seconds that the socket close() blocks to allow send data to be flushed in synchronous mode.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The max time in seconds.</p>\\n<h3 id=\\\"setlingertime-as-integer-as-boolean\\\">SetLinger(time as Integer) as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the max time in seconds that the socket close() blocks to allow send data to be flushed in synchronous mode. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>time</td>\\n<td>Integer</td>\\n<td>The max time.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the linger was successfully set.</p>\\n<h3 id=\\\"getmaxseg-as-integer\\\">GetMaxSeg() as Integer</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the max TCP segment size.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The segment size.</p>\\n<h3 id=\\\"setmaxsegtime-as-integer-as-boolean\\\">SetMaxSeg(time as Integer) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Sets the max TCP segment size. </p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>time</td>\\n<td>Integer</td>\\n<td>The max TCP segment size.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the max TCP segment size was successfully set.</p>\\n<h3 id=\\\"getnodelay-as-boolean\\\">GetNoDelay() as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Checks whether the no delay property is enabled on the socket. This means that data is sent as soon as it is available rather than once there is enough data to fill a segment.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the no delay property is enabled. </p>\\n<h3 id=\\\"setnodelayenable-as-boolean-as-boolean\\\">SetNoDelay(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Enables the no delay property on the socket. This means that data is sent as soon as it is available rather than once there is enough data to fill a segment.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether the no delay property is enabled.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>A flag indicating whether the no delay property was successfully set. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketconnectionstatus.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketconnectionstatus\\\">ifSocketConnectionStatus</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a></td>\\n<td>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"econnaborted-as-boolean\\\">eConnAborted() as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Checks whether a connection aborted error (ECONNABORTED) has occurred. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether an ECONNABORTED error has occurred. </p>\\n<h3 id=\\\"econnrefused-as-boolean\\\">eConnRefused() as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Checks whether a connection refused (ECONNREFUSED) has occurred. </p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether an ECONNREFUSED error has occurred. </p>\\n<h3 id=\\\"econnreset-as-boolean\\\">eConnReset() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks whether a connection reset error (ECONNRESET) has occurred. </p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether an ECONNRESET error has occurred. </p>\\n<h3 id=\\\"eisconn-as-boolean\\\">eIsConn() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Checks whether an is connected error (EISCONN) has occurred. </p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether an EISCONN error has occurred. </p>\\n<h3 id=\\\"enotconn-as-boolean\\\">eNotConn() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Checks whether a not connected error (ENOTCONN) has occurred. </p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether an ENOTCONN error has occurred. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketoption.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketoption\\\">ifSocketOption</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\" title=\\\"roDataGramSocket\\\">roDataGramSocket</a></td>\\n<td>The roDataGramSocket component enables Brightscript apps to send and receive UDP packets</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a></td>\\n<td>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getttl-as-integer\\\">GetTTL() as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the TTL (Time To Live) value for all IP packets on the socket.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The TTL value.</p>\\n<h3 id=\\\"setttlttl-as-integer-as-boolean\\\">SetTTL(ttl as Integer) as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the TTL value for all IP packets on the socket. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ttl</td>\\n<td>Integer</td>\\n<td>The TTL value to be used for IP packets on the socket.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the TTL was successfully set. </p>\\n<h3 id=\\\"getreuseaddr-as-boolean\\\">GetReuseAddr() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks whether an address that has been previously assigned can be immediately reassigned.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the previously assigned address can be reassigned.</p>\\n<h3 id=\\\"setreuseaddrreuse-as-boolean-as-dynamic\\\">SetReuseAddr(reuse as Boolean) as Dynamic</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Enables a previously assigned address to be immediately reassigned. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Reuse</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether the address can be reused.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the reuse address feature was successfully set. </p>\\n<h3 id=\\\"getoobinline-as-boolean\\\">GetOOBInline() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Checks whether Out Of Bounds (OOB) data is read inline with regular data.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether OOB data is read inline with regular data.</p>\\n<h3 id=\\\"setoobinlineinline-as-boolean-as-boolean\\\">SetOOBInline(inline as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Enables Out Of Bounds (OOB) data to be read inline with regular data.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>inline</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether OOB data is read inline.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the OOB inline data feature was successfully set. </p>\\n<h3 id=\\\"getsendbuf-as-integer\\\">GetSendBuf() as Integer</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the current send buffer size.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The buffer size.</p>\\n<h3 id=\\\"setsendbufsize-as-integer-as-boolean\\\">SetSendBuf(size as Integer) as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Sets the current send buffer size. </p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>size</td>\\n<td>Integer</td>\\n<td>The send buffer size to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>A flag indicating whether the send buffer size was successfully set.</p>\\n<h3 id=\\\"getrcvbuf-as-integer\\\">GetRcvBuf() as Integer</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns the current receive buffer size.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The buffer size.</p>\\n<h3 id=\\\"setrcvbufsize-as-integer-as-boolean\\\">SetRcvBuf(size as Integer) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets the current receive buffer size. </p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>size</td>\\n<td>Integer</td>\\n<td>The receive buffer size to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>A flag indicating whether the receive buffer size was successfully set.</p>\\n<h3 id=\\\"getsendtimeout-as-integer\\\">GetSendTimeout() as Integer</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Returns the current send timeout.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>The number of seconds for the send timeout.</p>\\n<h3 id=\\\"setsendtimeouttimeout-as-integer-as-boolean\\\">SetSendTimeout(timeout as Integer) as Boolean</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Sets the current send timeout (in seconds).</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>timeout</td>\\n<td>Integer</td>\\n<td>The number of seconds for the send timeout.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>A flag indicating whether the send timeout was successfully set.</p>\\n<h3 id=\\\"getreceivetimeout-as-integer\\\">GetReceiveTimeout() as Integer</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Returns the current receive timeout.</p>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>The number of seconds for the receive timeout.</p>\\n<h3 id=\\\"setreceivetimeouttimeout-as-integer-as-boolean\\\">SetReceiveTimeout(timeout as Integer) as Boolean</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Sets the current receive timeout (in seconds).</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>timeout</td>\\n<td>Integer</td>\\n<td>The number of seconds for the receive timeout.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>A flag indicating whether the receive timeout was successfully set.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsocketstatus.md":"{\n  \"content\": \"<h1 id=\\\"ifsocketstatus\\\">ifSocketStatus</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodatagramsocket.md\\\" title=\\\"roDataGramSocket\\\">roDataGramSocket</a></td>\\n<td>The roDataGramSocket component enables Brightscript apps to send and receive UDP packets</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostreamsocket.md\\\" title=\\\"roStreamSocket\\\">roStreamSocket</a></td>\\n<td>The roStreamSocket component enables BrightScript apps to accept and connect to TCP streams as well as send and receive data with them</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"eagain-as-boolean\\\">eAgain() as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Checks whether an EAGAIN error has occurred. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether an EAGAIN error has occurred. </p>\\n<h3 id=\\\"ealready-as-boolean\\\">eAlready() as Boolean</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Checks whether an EALREADY error has occurred. </p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether an EALREADY error has occurred. </p>\\n<h3 id=\\\"ebadaddr-as-boolean\\\">eBadAddr() as Boolean</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Checks whether an EBADADDR error has occurred. </p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether an EBADADDR error has occurred. </p>\\n<h3 id=\\\"edestaddrreq-as-boolean\\\">eDestAddrReq() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Checks whether an EDESTADDRREQ error has occurred. </p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether an EDESTADDRREQ error has occurred. </p>\\n<h3 id=\\\"ehostunreach-as-boolean\\\">eHostUnreach() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Checks whether an EHOSTUNREACH error has occurred. </p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether an EHOSTUNREACH error has occurred. </p>\\n<h3 id=\\\"einvalid-as-boolean\\\">eInvalid() as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Checks whether an EINVALID error has occurred. </p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether an EINVALID error has occurred. </p>\\n<h3 id=\\\"einprogress-as-boolean\\\">eInProgress() as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Checks whether an EINPROGRESS error has occurred. </p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether an EINPROGRESS error has occurred. </p>\\n<h3 id=\\\"ewouldblock-as-boolean\\\">eWouldBlock() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Checks whether an EWOULDBLOCK error has occurred. </p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>A flag indicating whether an EWOULDBLOCK error has occurred. </p>\\n<h3 id=\\\"esuccess-as-boolean\\\">eSuccess() as Boolean</h3>\\n<p>Checks whether there are no errors (the error number is 0).</p>\\n<h3 id=\\\"eok-as-boolean\\\">eOK() as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Checks whether there is no hard error, but possibly one of the following async conditions: EAGAIN, EALREADY, EINPROGRESS, EWOULDBLOCK.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>A flag indicating whether an EOK error has occurred. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsourceidentity.md":"{\n  \"content\": \"<h1 id=\\\"ifsourceidentity\\\">ifSourceIdentity</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/events/rochannelstoreevent.md\\\" title=\\\"roChannelStoreEvent\\\">roChannelStoreEvent</a></td>\\n<td>The roChannelStore sends an roChannelStoreEvent in response to a call to any of several Get* methods in ifChannelStore</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/events/rourlevent.md\\\" title=\\\"roUrlEvent\\\">roUrlEvent</a></td>\\n<td>The roUrlTransfer component sends the roUrlEvent</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getsourceidentity-as-integer\\\">GetSourceIdentity() as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the ID currently associated with this source (event generating) or event object</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The ID value of the source or event object.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifspringboardscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifspringboardscreen\\\">ifSpringboardScreen</h1>\\n<blockquote>\\n<p>This interface is deprecated.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rospringboardscreen.md\\\" title=\\\"roSpringboardScreen\\\">roSpringboardScreen</a></td>\\n<td>The Springboard Screen shows detailed information about an individual piece of content and provides options for actions that may be taken on that content</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setcontentcontent-as-object-as-void\\\">SetContent(content as Object) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the content to be displayed on the Springboard Screen. </p>\\n<p>If the content type is audio (ContentType == audio), a progress indicator can be specified.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>content</td>\\n<td>Object</td>\\n<td>A <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">content metadata</a> object (an <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a>) describing the attributes for the title.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdescriptionstylestyle-as-string-as-void\\\">SetDescriptionStyle(style as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the springboard style for the poster screen. Styles allow the poster screen to look differently for different types of content or different usage. </p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>style</td>\\n<td>String</td>\\n<td>The screen style, which may be one of the following values: <ul>\\n<li>\\\"audio\\\": All tags on audio screen above are substituted with content metadata.</li>\\n<li>\\\"movie\\\": All tags on the video screen above are substituted with content metadata.</li>\\n<li>\\\"video\\\": All tags except  and  are on the video screen above are replaced with content metadata.</li>\\n<li>\\\"generic\\\": Only the  and  tags on the video screen above are replaced with content metadata.</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setprogressindicatorenabledenable-as-boolean-as-void\\\">SetProgressIndicatorEnabled(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Displays a progress indicator. This is only applicable if the content type is audio (ContentType == audio).</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to display a progress indicator for audio content.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setprogressindicatorprogress-as-integer-max-as-integer-as-void\\\">SetProgressIndicator(progress as Integer, max as Integer) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the progress indicator to be progress/max complete. </p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>progress</td>\\n<td>Integer</td>\\n<td>The amount of progress that has been completed.</td>\\n</tr>\\n<tr>\\n<td>max</td>\\n<td>Integer</td>\\n<td>The maximum size of the operation.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>screen = CreateObject(\\\"roSpringboardScreen\\\")\\nscreen.setProgressIndicatorEnabled(true)\\nscreen.show()\\nscreen.setProgressIndicator(250, 1000) ' 25 percent complete\\n</code></pre>\\n<h3 id=\\\"addbuttonbuttonid-as-integer-title-as-string-as-boolean\\\">AddButton(buttonID as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds a button to the screen. The buttons are displayed in a standard location on the screen and appear in the order added. When the button is pressed, the script will receive an event from the application containing the ID of the button pressed and allowing the script to perform the desired action for that case.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>buttonID</td>\\n<td>Integer</td>\\n<td>The ID used to uniquely identify the button instance.</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title of the button.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added.</p>\\n<h3 id=\\\"addthumbsupdownbuttonbuttonid-as-integer-thumbrating-as-integer-as-boolean\\\">AddThumbsUpDownButton(buttonID as Integer, thumbRating as Integer) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Adds a thumbs up/down button to the screen. This is a special type of button that is displayed in the standard location on the screen and appears in the order added sequenced with other buttons. When the button is pressed, the script will receive an event from the application indicating containing the ID of the button pressed and allowing the script to perform the desired action for that case. </p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>buttonID</td>\\n<td>Integer</td>\\n<td>The ID used to uniquely identify the button instance.</td>\\n</tr>\\n<tr>\\n<td>thumbRating</td>\\n<td>Integer</td>\\n<td>The rating, which determines how the button appears on the screen. This may be one of the following values: <ul>\\n<li>-1 = thumbs down</li>\\n<li>0 = no rating</li>\\n<li>1 = thumbs up</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added.</p>\\n<h3 id=\\\"addthumbsupdownbuttonwithtipsbuttonid-as-integer-thumbrating-as-integer-tiptext-as-object-as-boolean\\\">AddThumbsUpDownButtonWithTips(buttonID as Integer, thumbRating as Integer, tipText as Object) as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Adds a thumbs up/down button with tip text to the screen. This is a special type of button that is displayed in the standard location on the screen and appears in the order added sequenced with other buttons. When the button is pressed, the script will receive an event from the application indicating containing the ID of the button pressed and allowing the script to perform the desired action for that case. </p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>buttonID</td>\\n<td>Integer</td>\\n<td>The ID used to uniquely identify the button instance.</td>\\n</tr>\\n<tr>\\n<td>thumbRating</td>\\n<td>Integer</td>\\n<td>The rating, which determines how the button appears on the screen. This may be one of the following values: <ul>\\n<li>-1 = thumbs down</li>\\n<li>0 = no rating</li>\\n<li>1 = thumbs up</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>tipText</td>\\n<td>Object</td>\\n<td>An array of strings (size 2) which lets the script override the default tip text [\\\"didn't like it\\\", \\\"liked it\\\"]</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added.</p>\\n<h3 id=\\\"addratingbuttonbuttonid-as-integer-userrating-as-integer-aggregaterating-as-integer-as-boolean\\\">AddRatingButton(buttonID as Integer, userRating as Integer, aggregateRating as Integer) as Boolean</h3>\\n<p>Adds a star rating button to the screen. This button is displayed in the menu area of the screen and appears in the order added. When pressed, the button returns the userRating in the event data field.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>buttonID</td>\\n<td>Integer</td>\\n<td>The ID used to uniquely identify the button instance.</td>\\n</tr>\\n<tr>\\n<td>userRating</td>\\n<td>Integer</td>\\n<td>A value between 1-100 that represents the number of stars that the user rated the content. A value of 1-20 corresponds to 1 star, 21-40 corresponds to 2 stars, etc.<br /><br />The userRating takes precedence and determines the color of the buttons if set.</td>\\n</tr>\\n<tr>\\n<td>aggregateRating</td>\\n<td>Integer</td>\\n<td>The total average rating from all users. Half-stars maybe displayed for this rating.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setstaticratingenabledenable-as-boolean-as-void\\\">SetStaticRatingEnabled(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Sets the display of the static rating stars on or off.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to display static rating stars.<br /><br />Set this flag to false to use the ratings button or disable ratings on screen. This will remove this control from the screen. The extra space available will be used to display additional actors</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearbuttons-as-void\\\">ClearButtons() as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Clears all of the buttons from the screen and resets the array of buttons back to default with no buttons set.</p>\\n<h3 id=\\\"setbreadcrumbtextlocation1-as-string-location2-as-string-as-void\\\">SetBreadcrumbText(location1 as String, location2 as String) as Void</h3>\\n<p>Sets the two-part navigational title to be displayed on this screen. The breadcrumb text shows the current and the previous locations in the application hierarchy (e.g. TV – Friends). If both location values are set, the application will display the title in breadcrumb format. If only the first location is set, the application will display the specified text in the title area like the <a href=\\\"#settitletitle-as-string-as-void\\\">SetTitle()</a> method.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Location1</td>\\n<td>String</td>\\n<td>The text to be used for breadcrumb 1.</td>\\n</tr>\\n<tr>\\n<td>Location2</td>\\n<td>String</td>\\n<td>The text to be used for breadcrumb 2.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbenabledenable-as-boolean-as-void\\\">SetBreadcrumbEnabled(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Shows or hides the breadcrumb text in the title area.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to display the breadcrumb text.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"prefetchpostersdposterurl-as-string-hdposterurl-as-string-as-voidmet\\\">PrefetchPoster(sdPosterURL as String, hdPosterURL as String) as Voidmet</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Allows the screen to pre-fetch the poster images before the screen is displayed as a display optimization technique. This is useful when doing left-right navigation between springboard screens. The pre-fetch is done, loading the image cache and then the screen is displayed.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sdPosterURL</td>\\n<td>String</td>\\n<td>The URL of the standard definition poster image.</td>\\n</tr>\\n<tr>\\n<td>hdPosterURL</td>\\n<td>String</td>\\n<td>The URL of the high definition poster image.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"allowupdatesallow-as-boolean-as-void\\\">AllowUpdates(allow as Boolean) as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Refreshes the display. When adding multiple buttons to the springboard dynamically, you may want  to defer screen updates temporarily to avoid flashing. For example, call AllowUpdates(false), add several buttons, and then call AllowUpdates(true) to refresh the display.</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>allow</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to refresh the display.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"countbuttons-as-integer\\\">CountButtons() as Integer</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>CountButtons</td>\\n<td>Integer</td>\\n<td>The number of buttons in the button menu</td>\\n<td>Returns the count of the number of buttons in the button menu on the Springboard.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"allownavleftallow-as-boolean-as-void\\\">AllowNavLeft(allow as Boolean) as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Enables navigating LEFT on the springboard screen (it is enabled by default).</p>\\n<h4 id=\\\"parameters-13\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>allow</td>\\n<td>Boolean</td>\\n<td>True = Pressing LEFT sends an roSpringboardScreenEvent /isRemoteKeyPressed() event to the screen's message port.<br /><br />False = Pressing LEFT plays a deadend sound.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"allownavrightallow-as-boolean-as-void\\\">AllowNavRight(allow as Boolean) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Enables navigating RIGHT on the springboard screen  (it is enabled by default). </p>\\n<h4 id=\\\"parameters-14\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>allow</td>\\n<td>Boolean</td>\\n<td>True = Pressing RIGHT sends an roSpringboardScreenEvent /isRemoteKeyPressed() event to the screen's message port.<br /><br />False = Pressing RIGHT plays a deadend sound.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"allownavrewindallow-as-boolean-as-void\\\">AllowNavRewind(allow as Boolean) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Enables the rewind remote event to be sent to the script (it is enabled by default). </p>\\n<h4 id=\\\"parameters-15\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>allow</td>\\n<td>Boolean</td>\\n<td>True = Pressing REWIND sends an roSpringboardScreenEvent /isRemoteKeyPressed() event to the screen's message port.<br /><br />False = Pressing REWIND plays a deadend sound.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"allownavfastforwardallow-as-boolean-as-void\\\">AllowNavFastForward(allow as Boolean) as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Enables the fast forward remote event to be sent to the script (it is enabled by default). </p>\\n<h4 id=\\\"parameters-16\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>allow</td>\\n<td>Boolean</td>\\n<td>True = Pressing FAST FORWARD sends an roSpringboardScreenEvent /isRemoteKeyPressed() event to the screen's message port.<br /><br />False = Pressing FAST FORWARD plays a deadend sound.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setposterstylestyle-as-string-as-void\\\">SetPosterStyle(style as String) as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Sets the display style for the springboard screen. The default style is dependent on the content type of the poster. </p>\\n<h4 id=\\\"parameters-17\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>style</td>\\n<td>String</td>\\n<td>The display style, which enables the override of the screen type to one of the following values: <ul>\\n<li>\\\"rounded-square-generic\\\": Artwork sizes: SD = 143x129; HD = 209x209 Note: is non-square NTSC pixel aspect ratio images. (Default) </li>\\n<li>\\\"rounded-rect-16x9-generic\\\": 16x9 poster style. Artwork Sizes SD=177x90; HD=269x152</li>\\n<li>\\\"multiple-portrait-generic\\\": Artwork sizes: SD = 104x134 ; HD =142x202</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setadurlsdadurl-as-string-hdadurl-as-string-as-void\\\">SetAdURL(sdAdURL as String, hdAdURL as String) as Void</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Sets the URL of the banner ad image to be displayed on the springboard screen. This is currently only valid for the \\\"video\\\" style of springboard screen.</p>\\n<h4 id=\\\"parameters-18\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>sdAdURL</td>\\n<td>String</td>\\n<td>The URL of the standard definition banner ad image (540x60).</td>\\n</tr>\\n<tr>\\n<td>hdAdURL</td>\\n<td>String</td>\\n<td>The URL of the high definition banner ad image (728x90).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setadselectableselectable-as-boolean-as-void\\\">SetAdSelectable(selectable as Boolean) as Void</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Sets the banner ad to be selectable or display-only (by default,  it is not selectable). </p>\\n<h4 id=\\\"parameters-19\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>selectable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether the banner ad is selectable. <br /><br />True = The user can navigate and move focus to the banner image. When the banner ad is selected, the screen will receive an roPosterScreenEvent and the msg will return true for isAdSelected().<br /><br />False = The banner ad is display-only (it is not selectable).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setaddisplaymodedisplaymode-as-string-as-void\\\">SetAdDisplayMode(displayMode as String) as Void</h3>\\n<p>Sets the scale mode for displaying ad images.</p>\\n<h4 id=\\\"parameters-20\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>displayMode</td>\\n<td>String</td>\\n<td>The scale mode to be used, which may be one of the following values: <ul>\\n<li>scale-to-fill: Scales image to completely fill the rectangle of the bounding frame (default) &#x3C;br/</li>\\n<li>scale-to-fit: Scales image to fit horizontally or vertically as appropriate while still maintaining aspect ratio. This is the preferred display mode for ads.</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Displays or refreshes the screen after initial creation or state changes.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was refreshed. </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-20\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description-21\\\">Description</h4>\\n<p>Sets the title for the screen.</p>\\n<h4 id=\\\"parameterts\\\">Parameterts</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The title to be displayed on the screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"usestablefocusenable-as-boolean-as-void\\\">UseStableFocus(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-22\\\">Description</h4>\\n<p>Keeps the highlighted button the same on subsequent calls to Show() method. Typically, you will keep this setting disabled, which it is by default. This is because when navigating through springboards (using the left and right arrows), the user will want the top button to be highlighted.  </p>\\n<p>Enabling this feature is useful for updating other dynamic text on the same screenboard and keeping the highlighted button static.</p>\\n<h4 id=\\\"parameters-21\\\">Parameters</h4>\\n<h3 id=\\\"setdisplaymodedisplaymode-as-string-as-void\\\">SetDisplayMode(displayMode as String) as Void</h3>\\n<h4 id=\\\"description-23\\\">Description</h4>\\n<p>Sets the mode for displaying slideshow images. This allows images to be either scaled to completely fill the screen (scale-to-fill) or scaled to fit inside the screen (scale-to-fit) while maintaining aspect ratio.</p>\\n<h4 id=\\\"parameters-22\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>displayMode</td>\\n<td>String</td>\\n<td>The display mode, which may be one of the following values: <ul>\\n<li>\\\"scale-to-fill\\\": scales image to completely fill the rectangle of the bounding frame (default)</li>\\n<li>\\\"scale-to-fit\\\": scales image to fit horizontally or vertically as appropriate while still maintaining aspect ratio. Note that scale-to-fit may result in pillar-box or letter-box display of images.</li>\\n<li>\\\"zoom-to-fill: scales and crops image to maintain aspect ratio and completely fill the rectangle of the bounding frame.</li>\\n<li>photo-fit: uses several methods to fit the image with a different aspect ratio to the screen. First, it will asymmetrically scale up to a maximum of 5%. Second, for landscape images, if vertical cropping is necessary, it will remove two lines off the bottom for every one line off the top up to a maximum of 30% of the image. For all images, if horizontal cropping is necessary it will crop an equal amount from both sides.</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsprite.md":"{\n  \"content\": \"<h1 id=\\\"ifsprite\\\">ifSprite</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosprite.md\\\" title=\\\"roSprite\\\">roSprite</a></td>\\n<td>This component is associated with a managing roCompositor object</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"movetox-as-integer-y-as-integer-as-void\\\">MoveTo(x as Integer, y as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Move the sprite to a new set of coordinates. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate to which the sprite is to be moved.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate to which the sprite is to be moved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"moveoffsetxoffset-as-integer-yoffset-as-integer-as-void\\\">MoveOffset(xOffset as Integer, yOffset as Integer) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Move the sprite to a new position based on offsets to the current position.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>xOffset</td>\\n<td>Integer</td>\\n<td>The offset from the current x-coordinate to be used.</td>\\n</tr>\\n<tr>\\n<td>yOffset</td>\\n<td>Integer</td>\\n<td>The offset from the current y-coordinate to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getx-as-integer\\\">GetX() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the x-coordinate of the sprite.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The x-coordinate of the sprite.</p>\\n<h3 id=\\\"gety-as-integer\\\">GetY() as Integer</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the y-coordinate of the sprite.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The y-coordinate of the sprite.</p>\\n<h3 id=\\\"setzz-as-integer-as-void\\\">SetZ(z as Integer) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the z value of the sprite. The z value defines the order in which sprites are drawn. Sprites with higher z values are drawn after (in front of) sprites with lower z values. The default z value is 0.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>z</td>\\n<td>Integer</td>\\n<td>The z value to be used for the sprite.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getz-as-integer\\\">GetZ() as Integer</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns the z value of the sprite.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The z value of the sprite.</p>\\n<h3 id=\\\"setdrawableflagenable-as-boolean-as-void\\\">SetDrawableFlag(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Sets whether this sprite is drawable or just used for collision tests. An undrawable sprite can be used to define a region in the background that needs collision testing. It can also be used as an auxiliary collision region for a more complex sprite defined in another sprite. </p>\\n<p>The default value is true, and it is set when a sprite is created.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether the sprite is drawable:<br /><br />True = The sprite is drawable. <br /><br />False = The sprite may only be used for collision tests.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getdrawableflag-as-boolean\\\">GetDrawableFlag() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Checks whether the sprite is drawable. </p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the sprite is drawable. </p>\\n<h3 id=\\\"setmemberflagsflags-as-integer-as-void\\\">SetMemberFlags(flags as Integer) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Defines the sprite membership though flags. The  flags are used with CollidableFlags to define which sprites are allowed to collide.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>flags</td>\\n<td>Integer</td>\\n<td>Enables \\\"levels\\\" of collision detection, as only sprites with a member flag bit that matches a collidable flag bit will be checked for collisions. The default value is 1.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getmemberflags-as-integer\\\">GetMemberFlags() as Integer</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns the value of member flags variable.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The value of the member flag variable.</p>\\n<h3 id=\\\"setcollidableflagsflags-as-integer-as-void\\\">SetCollidableFlags(flags as Integer) as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets bits to determine which sprites will be checked for collisions. The sprites that are checked must have the corresponding bits sets in their MemberFlags. </p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>flags</td>\\n<td>Integer</td>\\n<td>The bits to be set for determining which sprites to check for collisions. The default value is 1.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getcollidableflags-as-integer\\\">GetCollidableFlags() as Integer</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Returns the value of collidable flags variable.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>The value of the flag variable.</p>\\n<h3 id=\\\"setregionregion-as-object-as-void\\\">SetRegion(region as Object) as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Sets the region of the sprite to the passed roRegion object. If one already is set, it is replaced.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>region</td>\\n<td>Object</td>\\n<td>The roRegion object to be used as the region for the sprite.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getregion-as-object\\\">GetRegion() as Object</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Returns an roRegion object that specifies the region of a bitmap that is the sprite's display graphic.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>roRegion object.</p>\\n<h3 id=\\\"offsetregionx-as-integer-y-as-integer-width-as-integer-height-as-integer-as-void\\\">OffsetRegion(x as Integer, y as Integer, width as Integer, height as Integer) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Adjusts the part of an <a href=\\\"/docs/references/brightscript/components/roregion.md\\\" title=\\\"roRegion\\\">roRegion</a>'s bitmap that is being displayed as the sprite. Wrap is taken into consideration.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate for the bitmap.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate for the bitmap.</td>\\n</tr>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The width of the bitmap.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The height of the bitmap.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdatadata-as-dynamic-as-void\\\">SetData(data as Dynamic) as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Associates user-defined data with the sprite. The data can be any type including intrinsic types or objects.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>data</td>\\n<td>Dynamic</td>\\n<td>The user-defined data to be associated with the sprite.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getdata-as-dynamic\\\">GetData() as Dynamic</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Returns any user data associated with the sprite previously set via the <a href=\\\"#setdatadata-as-dynamic-as-void\\\">SetData()</a> method.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>Any user-defined data associated with the sprite. Returns invalid if there is no user data associated with this sprite.</p>\\n<h3 id=\\\"checkcollision-as-object\\\">CheckCollision() as Object</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Returns the first <a href=\\\"/docs/references/brightscript/components/rosprite.md\\\" title=\\\"roSprite\\\">roSprite</a> that this sprite collides with. </p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>An roSprite object. If there are no collisions, this method returns invalid.</p>\\n<h3 id=\\\"checkmultiplecollisions-as-object\\\">CheckMultipleCollisions() as Object</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Returns an roArray of all roSprite objects this sprite collides sprites. The collision area is the entire sprite's bounding box, and the sprites must actually be overlapped to detect a collision. That is, if a fast moving sprite moves \\\"through\\\" another sprite without actually overlapping when this call is made, no collision is detected.</p>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>roArray of colliding sprites. If there are no collisions, this method returns invalid.</p>\\n<h3 id=\\\"remove-as-void\\\">Remove() as Void</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Removes the sprite from the managing roComposite object and deletes the sprite.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifstring.md":"{\n  \"content\": \"<h1 id=\\\"ifstring\\\">ifString</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<h3 id=\\\"components\\\">Components</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/events/rochannelstoreevent.md\\\" title=\\\"roChannelStoreEvent\\\">roChannelStoreEvent</a></td>\\n<td>The roChannelStore sends an roChannelStoreEvent in response to a call to any of several Get* methods in ifChannelStore</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/ropath.md\\\" title=\\\"roPath\\\">roPath</a></td>\\n<td>The roPath component provides developers an easy way to create valid file system paths</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostring.md\\\" title=\\\"roString\\\">roString</a></td>\\n<td>Object equivalent for intrinsic type 'String'</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/events/rourlevent.md\\\" title=\\\"roUrlEvent\\\">roUrlEvent</a></td>\\n<td>The roUrlTransfer component sends the roUrlEvent component</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<p>Interface equivalent for intrinsic type String.</p>\\n<p>Also implemented by selected objects that can return a string representation.</p>\\n<h3 id=\\\"getstring-as-string\\\">GetString() As String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Gets the string value stored in the calling String object. </p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The string value stored in the calling String object. </p>\\n<h3 id=\\\"setstringvalue-as-string-as-void\\\">SetString(value As String) As Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the calling String object to the specified string value. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>value</td>\\n<td>String</td>\\n<td>The string value to be set on the calling String object.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifstringops.md":"{\n  \"content\": \"<h1 id=\\\"ifstringops\\\">ifStringOps</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostring.md\\\" title=\\\"roString\\\">roString</a></td>\\n<td>Object equivalent for intrinsic type 'String'</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<blockquote>\\n<p>ifStringOps provides various methods for manipulating string objects. Some of these duplicate functionality also available in the <a href=\\\"/docs/references/brightscript/language/brightscript-language-reference.md\\\" title=\\\"global string functions\\\">global string functions</a>.</p>\\n<p>Note that the ifStringOps string indices start at 0; they do not start at 1 like global string functions.</p>\\n</blockquote>\\n<h3 id=\\\"setstrings-as-string-len-as-integer-as-void\\\">SetString(s as String, len as Integer) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the roString object to the specified first set of characters of the provided string.</p>\\n<p>The <a href=\\\"/docs/references/brightscript/interfaces/ifstring.md\\\">ifString interface</a> includes a similar function, <a href=\\\"/docs/references/brightscript/interfaces/ifstring.md#setstringvalue-as-string-as-void\\\">ifString.SetString()</a>, which does not take a length parameter.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>s</td>\\n<td>String</td>\\n<td>The source string to be used for setting the roString object.</td>\\n</tr>\\n<tr>\\n<td>len</td>\\n<td>Integer</td>\\n<td>The first number of characters in the source string to which the roString object is to be set.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"appendstrings-as-string-len-as-integer-as-void\\\">AppendString(s as String, len as Integer) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Appends the specified first set of characters of the provided string to the end of the roString object. </p>\\n<p>The AppendString() function modifies the object on which it is called, which can result in unexpected results if called on a literal string constant rather than a string object. Consider the following example: </p>\\n<pre><code>x = \\\"one\\\"\\nprint type(x) ' prints \\\"String\\\"\\nx.AppendString(\\\"two\\\", 3)\\nprint x ' will print \\\"one\\\" not \\\"onetwo\\\"\\n\\ny = box(\\\"one\\\")\\nprint type(y) ' prints \\\"roString\\\"\\ny.AppendString(\\\"two\\\", 3)\\nprint y ' will print \\\"onetwo\\\"\\n</code></pre>\\n<p>The third line does not appear to do an append, but it is working as designed since the append happens to the temporary boxed object. x=\\\"string\\\" sets x to the intrinsic type, vs. y=box(\\\"string\\\"), which works as expected.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>s</td>\\n<td>String</td>\\n<td>The source string to be used for appending characters to the roString object.</td>\\n</tr>\\n<tr>\\n<td>len</td>\\n<td>Integer</td>\\n<td>The first number of characters in the source string to append to the roString object.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"len-as-integer\\\">Len() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the number of characters in the string.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>Number of characters.</p>\\n<h3 id=\\\"leftlen-as-integer-as-string\\\">Left(len as Integer) as String</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns a string consisting of the first len characters of the string.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>len</td>\\n<td>Integer</td>\\n<td>The first number of characters in the roString object to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The string generated by the method.</p>\\n<h3 id=\\\"rightlen-as-integer-as-string\\\">Right(len as Integer) as String</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns a string consisting of the last len characters of the string.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>len</td>\\n<td>Integer</td>\\n<td>The last number of characters in the roString object to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The string generated by the method.</p>\\n<h3 id=\\\"midstart_index-as-integer-as-string\\\">Mid(start_index as Integer) as String</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Returns a string consisting of the last characters of the string, starting at the zero-based start_index.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>start_index</td>\\n<td>Integer</td>\\n<td>The position in the roString object from which to return the remaining characters.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The string generated by the method.</p>\\n<h3 id=\\\"midstart_index-as-integer-num_chars-as-integer-as-string\\\">Mid(start_index as Integer, num_chars as Integer) as String</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns a string consisting of num_chars characters of the string, starting at the zero-based start_index. If there are fewer than num_chars in the string after start_index, returns the remaining characters in the string. </p>\\n<p><code>s.Left(len)</code> is equivalent to <code>s.Mid(0, len)</code><code>s.Right(len)</code> is equivalent to <code>s.Mid(s.Len() - len</code>.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>start_index</td>\\n<td>Integer</td>\\n<td>The position in the roString object from which to return the number of characters specified by num_chars.</td>\\n</tr>\\n<tr>\\n<td>num_chars</td>\\n<td>Integer</td>\\n<td>The number of characters in the remaining part of the roString object to be retrieved.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"instrsubstring-as-string-as-integer\\\">Instr(substring as String) as Integer</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns the zero-based index of the first occurrence of substring in the string. If the substring does not occur in the string, this method returns -1</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>substring</td>\\n<td>String</td>\\n<td>The substring within the roString object to be returned.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The index of the first instance of the substring within the string.</p>\\n<h3 id=\\\"replacefrom-as-string-to-as-string-as-string\\\">Replace(from As String, to As String) As String</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Returns a copy of the string with all instances of <strong>fromStr</strong> replaced with <strong>toStr</strong>. If <strong>fromStr</strong> is empty the return value is the same as the source string. </p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>from</td>\\n<td>String</td>\\n<td>The string of characters within the roString object to be replaced.</td>\\n</tr>\\n<tr>\\n<td>to</td>\\n<td>String</td>\\n<td>The string of characters that will replace all instances of the <strong>from</strong> string.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A copy of the string with all the instances</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>print \\\"a-b-c\\\".Replace(\\\"-\\\", \\\"/\\\")\\n\\n' result is \\\"a/b/c\\\"\\n</code></pre>\\n<h3 id=\\\"instrstart_index-as-integer-substring-as-string-as-integer\\\">Instr(start_index as Integer, substring as String) as Integer</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns the zero-based index of the first occurrence of substring in the string, starting at the specified zero-based start_index. If the substring does not occur in the string after start_index, returns -1</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>start_index</td>\\n<td>Integer</td>\\n<td>The position in the roString object from which to start looking for and returning the <strong>substring</strong>.</td>\\n</tr>\\n<tr>\\n<td>substring</td>\\n<td>String</td>\\n<td>The substring within the roString object to be found.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The index of the first instance of the substring within the string, based on the specified starting position. </p>\\n<h3 id=\\\"trim-as-string\\\">Trim() as String</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Returns the string with any leading and trailing whitespace characters (space, TAB, LF, CR, VT, FF, NO-BREAK SPACE, et al) removed.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The trimmed string. </p>\\n<h3 id=\\\"toint-as-integer\\\">ToInt() as Integer</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Returns the value of the string interpreted as a decimal number.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>The decimal number representation of the string.</p>\\n<h3 id=\\\"tofloat-as-float\\\">ToFloat() as Float</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Returns the value of the string interpreted as a floating point number.</p>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>The floating point number representation of the string.</p>\\n<h3 id=\\\"tokenizedelim-as-string-as-object\\\">Tokenize(delim as String) as Object</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Splits the string into separate substrings separated by a single delimiter character.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>delim</td>\\n<td>String</td>\\n<td>A set of characters which are treated as delimiters. A sequence of two or more contiguous delimiters in the string is treated as a single delimiter.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>An roList containing the each of the substrings. The delimiters are not returned.</p>\\n<h3 id=\\\"splitseparator-as-string-as-object\\\">Split(separator as String) as Object</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Splits the input string using the separator string as a delimiter. An empty separator string indicates to split the string by character.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>separator</td>\\n<td>String</td>\\n<td>The delimiter to be used to parse the roString object.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>An array of the split token strings (not including the delimiter). </p>\\n<h4 id=\\\"examples\\\">Examples</h4>\\n<pre><code>a = \\\"\\\".Split(\\\"\\\")\\n\\n'creates the array equivalent to\\na = []\\n</code></pre>\\n<pre><code>a = \\\"123\\\".Split(\\\"\\\")\\n\\n'creates the array equivalent to\\na = [\\\"1\\\", \\\"2\\\", \\\"3\\\"]\\n</code></pre>\\n<pre><code>a = \\\"123\\\".Split(\\\"/\\\")\\n\\n'creates the array equivalent to\\na = [\\\"123\\\"]\\n</code></pre>\\n<pre><code>a = \\\"/123/\\\".Split(\\\"/\\\")\\n\\n'creates the array equivalent to\\na = [\\\"\\\", \\\"123\\\", \\\"\\\"]\\n</code></pre>\\n<pre><code>a = \\\"one, two, three\\\".Split(\\\", \\\")\\n\\n'creates the array equivalent to\\na = [\\\"one\\\", \\\"two\\\", \\\"three\\\"]\\n</code></pre>\\n<h3 id=\\\"getentityencode-as-string\\\">GetEntityEncode() as String</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Returns the string with the following characters replaced with their corresponding HTML entity encoding sequences below: </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Character</th>\\n<th>Replaced with</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\" (double quote)</td>\\n<td>\\\\\\\"</td>\\n</tr>\\n<tr>\\n<td>' (single quote)</td>\\n<td>\\\\'</td>\\n</tr>\\n<tr>\\n<td>&#x3C;</td>\\n<td>\\\\&#x3C;</td>\\n</tr>\\n<tr>\\n<td>></td>\\n<td>\\\\></td>\\n</tr>\\n<tr>\\n<td>&#x26;</td>\\n<td>\\\\&#x26;</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-12\\\">Return Value</h4>\\n<p>The encoded string.  </p>\\n<h3 id=\\\"escape-as-string\\\">Escape() as String</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>URL encodes the specified string per <a href=\\\"https://www.ietf.org/rfc/rfc3986.txt\\\" title=\\\"RFC 3986\\\">RFC 3986</a> and returns the encoded string. Non-ASCII characters are encoded as UTF-8 escape sequences. This functionality is essentially the same as roUrlTransfer.Escape, but without the overhead of creating a roUrlTransfer object. </p>\\n<blockquote>\\n<p>Use the EncodeUri or EncodeUriComponent methods instead.</p>\\n</blockquote>\\n<h4 id=\\\"return-value-13\\\">Return Value</h4>\\n<p>The URL-encoded version of the specified string. </p>\\n<h4 id=\\\"example-1\\\">Example</h4>\\n<pre><code>s = \\\"@&#x26;=+/#!*\\\"\\nt = s.Escape()\\nprint \\\"\\\"\\\"\\\" + t + \\\"\\\"\\\"\\\"\\nREM \\\"%40%26%3D%2B%2F%23%21%2A\\\"\\n\\n' escaped characters are encoded as UTF-8 sequences\\ns = Chr(&#x26;h2022)\\nt = s.Escape()\\nprint \\\"\\\"\\\"\\\" + t + \\\"\\\"\\\"\\\"\\nREM \\\"%E2%80%A2\\\"\\n</code></pre>\\n<h3 id=\\\"unescape-as-string\\\">Unescape() as String</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>URL decodes the specified string per <a href=\\\"https://www.ietf.org/rfc/rfc3986.txt\\\" title=\\\"RFC 3986\\\">RFC 3986</a> and returns the decoded string.</p>\\n<p>The functionality is essentially the same as <a href=\\\"/docs/references/brightscript/components/rourltransfer.md\\\">roUrlTransfer</a>. Unescape, but without the overhead of creating a roUrlTransfer object.</p>\\n<p>If the escaped string includes invalid escape sequences, the decode will fail and an empty string will be returned. </p>\\n<blockquote>\\n<p> Consider using the <a href=\\\"#decodeuri-as-string\\\">DecodeUri</a> or <a href=\\\"#decodeuricomponent-as-string\\\">DecodeUriComponent</a> method instead.</p>\\n</blockquote>\\n<h4 id=\\\"return-value-14\\\">Return Value</h4>\\n<p>The URL-decoded string. </p>\\n<h4 id=\\\"example-2\\\">Example</h4>\\n<pre><code>t = \\\"%3B%3F%3A%24%2C%28%29\\\"\\ns = t.Unescape()\\nprint \\\"\\\"\\\"\\\" + s + \\\"\\\"\\\"\\\"\\nREM \\\";?:$,()\\\"\\n</code></pre>\\n<h3 id=\\\"encodeuri-as-string\\\">EncodeUri() as String</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Encodes the specified string with escape sequences for reserved Uniform Resource Identifier (URI) characters. Non-ASCII characters are encoded as UTF-8 escape sequences.</p>\\n<h4 id=\\\"return-value-15\\\">Return Value</h4>\\n<p>The provided string encoded as a Uniform Resource Identifier (URI).</p>\\n<h4 id=\\\"example-3\\\">Example</h4>\\n<pre><code>s = \\\"http://roku.com/my test.asp?first=jane&#x26;last=doe\\\"\\nt = s.EncodeUri()\\nprint \\\"\\\"\\\"\\\" + t + \\\"\\\"\\\"\\\"\\nREM \\\"http://roku.com/my%20test.asp?first=jane&#x26;last=doe\\\"\\n</code></pre>\\n<h3 id=\\\"decodeuri-as-string\\\">DecodeUri() as String</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Decodes the specified string with escape sequences for reserved Uniform Resource Identifier (URI) characters. If the escaped string includes invalid escape sequences, the decode will fail and an empty string will be returned. </p>\\n<h4 id=\\\"return-value-16\\\">Return Value</h4>\\n<p>An unencoded version of the provided encoded Uniform Resource Identifier (URI).</p>\\n<h4 id=\\\"example-4\\\">Example</h4>\\n<pre><code>t = \\\"http://roku.com/my%20test.asp?first=jane&#x26;last=doe\\\"\\ns = t.DecodeUri()\\nprint \\\"\\\"\\\"\\\" + s + \\\"\\\"\\\"\\\"\\nREM \\\"http://roku.com/my test.asp?first=jane&#x26;last=doe\\\"\\n</code></pre>\\n<h3 id=\\\"encodeuricomponent-as-string\\\">EncodeUriComponent() as String</h3>\\n<h4 id=\\\"description-20\\\">Description</h4>\\n<p>Encodes the specified string with escape sequences for reserved Uniform Resource Identifier (URI) component characters. </p>\\n<h4 id=\\\"return-value-17\\\">Return Value</h4>\\n<p>The provided string encoded as a Uniform Resource Identifier (URI).</p>\\n<h4 id=\\\"example-5\\\">Example</h4>\\n<pre><code>s = \\\"http://roku.com/my test.asp?first=jane&#x26;last=doe\\\"\\nt = s.EncodeUriComponent()\\nprint \\\"\\\"\\\"\\\" + t + \\\"\\\"\\\"\\\"\\nREM \\\"http%3A%2F%2Froku.com%2Fmy%20test.asp%3Ffirst%3Djane%26last%3Ddoe\\\"\\n</code></pre>\\n<h3 id=\\\"decodeuricomponent-as-string\\\">DecodeUriComponent() as String</h3>\\n<h4 id=\\\"description-21\\\">Description</h4>\\n<p>Decodes the specified string with escape sequences for reserved Uniform Resource Identifier (URI) component characters. If the escaped string includes invalid escape sequences, the decode will fail and an empty string will be returned. </p>\\n<h4 id=\\\"return-value-18\\\">Return Value</h4>\\n<p>An unencoded version of the provided encoded Uniform Resource Identifier (URI).</p>\\n<h4 id=\\\"example-6\\\">Example</h4>\\n<pre><code>t = \\\"http%3A%2F%2Froku.com%2Fmy%20test.asp%3Ffirst%3Djane%26last%3Ddoe\\\"\\ns = t.DecodeUriComponent()\\nprint \\\"\\\"\\\"\\\" + s + \\\"\\\"\\\"\\\"\\nREM \\\"http://roku.com/my test.asp?first=jane&#x26;last=doe\\\"\\n</code></pre>\\n<h3 id=\\\"startswithmatchstring-as-string-as-boolean\\\">StartsWith(matchString as String) As Boolean</h3>\\n<p><em>Available since Roku OS 9.3</em></p>\\n<p>Checks whether the string starts with the substring specified in <strong>matchString</strong>, starting at the beginning of the string (position 0). </p>\\n<h4 id=\\\"return-value-19\\\">Return Value</h4>\\n<p>A flag indicating whether a matching substring was found. </p>\\n<h4 id=\\\"example-7\\\">Example</h4>\\n<pre><code>s = \\\"Roku Rocks\\\"\\n? s.StartsWith(\\\"Roku\\\") ' => true\\n? s.StartsWith(\\\"roku\\\") '=> false\\n</code></pre>\\n<h3 id=\\\"startswithmatchstring-as-string-matchpos-as-integer-as-boolean\\\">StartsWith(matchString as String, matchPos as Integer) As Boolean</h3>\\n<p><em>Available since Roku OS 9.3</em></p>\\n<p>Checks whether the string starts with the substring specified in <strong>matchString</strong>, starting at the <strong>matchPos</strong> parameter (0-based character offset). </p>\\n<h4 id=\\\"return-value-20\\\">Return Value</h4>\\n<p>A flag indicating whether a matching substring was found. </p>\\n<h4 id=\\\"example-8\\\">Example</h4>\\n<pre><code>s = \\\"Roku Rocks\\\"\\n? s.StartsWith(\\\"Rocks\\\", 5) ' => true\\n? s.StartsWith(\\\"Roku\\\", 5) ' => false\\n</code></pre>\\n<h3 id=\\\"endswithmatchstring-as-string-as-boolean\\\">EndsWith(matchString as String) As Boolean</h3>\\n<p><em>Available since Roku OS 9.3</em></p>\\n<p>Checks whether the string ends with the substring specified in <strong>matchString</strong>, starting at the end of the string. </p>\\n<h4 id=\\\"return-value-21\\\">Return Value</h4>\\n<p>A flag indicating whether a matching substring was found. </p>\\n<h4 id=\\\"example-9\\\">Example</h4>\\n<pre><code>s = \\\"Roku Rocks\\\"\\n? s.EndsWith(\\\"Rocks\\\") ' => true\\n? s.EndsWith(\\\"roku\\\") '=> false\\n</code></pre>\\n<h3 id=\\\"endswithmatchstring-as-string-length-as-integer-as-boolean\\\">EndsWith(matchString as String, length as Integer) As Boolean</h3>\\n<p><em>Available since Roku OS 9.3</em></p>\\n<p>Checks whether the string ends with the substring specified in <strong>matchString</strong>, starting at the position specified in the <strong>length</strong> parameter. </p>\\n<h4 id=\\\"return-value-22\\\">Return Value</h4>\\n<p>A flag indicating whether a matching substring was found. </p>\\n<h4 id=\\\"example-10\\\">Example</h4>\\n<pre><code>s = \\\"Roku Rocks\\\"\\n? s.EndsWith(\\\"Roku\\\", 4) ' => true\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifsystemlog.md":"{\n  \"content\": \"<h1 id=\\\"ifsystemlog\\\">ifSystemLog</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rosystemlog.md\\\" title=\\\"roSystemLog\\\">roSystemLog</a></td>\\n<td>The roSystemLog component enables the application to receive events from the Roku Streaming Player that are intended for reporting errors and trends, rather than trigger a response to a user action</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"enabletypelogtype-as-string-as-void\\\">EnableType(logType as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Enables log message of type logType. When a log type is enabled, system log messages of that type are sent to the message port that was set using SetMessagePort().  </p>\\n<p>All system log events are disabled by default and must be explicitly enabled by the application.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>logType</td>\\n<td>String</td>\\n<td>The logType to be enabled, which may be one of the following values: <table>\\n<thead>\\n<tr>\\n<th>Valid logTypes</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>\\\"http.connect\\\"</td>\\n<td>Sent whenever a successful HTTP connection is made. This means that the server responded to the HTTP request with a success (2xx) status code. However, this does not necessarily mean that all of the body of the request has been received successfully</td>\\n</tr>\\n<tr>\\n<td>\\\"http.error\\\"</td>\\n<td>Sent whenever an error occurs while executing an HTTP request. This may be sent during the time of the initial connection for two possible reasons: <ul>\\n<li>because the server responded with an error code, or</li>\\n<li>data is being read from the body after the initial connection takes place</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>\\\"bandwidth.minute\\\"</td>\\n<td>Sent every minute to report the current measured bandwidth</td>\\n</tr>\\n<tr>\\n<td>“http.complete”</td>\\n<td><table>\\n<thead>\\n<tr>\\n<th>Property/Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>LogType</td>\\n<td>String</td>\\n<td>When enabled, the “http.complete” events will be sent to Roku after an http transfer is completed for adaptive streams. This event consolidates information related to: <ul>\\n<li>a cURL transfer such as DNS look up time,</li>\\n<li>connection latency,</li>\\n<li>transfer speed,</li>\\n<li>and number of bytes.</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>DateTime</td>\\n<td>roDateTime</td>\\n<td>The GMT time of the event, with a resolution of one millisecond</td>\\n</tr>\\n<tr>\\n<td>Url</td>\\n<td>String</td>\\n<td>The URL that was requested</td>\\n</tr>\\n<tr>\\n<td>OrigUrl</td>\\n<td>String</td>\\n<td>The original URL. If the original URL was redirected, then Url represents the new redirected URL and OrigURL the original. OrigURL is included so that it's easy to correlate between events and URLs passed to components</td>\\n</tr>\\n<tr>\\n<td>Method</td>\\n<td>String</td>\\n<td>The HTTP method. \\\"GET\\\", \\\"POST\\\", or \\\"HEAD\\\"</td>\\n</tr>\\n<tr>\\n<td>Status</td>\\n<td>String</td>\\n<td>For LogType “http.complete”, this will be “ok”</td>\\n</tr>\\n<tr>\\n<td>TargetIp</td>\\n<td>String</td>\\n<td>The IP address of the target server</td>\\n</tr>\\n<tr>\\n<td>HttpCode</td>\\n<td>Integer</td>\\n<td>The HTTP response code if available</td>\\n</tr>\\n<tr>\\n<td>ContentType</td>\\n<td>String</td>\\n<td>Content type or MIME type</td>\\n</tr>\\n<tr>\\n<td>DNSLookupTime</td>\\n<td>Double</td>\\n<td>DNS name resolution time in seconds with double precision</td>\\n</tr>\\n<tr>\\n<td>ConnectTime</td>\\n<td>Double</td>\\n<td>Time taken to connect to the server (seconds)</td>\\n</tr>\\n<tr>\\n<td>FirstByteTime</td>\\n<td>Double</td>\\n<td>Time taken to receive the first byte from the server (seconds)</td>\\n</tr>\\n<tr>\\n<td>TransferTime</td>\\n<td>Double</td>\\n<td>Total data transfer time (seconds)</td>\\n</tr>\\n<tr>\\n<td>DownloadSpeed</td>\\n<td>Double</td>\\n<td>Transfer download speed in bytes per second</td>\\n</tr>\\n<tr>\\n<td>BytesDownloaded</td>\\n<td>Integer</td>\\n<td>Number of bytes downloaded from the server</td>\\n</tr>\\n<tr>\\n<td>UploadSpeed</td>\\n<td>Double</td>\\n<td>Transfer upload speed in bytes per second</td>\\n</tr>\\n<tr>\\n<td>BytesUploaded</td>\\n<td>Integer</td>\\n<td>Number of bytes uploaded to the server</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\\n<p>See <a href=\\\"/docs/references/brightscript/events/rosystemlogevent.md\\\" title=\\\"roSystemLogEvent\\\">roSystemLogEvent</a> for details on the information reported for each log type.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iftextscreen.md":"{\n  \"content\": \"<h1 id=\\\"iftextscreen\\\">ifTextScreen</h1>\\n<blockquote>\\n<p>This component is no longer updated and will be deprecated on January 1st, 2019.Beginning July 1st, 2017, any new channels using this component will be rejected during certification.Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotextscreen.md\\\" title=\\\"roTextScreen\\\">roTextScreen</a></td>\\n<td>roTextScreen provides a way of displaying large amounts of scrollable text</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"settitletitle-as-string-as-void\\\">SetTitle(title as String) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the title for the screen, which appears in the overhang</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The text to be displayed in the overhang.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setbreadcrumbtextlocation1-as-string-location2-as-string-as-void\\\">SetBreadcrumbText(location1 as String, location2 as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Breadcrumbs allow the application to display a two-part navigational title that shows the previous and current locations in the application hierarchy (e.g. TV – Friends).</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>location1</td>\\n<td>String</td>\\n<td>The previous location in the application hierarchy.</td>\\n</tr>\\n<tr>\\n<td>location2</td>\\n<td>String</td>\\n<td>The current location in the application hierarchy.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setheadertexttext-as-string-as-void\\\">SetHeaderText(text as String) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Adds a string of bold, high visibility text to the screen as a header to appear above the main body of text. Multiple calls to this method are ignored</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text for the header that will be displayed above the main text body</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"settexttext-as-string-as-void\\\">SetText(text as String) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the main text of the screen. The roTextScreen handles all text formatting and justification. Multiple calls to this method are ignored</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text for the main screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addtexttext-as-string-as-void\\\">AddText(text as String) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Adds text to the main text of the screen. The text is appended to the end of any existing text</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be appended to the main text on the screen</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addbuttonid-as-integer-title-as-string-as-boolean\\\">AddButton(id as Integer, title as String) as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Adds a button to the screen, which is displayed in a standard location on the screen and appears in the order added. When the button is pressed, the script will receive an event from the application containing the ID of the button pressed and allowing the script to perform the desired action for that case.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>id</td>\\n<td>Integer</td>\\n<td>The unique ID to be assigned to the button instance</td>\\n</tr>\\n<tr>\\n<td>title</td>\\n<td>String</td>\\n<td>The text to be used to identify the button instance</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the button was successfully added.</p>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Displays or refreshes the screen after initial creation or state changes.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was successfully refreshed. </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Closes the screen and deletes the associated object. This is useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iftexttospeech.md":"{\n  \"content\": \"<h1 id=\\\"iftexttospeech\\\">ifTextToSpeech</h1>\\n<blockquote>\\n<p>Please note this component is only available on the following devices: Roku Streaming Stick (3600X), Roku Express (3700X) and Express+ (3710X), Roku Premiere (4620X) and Premiere+ (4630X), Roku Ultra (4640X), and any Roku TV running Roku OS version 7.2 and later.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotexttospeech.md\\\" title=\\\"roTextToSpeech\\\">roTextToSpeech</a></td>\\n<td>The roTextToSpeech component provides text to speech capabilities to applications</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"saytext-as-string-as-integer\\\">Say(text as String) as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns an ID for the spoken string to notify observer callbacks about a specific spoken string.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The UTF8 text to be spoken.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The ID for the spoken string.</p>\\n<h3 id=\\\"silenceduration-as-integer-as-integer\\\">Silence(duration as Integer) as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Causes text to speech to continue to suppress any application background sound for the amount of time specified by <code>duration</code>.</p>\\n<p>This can be used to add clarity for longer spoken text that may have pauses that might otherwise allow application background sound to be heard.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>duration</td>\\n<td>Integer</td>\\n<td>The amount of time to suppress application background sound</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The duration for the speech suppression. </p>\\n<h3 id=\\\"flush-as-void\\\">Flush() as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Interrupts and stops any current text to speech spoken string, to be used when the channel does not want to the text to speech to continue.</p>\\n<h3 id=\\\"isenabled-as-boolean\\\">IsEnabled() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Checks whether text-to-speech is enabled. Text-to-speech may be enabled or disabled for various technical reasons (for example, on some platforms, text-to-speech may only be enabled once in connected mode). This is not affected by the state of any of its clients. In particular, it does not depend on whether a CVAA compliant accessibility feature is enabled or not.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether text-to-speech is enabled. </p>\\n<h3 id=\\\"getavailablelanguages-as-object\\\">GetAvailableLanguages() as Object</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns an array containing the current list of languages available for text-to-speech.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A list of languages. </p>\\n<h3 id=\\\"setlanguagename-as-string-as-void\\\">SetLanguage(name as String) as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Sets the language specified by <code>name</code> for text to speech, from one of the available languages returned by the <a href=\\\"#getavailablelanguages-as-object\\\">GetAvailableLanguages()</a> method. </p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The text-to-speech language to be used.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getlanguage-as-string\\\">GetLanguage() as String</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Returns the name of the currently-selected text-to-speech language.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The language name. </p>\\n<h3 id=\\\"getavailablevoices-as-object\\\">GetAvailableVoices() as Object</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns an array containing the current list of voices available for text-to-speech.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A list of voices.</p>\\n<h3 id=\\\"setvoicename-as-string-as-void\\\">SetVoice(name as String) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Sets the voice specified by name for text to speech, from one of the available voices returned by the <a href=\\\"#getavailablevoices-as-object\\\">GetAvailableVoices()</a> method. </p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The available text-to-speech voice to be used</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getvoice-as-string\\\">GetVoice() as String</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Returns the currently-selected voice.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>The selected voice.</p>\\n<h3 id=\\\"getvolume-as-integer\\\">GetVolume() as Integer</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Returns the volume at which text is spoken. The value ranges from 0 for muted to 1000 for the highest volume. The default value is 1000.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The volume. </p>\\n<h3 id=\\\"setvolumevolume-as-integer-as-void\\\">SetVolume(volume as Integer) as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Sets the volume at which text is spoken.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>volume</td>\\n<td>Integer</td>\\n<td>The volume at which text is spoken. The value ranges from 0 for muted to 1000 for the highest volume. The default value is 1000.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getrate-as-integer\\\">GetRate() as Integer</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Returns the rate at which text is spoken. The value ranges from -40 to 200 with a default value of 0.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>The rate. </p>\\n<h3 id=\\\"setraterate-as-integer-as-void\\\">SetRate(rate as Integer) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Sets the rate at which text is spoken. </p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rate</td>\\n<td>Integer</td>\\n<td>The rate at which text is to be spoken. The possible values range from -40 to 200.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getpitch-as-integer\\\">GetPitch() as Integer</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Returns the pitch at which text is spoken. The possible values range from -60 to +60.</p>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>The pitch.</p>\\n<h3 id=\\\"setpitchpitch-as-integer-as-void\\\">SetPitch(pitch as Integer) as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Sets the pitch at which text is spoken. </p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>pitch</td>\\n<td>Integer</td>\\n<td>The pitch at which text is to be spoken. The possible values range from -60 to +60.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iftexturemanager.md":"{\n  \"content\": \"<h1 id=\\\"iftexturemanager\\\">ifTextureManager</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotexturemanager.md\\\" title=\\\"roTextureManager\\\">roTextureManager</a></td>\\n<td>The Texture Manager provides a set of API's for managing an roBitmap cache</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"requesttexturereq-as-object-as-void\\\">RequestTexture(req as Object) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Makes a request for an roBitmap with the attributes specified by the roTextureRequest. The roTextureManager will pass an roTextureRequestEvent to the message port when completed.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>req</td>\\n<td>Object</td>\\n<td>The roTextureRequest</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"cancelrequestreq-as-object-as-void\\\">CancelRequest(req as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Cancels the request specified by req, which should be an roTextureRequest previously passed to the <a href=\\\"#requesttexturereq-as-object-as-void\\\">RequestTexture()</a> method.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>req</td>\\n<td>Object</td>\\n<td>The previoulsy passed roTextureRequest to be cancelled.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"unloadbitmapurl-as-string-as-void\\\">UnloadBitmap(url as String) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Removes a bitmap from the roTextureManager with the specified URL.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>url</td>\\n<td>String</td>\\n<td>The URL of the bitmap to be removed from the roTextureManager</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"cleanup-as-void\\\">Cleanup() as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Removes all bitmaps from the roTextureManager.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iftexturerequest.md":"{\n  \"content\": \"<h1 id=\\\"iftexturerequest\\\">ifTextureRequest</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotexturerequest.md\\\" title=\\\"roTextureRequest\\\">roTextureRequest</a></td>\\n<td>An roTextureRequest is used to make requests to the roTextureManager</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getid-as-integer\\\">GetId() as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns a unique id for the request.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<p>The unique ID.</p>\\n<h3 id=\\\"getstate-as-integer\\\">GetState() as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the state of the request.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The state value, which may be one of the following:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Value</th>\\n<th>State</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>0</td>\\n<td>Requested</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>Downloading</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>Downloaded</td>\\n</tr>\\n<tr>\\n<td>3</td>\\n<td>Ready</td>\\n</tr>\\n<tr>\\n<td>4</td>\\n<td>Failed</td>\\n</tr>\\n<tr>\\n<td>5</td>\\n<td>Cancelled</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setasyncasync-as-boolean-as-void\\\">SetAsync(async as Boolean) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Sets the request to be either asynchronous (true) or synchronous (false). The default is asynchronous</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>async</td>\\n<td>Boolean</td>\\n<td>The method used to send the request: asynchronous (true) or synchronous (false).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setsizewidth-as-integer-height-as-integer-as-void\\\">SetSize(width as Integer, height as Integer) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets the desired size of the roBitmap. The default is to return a bitmap in its native size.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The width of the roBitmap.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The height of the roBitmap.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setscalemodemode-as-integer-as-void\\\">SetScaleMode(mode as Integer) as Void</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Sets the scaling mode to be used. </p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>mode</td>\\n<td>Integer</td>\\n<td>The scaling mode to be used, which may be one of the following values:<br /><br /><table>\\n<thead>\\n<tr>\\n<th>Value</th>\\n<th>Scaling mode</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>0</td>\\n<td>Nearest neighbor (fast). This is the default.</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>Bilinear (smooth)</td>\\n</tr>\\n</tbody>\\n</table></td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iftimespan.md":"{\n  \"content\": \"<h1 id=\\\"iftimespan\\\">ifTimeSpan</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rotimespan.md\\\" title=\\\"roTimespan\\\">roTimespan</a></td>\\n<td>The Timespan object provides an interface to a simple timer for tracking the duration of activities</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"mark-as-void\\\">Mark() as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the \\\"Mark\\\" point to the current time. The Mark point is also automatically set to the current time when an roTimespan object is created.</p>\\n<h3 id=\\\"totalmilliseconds-as-integer\\\">TotalMilliseconds() as Integer</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the total number of milliseconds from the \\\"Mark\\\" point to the current time.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The number of milliseconds. </p>\\n<h3 id=\\\"totalseconds-as-integer\\\">TotalSeconds() as Integer</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the total number of seconds from the \\\"Mark\\\" point to the current time.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The number of seconds.</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>x = timespan.TotalSeconds()\\n</code></pre>\\n<p>is equivalent to</p>\\n<pre><code>x = Int(timespan.TotalMilliseconds() / 1000)\\n</code></pre>\\n<h3 id=\\\"getsecondstoiso8601datedate-as-string-as-integer\\\">GetSecondsToISO8601Date(date as String) as Integer</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Parses the ISO8601 date (e.g. 2008-11-29T14:54:02.171) and returns the number of seconds from now (not the \\\"Mark\\\" point) until the specified date/time.</p>\\n<p>The date provided and the current time calculations are all done assuming UTC. The \\\"Z\\\" timezone part of the ISO8601 string is ignored.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Parameters</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>date</td>\\n<td>String</td>\\n<td>The ISO8601date to be parsed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The number of seconds. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/iftostr.md":"{\n  \"content\": \"<h1 id=\\\"iftostr\\\">ifToStr</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roboolean.md\\\" title=\\\"roBoolean\\\">roBoolean</a></td>\\n<td>Object equivalent for intrinsic type Boolean</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rodouble.md\\\" title=\\\"roDouble\\\">roDouble</a></td>\\n<td>Object equivalent for intrinsic type 'Double'</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rofloat.md\\\" title=\\\"roFloat\\\">roFloat</a></td>\\n<td>Object equivalent for intrinsic type 'Float'</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rofunction.md\\\" title=\\\"roFunction\\\">roFunction</a></td>\\n<td>Object equivalent for intrinsic type Function</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roint.md\\\" title=\\\"roInt\\\">roInt</a></td>\\n<td>Object equivalent for intrinsic type Integer</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roinvalid.md\\\" title=\\\"roInvalid\\\">roInvalid</a></td>\\n<td>Object equivalent for intrinsic type 'Invalid'</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rolonginteger.md\\\" title=\\\"roLongInteger\\\">roLongInteger</a></td>\\n<td>Object equivalent for intrinsic type LongInteger</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rostring.md\\\" title=\\\"roString\\\">roString</a></td>\\n<td>Object equivalent for intrinsic type 'String'</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"tostr-as-string\\\">ToStr() As String</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns the value as a string.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>The string.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifurltransfer.md":"{\n  \"content\": \"<h1 id=\\\"ifurltransfer\\\">ifUrlTransfer</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rourltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a></td>\\n<td>A roUrlTransfer object transfers data to or from remote servers specified by URLs. It can perform mutual authentication with a web server</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<blockquote>\\n<p>Each roUrlTransfer object can perform only one asynchronous operation at one time. After starting an asynchronous operation, you cannot perform any other data transfer operations using that object until the asynchronous operation has completed, as indicated by receiving an roUrlEvent message whose GetSourceIdentity value matches the GetIdentity value of the roUrlTransfer.</p>\\n<p>Furthermore, the roUrlTransfer object must remain referenced until the transfer has completed. That means that there must be at least one variable containing a reference to the object during the transfer.  Allowing the variable to go out of scope (for example, by returning from a function where the variable is declared, or reusing the variable to hold a different value) will stop the asynchronous transfer.</p>\\n</blockquote>\\n<h3 id=\\\"getidentity-as-integer\\\">GetIdentity() as Integer</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns a unique number for this object that can be used to identify whether events originated from this object. The value can be any arbitrary value as assigned by the Roku OS, and should only be used for comparison purposes. For example, the value should not be used as an array index. For use as a look-up key, one option would be to use <code>GetIdentity().ToStr()</code> as an associative array key.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A unique number for the object.</p>\\n<h4 id=\\\"example\\\">Example</h4>\\n<pre><code>Function Setup()\\n    m.pendingXfers = {}\\nEnd Function\\n\\nFunction GetAsync(url as String)\\n    newXfer = CreateObject(\\\"roUrlTransfer\\\")\\n    newXfer.SetUrl(url)\\n    newXfer.AsyncGetToString()\\n    requestId = newXfer.GetIdentity().ToStr()\\n    m.pendingXfers[requestId] = newXfer\\nEnd Function\\n\\nFunction HandleUrlEvent(event as Object)\\n    requestId = event.GetSourceIdentity().ToStr()\\n    xfer = m.pendingXfers[requestId]\\n    if xfer &#x3C;> invalid then\\n        ' process it\\n        m.pendingXfers.Delete(requestId)\\n    end if\\nEnd Function\\n</code></pre>\\n<h3 id=\\\"seturlurl-as-string-as-void\\\">SetUrl(url as String) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the URL to use for the transfer request.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>url</td>\\n<td>String</td>\\n<td>The URL to be used for the transfer request</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"geturl-as-string\\\">GetUrl() as String</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the current URL.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>The URL.</p>\\n<h3 id=\\\"setrequestreq-as-string\\\">SetRequest(req as String)</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Changes the request method from the normal GET, HEAD or POST to the value passed as a string.</p>\\n<blockquote>\\n<p> Use this function cautiously because it can generate invalid HTTP requests.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>req</td>\\n<td>String</td>\\n<td>The request method to be used</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getrequest-as-string\\\">GetRequest() as String</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns the current request method.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The request method. </p>\\n<h3 id=\\\"gettostring-as-string\\\">GetToString() as String</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Connects to the remote service as specified in the URL and returns the response body as a string. This function waits for the transfer to complete and it may block for a long time. This calls discards the headers and response codes. If that information is required, use the <a href=\\\"#asyncgettostring-as-boolean\\\">AsyncGetToString()</a> method.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The response body.</p>\\n<h3 id=\\\"gettofilefilename-as-string-as-integer\\\">GetToFile(filename as String) as Integer</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Connect to the remote service as specified in the URL and write the response body to a file on the Roku device's filesystem. This function does not return until the exchange is complete and may block for a long time. The HTTP response code from the server is returned. It is not possible to access any of the response headers. If this information is required use the <a href=\\\"#asyncgettofilefilename-as-string-as-boolean\\\">AsyncGetToFile()</a> method instead.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>filename</td>\\n<td>String</td>\\n<td>The file on the Roku device's filesystem to which the response body is to be written</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The HTTP response code.</p>\\n<h3 id=\\\"asyncgettostring-as-boolean\\\">AsyncGetToString() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Starts a GET request to a server, but does not wait for the transfer to complete. </p>\\n<p>When the GET request completes, a <a href=\\\"/docs/references/brightscript/events/rourlevent.md\\\" title=\\\"roUrlEvent\\\">roUrlEvent</a> will be sent to the message port associated with the object. The event will contain a roString with the body of the response. If false is returned then the request could not be issued and no events will be delivered.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>A flag indicating whether the request was issued. </p>\\n<h3 id=\\\"asyncgettofilefilename-as-string-as-boolean\\\">AsyncGetToFile(filename as String) as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Starts a transfer without waiting for it to complete, similar to the <a href=\\\"#asyncgettostring-as-boolean\\\">AsyncGetToString()</a> method. However, the response body will be written to a file on the device's filesystem instead of being returned in a String object.</p>\\n<p>When the GET request completes, an <a href=\\\"/docs/references/brightscript/events/rourlevent.md\\\" title=\\\"roUrlEvent\\\">roUrlEvent</a> will be sent to the message port associated with the object. If false is returned then the request could not be issued and no events will be delivered.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>filename</td>\\n<td>String</td>\\n<td>The file on the Roku device's filesystem to which the response body is to be written</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>A flag indicating whether the request was issued. </p>\\n<h3 id=\\\"head-as-dynamic\\\">Head() as Dynamic</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Synchronously performs an HTTP HEAD request and returns an <a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a> object.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>An <a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a> object.  If a catastrophic failure occurs (for example, an asynchronous operation is already active), invalid is returned</p>\\n<h3 id=\\\"asynchead-as-boolean\\\">AsyncHead() as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Begins an HTTP HEAD request without waiting for it to complete. When the HEAD completes, an <a href=\\\"/docs/references/brightscript/events/rourlevent.md\\\" title=\\\"roUrlEvent\\\">roUrlEvent</a> will be sent to the message port associated with the object. If false is returned then the request could not be issued and no events will be delivered.</p>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>A flag indicating whether the request was issued. </p>\\n<h3 id=\\\"postfromstringrequest-as-string-as-integer\\\">PostFromString(request as String) as Integer</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Uses the HTTP POST method to send the supplied string to the current URL. The HTTP response code is returned. Any response body is discarded</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>request</td>\\n<td>String</td>\\n<td>The POST request to be sent</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>The HTTP response code.</p>\\n<h3 id=\\\"postfromfilefilename-as-string-as-integer\\\">PostFromFile(filename as String) as Integer</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Uses the HTTP POST method to send the contents of the specified file to the current URL. The HTTP response code is returned. Any response body is discarded</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>filename</td>\\n<td>String</td>\\n<td>The file containing the POST request to be sent</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>The HTTP response code.</p>\\n<h3 id=\\\"asyncpostfromstringrequest-as-string-as-boolean\\\">AsyncPostFromString(request as String) as Boolean</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Uses the HTTP POST method to send the supplied string to the current URL. When the POST request completes, an <a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a> will be sent to the message port associated with the object. If false is returned then the request could not be issued and no events will be delivered.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>request</td>\\n<td>String</td>\\n<td>The POST request to be sent asynchronously</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>A flag indicating whether the request was issued. </p>\\n<h3 id=\\\"asyncpostfromfilefilename-as-string-as-boolean\\\">AsyncPostFromFile(filename as String) as Boolean</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Uses the HTTP POST method to send the contents of the specified file to the current URL. When the POST request completes, an <a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a> will be sent to the message port associated with the object. If false is returned then the request could not be issued and no events will be delivered.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>filename</td>\\n<td>String</td>\\n<td>The file containing the POST request to be sent asynchronously</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-12\\\">Return Value</h4>\\n<p>A flag indicating whether the request was issued. </p>\\n<h3 id=\\\"asyncpostfromfiletofilefromfile-as-string-tofile-as-string-as-boolean\\\">AsyncPostFromFileToFile(fromFile as String, toFile as String) as Boolean</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Uses the HTTP POST method to send the contents of the specified file (fromFile) to the current URL. When the POST request completes successfully, an <a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md\\\" title=\\\"roUrlTransfer\\\">roUrlTransfer</a> will be sent to the message port associated with the object. If false is returned then the request could not be issued and no events will be delivered.  This function is the same as AsyncPostFromFile, except that the HTTP response is written to the file specified by the toFile parameter.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>fromFile</td>\\n<td>String</td>\\n<td>The file containing the POST request to be sent asynchronously</td>\\n</tr>\\n<tr>\\n<td>toFile</td>\\n<td>String</td>\\n<td>The file on the Roku device's filesystem to which the response body is to be written</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-13\\\">Return Value</h4>\\n<p>A flag indicating whether the request was issued. </p>\\n<h3 id=\\\"asynccancel-as-boolean\\\">AsyncCancel() as Boolean</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Possible Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>AsyncCancel</td>\\n<td>Boolean</td>\\n<td>True/False</td>\\n<td>Cancel any outstanding async requests on the roUrlEvent object</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"retainbodyonerrorretain-as-boolean-as-boolean\\\">RetainBodyOnError(retain as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Returns the body of the response even if the HTTP status code indicates that an error occurred.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>retain</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to return the response body when there is an HTTP error response code.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-14\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"setuserandpassworduser-as-string-password-as-string-as-boolean\\\">SetUserAndPassword(user as String, password as String) as Boolean</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Enables HTTP authentication using the specified user name and password. </p>\\n<blockquote>\\n<p>HTTP basic authentication is intentionally disabled because it is inherently insecure. <a href=\\\"https://tools.ietf.org/html/rfc2617\\\" title=\\\"HTTP digest authentication\\\">HTTP digest authentication</a> is supported.</p>\\n</blockquote>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>user</td>\\n<td>String</td>\\n<td>The user name to be authenticated</td>\\n</tr>\\n<tr>\\n<td>password</td>\\n<td>String</td>\\n<td>The password to be authenticated</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-15\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"setminimumtransferratebytes_per_second-as-integer-period_in_seconds-as-integer-as-boolean\\\">SetMinimumTransferRate(bytes_per_second as Integer, period_in_seconds as Integer) as Boolean</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Terminates the transfer automatically if the transfer rate drops below the specified rate (bytes_per_second) over a specific interval (period_in_seconds).  </p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>bytes_per_second</td>\\n<td>Integer</td>\\n<td>The minimum transfer rate required to transfer data.</td>\\n</tr>\\n<tr>\\n<td>period_in_seconds</td>\\n<td>Integer</td>\\n<td>The interval to be used for averaging bytes_per_second.<br /><br />For large file transfers and a small bytes_per_second, averaging over fifteen minutes or even longer might be appropriate.<br /><br />If the transfer is being done over the internet, setting this to a small number because it may cause temporary drops in performance if network problems occur.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-16\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"getfailurereason-as-string\\\">GetFailureReason() as String</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>If any of the <code>roUrlEvent</code> functions indicate failure then this function may provide more information regarding the failure.</p>\\n<h4 id=\\\"return-value-17\\\">Return Value</h4>\\n<p>Failure reason.</p>\\n<h3 id=\\\"enableencodingsenable-as-boolean-as-boolean\\\">EnableEncodings(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-20\\\">Description</h4>\\n<p>Enables gzip encoding of transfers</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>retain</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable gzip encoding of transfers</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-18\\\">Return Value</h4>\\n<p>A flag indicating whether this operation was successful.</p>\\n<h3 id=\\\"escapetext-as-string-as-string\\\">Escape(text as String) as String</h3>\\n<h4 id=\\\"description-21\\\">Description</h4>\\n<p>URL encodes the specified string per <a href=\\\"https://www.ietf.org/rfc/rfc3986.txt\\\" title=\\\"RFC 3986\\\">RFC 3986</a> and return the encoded string</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The string to be URL-encoded</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-19\\\">Return Value</h4>\\n<p>The URL-encoded string.</p>\\n<h3 id=\\\"unescapetext-as-string-as-string\\\">Unescape(text as String) as String</h3>\\n<h4 id=\\\"description-22\\\">Description</h4>\\n<p>Decodes the specified string per <a href=\\\"https://www.ietf.org/rfc/rfc3986.txt\\\" title=\\\"RFC 3986\\\">RFC 3986</a> and returns the unencoded string.</p>\\n<h4 id=\\\"parameters-13\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The string to be URL-decoded</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-20\\\">Return Value</h4>\\n<p>The decoded string. </p>\\n<h3 id=\\\"urlencodeurl-as-string-as-string\\\">UrlEncode(url as String) as String</h3>\\n<blockquote>\\n<p>This method is deprecated. Use the <a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md#escapetext-as-string-as-string\\\">Escape()</a> method.</p>\\n</blockquote>\\n<h4 id=\\\"description-23\\\">Description</h4>\\n<p>URL encodes the specified string per RFC 3986 and return the encoded string</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Parameters</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>UrlEncode</td>\\n<td>String</td>\\n<td>${UrlEncodeParameters}</td>\\n<td>URL-encoded String</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"parameters-14\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The string to be URL-encoded</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-21\\\">Return Value</h4>\\n<p>The encoded string.</p>\\n<h3 id=\\\"enableresumeenable-as-boolean-as-boolean\\\">EnableResume(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-24\\\">Description</h4>\\n<p>Enables automatic resumption of <code>AsyncGetToFile</code> and <code>GetToFile</code> requests</p>\\n<h4 id=\\\"parameters-15\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to automatically resume <code>AsyncGetToFile</code> and <code>GetToFile</code> requests</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-22\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"enablepeerverificationenable-as-boolean-as-boolean\\\">EnablePeerVerification(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-25\\\">Description</h4>\\n<p>Verifies that the certificate has a chain of trust up to a valid root certificate using CURLOPT_SSL_VERIFYPEER.</p>\\n<h4 id=\\\"parameters-16\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to verify a certificate has a chain-of-trust up to a valid root certificate</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-23\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"enablehostverificationenable-as-boolean-as-boolean\\\">EnableHostVerification(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-26\\\">Description</h4>\\n<p>Verifies that the certificate belongs to the host using CURLOPT_SSL_VERIFYHOST.</p>\\n<h4 id=\\\"parameters-17\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to verify a certificate belonging to the host.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-24\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"enablefreshconnectionenable-as-boolean-as-boolean\\\">EnableFreshConnection(enable as Boolean) as Boolean</h3>\\n<h4 id=\\\"description-27\\\">Description</h4>\\n<p>Enables a fresh connection using CURLOPT_FRESH_CONNECT.</p>\\n<h4 id=\\\"parameters-18\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying whether to enable fresh connections.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-25\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"sethttpversionversion-as-string-as-void\\\">SetHttpVersion(version as String) as Void</h3>\\n<h4 id=\\\"description-28\\\">Description</h4>\\n<p>An optional function that enables HTTP/2 support. If version is set to <code>\\\"http2\\\"</code>, HTTP/2 will be used for all underlying transfers. </p>\\n<p>This must be set on a roUrlTransfer instance prior to any data transfer. The HTTP version used by an instance cannot be changed  after the instance's first use. </p>\\n<p>For the HTTP/2 connection sharing feature, all roUrlTransfers should be made from the same thread.</p>\\n<h4 id=\\\"parameters-19\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>version</td>\\n<td>String</td>\\n<td>The http version to be used (for example, \\\"http2\\\" for HTTP/2). <code>\\\"AUTO\\\"</code> is the default value, which causes the roUrlTransfer connection to auto-negotiate HTTP/1.x or HTTP/2, depending on the agreement reached by client and server.</td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p>SetHttpVersion does not impact the connection made by the Roku Media player, which will always use HTTP/1.x.</p>\\n</blockquote>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifvideoplayer.md":"{\n  \"content\": \"<h1 id=\\\"ifvideoplayer\\\">ifVideoPlayer</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rovideoplayer.md\\\" title=\\\"roVideoPlayer\\\">roVideoPlayer</a></td>\\n<td>The roVideoPlayer component implements a video player with more programmatic control, but less user control than the roVideoScreen component</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setcontentlistcontentlist-as-object-as-void\\\">SetContentList(contentList as Object) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the content to be played by the roVideoPlayer.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentList</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> (<a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">Content Meta-Data</a> objects) representing the information for each stream to be played.<br /><br />If the player is currently playing the player will be stopped. Next, the current player position is reset so the next time Play() is called, playback will start at the first item of the content list (unless Seek() is called prior to Play()).<br /><br />roVideoPlayer prefetches the next item in the content list while the current item is playing. Given sufficient network throughput, there is no rebuffering when the player switches to the next item in the list. To signal the content transition, the player sends an isRequestSucceeded notification with the old content index and isListItemSelected notification with the new content index.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addcontentcontentitem-as-object-as-void\\\">AddContent(contentItem as Object) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Adds a new <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">Content Meta-Data</a> item to the end of the content list for the roVideoPlayer. roVideoPlayer playback buffers on each Content item transition.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>contentItem</td>\\n<td>Object</td>\\n<td>The <a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">content metadata</a> item to be added to the content list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"clearcontent-as-void\\\">ClearContent() as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Clears all content from the roVideoPlayer. If the player is currently playing, it stops. Next, the current player position is reset so the next time the <a href=\\\"#play-as-boolean\\\">Play()</a> method is called, playback starts at the first item of the content list (unless the <a href=\\\"#seekoffsetms-as-integer-as-boolean\\\">Seek()</a> method is called prior to Play()).</p>\\n<h3 id=\\\"prebuffer-as-boolean\\\">PreBuffer() as Boolean</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Begins downloading and buffering of a video that may be selected by a user. This method can be used to reduce buffering delays after a user has selected a video for playback. It is typically called when the user is in the roSpringboardScreen (or equivalent), anticipating that the user will select a video on the springboard screen for download.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"play-as-boolean\\\">Play() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Puts the roVideoPlayer object into play mode starting at the beginning of the content list. This will stop any currently playing Content List. </p>\\n<p>If the <a href=\\\"#seekoffsetms-as-integer-as-boolean\\\">Seek()</a> method was called prior to this method, the player will start playing at the seek position. If Seek() was not called, the player advances its current position to the next item in the content list and starts playing that item.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"stop-as-boolean\\\">Stop() as Boolean</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Stops playback and resets the seek position; keeps the player’s current position unchanged.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"pause-as-boolean\\\">Pause() as Boolean</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Puts the roVideoPlayer object into pause mode. If the player is already in pause mode, this will generate an error.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"resume-as-boolean\\\">Resume() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Puts the roVideoPlayer object into play mode starting from the pause point. This method must be called when the roVideoPlayer object is in pause mode; otherwise, it will generate an error.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. </p>\\n<h3 id=\\\"setlooploop-as-boolean-as-void\\\">SetLoop(loop as Boolean) as Void</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Automatically replays the content list. This method buffers on every loop to the beginning of the content list.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>loop</td>\\n<td>Boolean</td>\\n<td>Enables the automatic replaying of the content list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setnextitem-as-integer-as-void\\\">SetNext(item as Integer) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Sets the next item in the Content List to be played.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>item</td>\\n<td>Integer</td>\\n<td>The unique ID of the content item to be played next.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"seekoffsetms-as-integer-as-boolean\\\">Seek(offsetMs as Integer) as Boolean</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets the start point of playback for the current video to a specific offset. </p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>offsetMs</td>\\n<td>Integer</td>\\n<td>The number of milliseconds to offset the playback of the current content item.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setpositionnotificationperiodperiod-as-integer-as-void\\\">SetPositionNotificationPeriod(period as Integer) as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Sets the interval to receive playback position events from the roVideoPlayer.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>period</td>\\n<td>Integer</td>\\n<td>The notification period for receiving playback position events in seconds. Notification events sent to the script specify the position in seconds relative to the beginning of the stream. If the value is 0, position notifications are never sent. The default value is 0.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setcgmslevel-as-integer-as-void\\\">SetCGMS(level as Integer) as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Sets CGMS (Copy Guard Management System) on analog outputs to the desired level.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>level</td>\\n<td>Integer</td>\\n<td>The level to which CGMS is set. This may be one of the following values: <ul>\\n<li>0 - No Copy Restriction</li>\\n<li>1 - Copy No More</li>\\n<li>2 - Copy Once Allowed</li>\\n<li>3 – No Copying Permitted</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdestinationrectrect-as-object-as-void\\\">SetDestinationRect(rect as Object) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Sets the target display window for the video.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rect</td>\\n<td>Object</td>\\n<td>The parameters of the target display window, which include the x and y coordinates, width, and height {x:Integer, y:Integer, w:Integer, h:Integer}<br /><br />The default value is: {x:0, y:0, w:0, h:0}, which is full screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdestinationrectx-as-integer-y-as-integer-w-as-integer-h-as-integer-as-void\\\">SetDestinationRect(x as Integer, y as Integer, w as Integer, h as Integer) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Sets the target display window for the video. This is similar to the <a href=\\\"#setdestinationrectrect-as-object-as-void\\\">SetDestinationRect()</a> function except that the values are specified as separate parameters.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x coordinate of the target display window.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y coordinate of the target display window.</td>\\n</tr>\\n<tr>\\n<td>w</td>\\n<td>Integer</td>\\n<td>The width of the target display window.</td>\\n</tr>\\n<tr>\\n<td>h</td>\\n<td>Integer</td>\\n<td>The height coordinate of the target display window.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setmaxvideodecoderesolutionwidth-as-integer-height-as-integer-as-void\\\">SetMaxVideoDecodeResolution(width as Integer, height as Integer) as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Sets the max resolution required by your video. </p>\\n<p>Video decode memory is a shared resource with OpenGL texture memory. The BrightScript 2D APIs are implemented using OpenGL texture memory on Roku models that support the OpenGL APIs (please see <a href=\\\"/docs/specs/hardware.md#current-models\\\" title=\\\"Roku Models and Features\\\">Roku Models and Features</a> for a list of these models). For models that do not support OpenGL APIs, this method exists for API compatibility but has no effect on actual memory allocations.</p>\\n<p>Video decode memory allocation is based on a resolution of 1920x1080 or 1280x720 as the maximum supported resolution for a particular Roku model (please see <a href=\\\"/docs/specs/hardware.md#current-models\\\" title=\\\"Roku Models and Features\\\">Roku Models and Features</a> for a list of these models).</p>\\n<p>This API enables applications that want to use both the 2D APIs and video playback with a lower resolution than 1080p. Without this call, these applications are likely to not have enough memory for either video playback or roScreen rendering.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The maximum height required by your video.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The maximum width required by your video.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getplaybackduration-as-integer\\\">GetPlaybackDuration() as Integer</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Returns the duration of the video, in seconds. This information may not be available until after the video starts playing. </p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>The duration of the video. A value of 0 is returned if the duration is unknown.</p>\\n<h3 id=\\\"getaudiotracks-as-object\\\">GetAudioTracks() as Object</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Returns the audio tracks contained in the current stream.</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>An roArray, where each element in the array represents a single audio track that contains the following attributes: ${getaudiotracksvalues}</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Attribute</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Language</td>\\n<td>String</td>\\n<td>Language code (\\\"eng\\\" for English, etc.)</td>\\n</tr>\\n<tr>\\n<td>Track</td>\\n<td>String</td>\\n<td>Audio track identifier</td>\\n</tr>\\n<tr>\\n<td>Name</td>\\n<td>String</td>\\n<td>Track name</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"changeaudiotracktrackid-as-string-as-void\\\">ChangeAudioTrack(trackID as String) as Void</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Changes the currently playing audio track. For content with multiple audio tracks, the current track can be selected programmatically using this function.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>trackID</td>\\n<td>String</td>\\n<td>The audio track identifier returned by GetAudioTracks().</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"settimedmetadataforkeyskeys-as-dynamic-as-void\\\">SetTimedMetaDataForKeys(keys[] as Dynamic) as Void</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Specifies the timedMetaData keys that the BrightScript channel is interested in receiving from the timedMetaData event.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>keys[]</td>\\n<td>Dynamic</td>\\n<td>An array of timedMetaData keys for the  channel to receive from the timedMetaData event.<br /><br />If the keys array is empty, all the timed metadata associated with the current stream is sent with the isTimedMetaData event. If the keys array is invalid, then do not return any keys to the BrightScript channel. Any keys not specified with this method are deleted by the Roku OS and never returned to the BrightScript application.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getcaptionrenderer-as-object\\\">GetCaptionRenderer() as Object</h3>\\n<h4 id=\\\"description-20\\\">Description</h4>\\n<p>This method returns the <a href=\\\"/docs/references/brightscript/components/rocaptionrenderer.md\\\" title=\\\"roCaptionRenderer\\\">roCaptionRenderer</a> instance associated with this roVideoPlayer.</p>\\n<p>Channels that render their own captions need to call this method to get the caption renderer for their video player. This is required for doing capture rendering. See <a href=\\\"/docs/references/brightscript/components/rocaptionrenderer.md\\\" title=\\\"roCaptionRenderer\\\">roCaptionRenderer</a> for details.</p>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>The <a href=\\\"/docs/references/brightscript/components/rocaptionrenderer.md\\\" title=\\\"roCaptionRenderer\\\">roCaptionRenderer</a> instance associated with this roVideoPlayer.</p>\\n<h3 id=\\\"setmacrovisionlevellevel-as-integer-as-void\\\">SetMacrovisionLevel(level as Integer) as Void</h3>\\n<blockquote>\\n<p>This function is deprecated. Roku no longer supports Macrovision and this function exists as a no-op so that legacy scripts do not break.</p>\\n</blockquote>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifvideoscreen.md":"{\n  \"content\": \"<h1 id=\\\"ifvideoscreen\\\">ifVideoScreen</h1>\\n<blockquote>\\n<p>This interface is deprecated.Beginning July 1st, 2017, any new channels using this component will be rejected during certification.Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/rovideoscreen.md\\\" title=\\\"roVideoScreen\\\">roVideoScreen</a></td>\\n<td>The Video Screen object implements the video playback portion of the user interface</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"setcontentcontent-as-object-as-void\\\">SetContent(content as Object) as Void</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Sets the content to be played in the <a href=\\\"/docs/references/brightscript/components/rovideoscreen.md\\\" title=\\\"roVideoScreen\\\">roVideoScreen</a>. You can call this method while playing video, and it will use the new data (release date, length, and title) when showing the program info in the Heads Up Display (HUD).</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>content</td>\\n<td>Object</td>\\n<td>An <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray</a> describing the attributes (<a href=\\\"/docs/developer-program/getting-started/architecture/content-metadata.md\\\" title=\\\" Content Meta-Data\\\">Content Meta-Data</a>) for the title.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setpositionnotificationperiodperiod-as-integer-as-void\\\">SetPositionNotificationPeriod(period as Integer) as Void</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Sets the interval for receiving playback position events from the roVideoScreen object.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>period</td>\\n<td>Integer</td>\\n<td>The notification period for receiving playback position events in seconds. Notification events sent to the script specify the position in seconds relative to the beginning of the stream. If the value is 0, position notifications are never sent. The default value is 0.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setpreviewmodeenable-as-boolean-as-void\\\">SetPreviewMode(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Sets preview mode on/off. In preview mode, trick play operations (fast forward and rewind) are disabled.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>A flag specifying to turn preview mode on (true) or off (false).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setcgmslevel-as-integer-as-void\\\">SetCGMS(level as Integer) as Void</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Sets CGMS (Copy Guard Management System) on analog outputs to the desired level.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>level</td>\\n<td>Integer</td>\\n<td>The level to which CGMS is set. This may be one of the following values: <ul>\\n<li>0 - No Copy Restriction</li>\\n<li>1 - Copy No More</li>\\n<li>2 - Copy Once Allowed</li>\\n<li>3 – No Copying Permitted</li>\\n</ul></td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"show-as-boolean\\\">Show() as Boolean</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Displays/refreshes the screen after creation or state changes.</p>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the screen was successfully refreshed. </p>\\n<h3 id=\\\"close-as-void\\\">Close() as Void</h3>\\n<p>Closes the screen and delete the associated object. This method is useful for avoiding screen flicker when the display order of your screens does not resemble a stack.</p>\\n<h3 id=\\\"pause-as-void\\\">Pause() as Void</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>Pauses the video.</p>\\n<h3 id=\\\"resume-as-void\\\">Resume() as Void</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>Resumes the video.</p>\\n<h3 id=\\\"prebuffer-as-boolean\\\">PreBuffer() as Boolean</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Begins downloading and buffering of a video that may be selected by a user. This can be used to reduce buffering delays after a user has selected a video for playback. A typical use would be to call PreBuffer() when the user is in the roSpringboardScreen (or equivalent), anticipating that the user will select a video on the springboard screen for download.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful.</p>\\n<h3 id=\\\"seekmilliseconds-as-integer-as-boolean\\\">Seek(milliSeconds as Integer) as Boolean</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Sets the start point of playback for the current video to a specific offset.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>milliSeconds</td>\\n<td>Integer</td>\\n<td>The number of milliseconds to offset the playback of the current content item.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>A flag indicating whether the seek operation was successful.</p>\\n<h3 id=\\\"setdestinationrectrect-as-object-as-void\\\">SetDestinationRect(rect as Object) as Void</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Sets the target display window for the video.</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>rect</td>\\n<td>Object</td>\\n<td>The parameters of the target display window, which include the x and y coordinates, width, and height {x:Integer, y:Integer, w:Integer, h:Integer}<br /><br />The default value is: {x:0, y:0, w:0, h:0}, which is full screen.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setdestinationrectx-as-integer-y-as-integer-w-as-integer-h-as-integer\\\">SetDestinationRect(x as Integer, y as Integer, w as Integer, h as Integer)</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets the target display window for the video. This is an alternate way to call the <strong>SetDestinationRectangle()</strong> method with each parameter passed separately instead of in an Associative Array.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>x</td>\\n<td>Integer</td>\\n<td>The x-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>y</td>\\n<td>Integer</td>\\n<td>The y-coordinate of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>w</td>\\n<td>Integer</td>\\n<td>The width of the rectangle.</td>\\n</tr>\\n<tr>\\n<td>h</td>\\n<td>Integer</td>\\n<td>The height of the rectangle.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setmaxvideodecoderesolutionwidth-as-integer-height-as-integer-as-void\\\">SetMaxVideoDecodeResolution(width as Integer, height as Integer) as Void</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Sets the max resolution required by your video. </p>\\n<p>Video decode memory is a shared resource with OpenGL texture memory. The BrightScript 2D APIs are implemented using OpenGL texture memory on Roku models that support the OpenGL APIs (please see <a href=\\\"/docs/specs/hardware.md#current-models\\\" title=\\\"Roku Models and Features\\\">Roku Models and Features</a> for a list of these models). For models that do not support OpenGL APIs, this method exists for API compatibility but has no effect on actual memory allocations.</p>\\n<p>Video decode memory allocation is based on a resolution of 1920x1080 or 1280x720 as the maximum supported resolution for a particular Roku model (please see <a href=\\\"/docs/specs/hardware.md#current-models\\\" title=\\\"Roku Models and Features\\\">Roku Models and Features</a> for a list of these models).</p>\\n<p>This API enables applications that want to use both the 2D APIs and video playback with a lower resolution than 1080p. Without this call, these applications are likely to not have enough memory for either video playback or roScreen rendering.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>width</td>\\n<td>Integer</td>\\n<td>The maximum height required by your video.</td>\\n</tr>\\n<tr>\\n<td>height</td>\\n<td>Integer</td>\\n<td>The maximum width required by your video.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setmacrovisionlevellevel-as-integer-as-void\\\">SetMacrovisionLevel(level as Integer) as Void</h3>\\n<blockquote>\\n<p>This function is deprecated. Roku no longer supports Macrovision and this function exists as a no-op so that legacy scripts do not break.</p>\\n</blockquote>\\n<h3 id=\\\"setloopenable-as-boolean-as-void\\\">SetLoop(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Enables the player to start again from the beginning immediately after finishing a content item.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>Specifies the player to start playing a content item from the beginning as soon as the item has been completed. The default is false.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"enabletrickplayenable-as-boolean-as-void\\\">EnableTrickPlay(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Enables <a href=\\\"/docs/developer-program/media-playback/trick-mode.md\\\">trickplay mode</a> during playback. Trickplay mode provides visual feedback during playback operations such as forward and rewind by displaying the timestamp of the content being seeked.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>Specifies the player to use trick play mode during playback.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"settimedmetadataforkeyskeys-as-dynamic-as-void\\\">SetTimedMetaDataForKeys(keys[] as Dynamic) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Specifies the timedMetaData keys that the BrightScript channel is interested in receiving from the timedMetaData event.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>keys[]</td>\\n<td>Dynamic</td>\\n<td>An array of timedMetaData keys for the  channel to receive from the timedMetaData event. If the keys array is empty, all the timed metadata associated with the current stream is sent with the isTimedMetaData event. If the keys array is invalid, then do not return any keys to the BrightScript channel. Any keys not specified with this method are deleted by the Roku OS and never returned to the BrightScript application.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setguidedtrickplayenable-as-boolean-as-void\\\">SetGuidedTrickPlay(enable as Boolean) as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Enables guided trickplay mode (the  channel takes control of resuming playback after trickplay). This means that the roVideoScreen object no longer resumes playback automatically,  but instead waits for an acknowledgment from the channel.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>enable</td>\\n<td>Boolean</td>\\n<td>Specifies the player to use guided trickplay mode during playback. By default guided trickplay mode is disabled.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"resumeackinteger-trickplayid-as-void\\\">ResumeAck(Integer trickplayid) as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Acknowledges the previously generated resume request event with a trickplay ID. When roVideoScreen receives this message, it will resume playback unless a more recent trickplay session has started. In the latter case, the ResumeAck message is ignored and playback is not resumed.</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Trickplayid</td>\\n<td>Integer</td>\\n<td>The trickplay ID to be used to acknoweldge a resume request event.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifxmlelement.md":"{\n  \"content\": \"<h1 id=\\\"ifxmlelement\\\">ifXMLElement</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmlelement.md\\\" title=\\\"roXMLElement\\\">roXMLElement</a></td>\\n<td>roXMLElement is used to contain an XML tree</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"parsexml-as-string-as-boolean\\\">Parse(xml as String) as Boolean</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Parses a string of XML. </p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>xml</td>\\n<td>String</td>\\n<td>The XML string to be parsed</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>A flag indicating whether the operation was successful. In that case, other methods below can then be used to extract information about the parsed element.</p>\\n<h3 id=\\\"getbody-as-object\\\">GetBody() as Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns the body of the element. If the element contains child elements, <code>GetBody()</code> returns an <a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a> representing those elements, like GetChildElements(). If there are no children but the element contains text, <code>GetBody()</code> returns an <a href=\\\"/docs/references/brightscript/components/rostring.md\\\" title=\\\"roString\\\">roString</a> like <code>GetText()</code>. If the element is empty, <code>GetBody()</code> returns invalid.</p>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>Object body.</p>\\n<h3 id=\\\"getattributes-as-object\\\">GetAttributes() as Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>Returns the XML attributes of the element. </p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>An associative array representing the XML attributes of the element.</p>\\n<h3 id=\\\"getname-as-string\\\">GetName() as String</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>Returns the name of the element.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>Element name.</p>\\n<h3 id=\\\"gettext-as-string\\\">GetText() as String</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>Returns any text contained in the element. This returns immediate body text only (for example, it does not include text from child elements).</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The text in the element.</p>\\n<h3 id=\\\"getchildelements-as-object\\\">GetChildElements() as Object</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>If this element contains any child elements, this method returns an <a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a> representing those elements. If there are no child elements, returns invalid. </p>\\n<p>This function won't handle cases of mixed XML content, i.e., content with both child elements and text such as: Child TextMore Text. In this case <code>GetChildElements()</code> called with the top level as an argument would return an roXMLList containing only one item corresponding to the element. The body text \\\"More Text\\\" would be lost. To handle mixed content cases, use <code>GetChildNodes()</code>.</p>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>An element list.</p>\\n<h3 id=\\\"getchildnodes-as-object\\\">GetChildNodes() as Object</h3>\\n<h4 id=\\\"description-6\\\">Description</h4>\\n<p>If this element contains any child elements, this method returns an <a href=\\\"/docs/references/brightscript/components/rolist.md\\\" title=\\\"roList\\\">roList</a> representing those elements. If there are no child elements, returns invalid. The difference between this function and <code>GetChildElements()</code> is that <code>GetChildNodes()</code> handles the case of mixed XML content, i.e., content with both child elements and text such as: Child TextMore Text. In this case <code>GetChildNodes()</code> called with the top level as an argument would return an roList with two elements. The first element would be an <code>roXMLElement</code> containing the information about. The second would be an <code>roString</code> containing \\\"More Text\\\".</p>\\n<h4 id=\\\"return-value-6\\\">Return Value</h4>\\n<p>An element list.</p>\\n<h3 id=\\\"getnamedelementsname-as-string-as-object\\\">GetNamedElements(name as String) as Object</h3>\\n<h4 id=\\\"description-7\\\">Description</h4>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a> representing all child elements of this element whose case-sensitive name is specified. If only one element matches the name, an roXMLList containing one element is returned. If no elements match, an empty roXMLList is returned.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The parent element containing the child elements to be listed. Matching of the parent element name is case-sensitive.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-7\\\">Return Value</h4>\\n<p>An element list.</p>\\n<h3 id=\\\"getnamedelementsciname-as-string-as-object\\\">GetNamedElementsCi(name as String) as Object</h3>\\n<h4 id=\\\"description-8\\\">Description</h4>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a> representing all child elements of this element whose case-insensitive name is specified. If only one element matches the name, an roXMLList containing one element is returned. If no elements match, an empty roXMLList is returned.</p>\\n<h4 id=\\\"parameters-2\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The parent element containing the child elements to be listed. Matching of the parent element name is case-sensitive.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-8\\\">Return Value</h4>\\n<p>An element list.</p>\\n<h3 id=\\\"isnamename-as-string-as-boolean\\\">IsName(name as String) as Boolean</h3>\\n<h4 id=\\\"description-9\\\">Description</h4>\\n<p>Checks whether the element has the specified name.</p>\\n<h4 id=\\\"parameters-3\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The element name to be verified.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-9\\\">Return Value</h4>\\n<p>A flag indicating whether the element has the specified name.</p>\\n<h3 id=\\\"hasattributeattr-as-string-as-boolean\\\">HasAttribute(attr as String) as Boolean</h3>\\n<p>Checks whether the element has the specified attribute.</p>\\n<h4 id=\\\"parameters-4\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>attr</td>\\n<td>String</td>\\n<td>The element attribute to be verified.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-10\\\">Return Value</h4>\\n<p>A flag indicating whether the element has the specified attribute.</p>\\n<h3 id=\\\"setbodybody-as-object-as-void\\\">SetBody(body as Object) as Void</h3>\\n<h4 id=\\\"description-10\\\">Description</h4>\\n<p>Sets the element text from the specified string</p>\\n<h4 id=\\\"parameters-5\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>body</td>\\n<td>Object</td>\\n<td>The string to be used to set the element text.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addbodyelement-as-object\\\">AddBodyElement() as Object</h3>\\n<h4 id=\\\"description-11\\\">Description</h4>\\n<p>Adds a new unnamed/empty child element and returns it. This should generally be followed by a call to the <a href=\\\"#setnamename-as-string-as-void\\\">SetName()</a> method of the child element. Alternatively, the <a href=\\\"#addelementname-as-string-as-object\\\">AddElement()</a> or <a href=\\\"#addelementwithbodyname-as-string-body-as-object-as-object\\\">AddElementWidthBody()</a> method can be used to combine this step with additional construction into one call.</p>\\n<h4 id=\\\"return-value-11\\\">Return Value</h4>\\n<p>Object value.</p>\\n<h3 id=\\\"addelementname-as-string-as-object\\\">AddElement(name as String) as Object</h3>\\n<h4 id=\\\"description-12\\\">Description</h4>\\n<p>Adds a new child element with the specified name and returns the new element.</p>\\n<h4 id=\\\"parameters-6\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The name of the child element to be added.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-12\\\">Return Value</h4>\\n<p>The new element added. </p>\\n<h3 id=\\\"addelementwithbodyname-as-string-body-as-object-as-object\\\">AddElementWithBody(name as String, body as Object) as Object</h3>\\n<h4 id=\\\"description-13\\\">Description</h4>\\n<p>Adds a new child element with the specified name and text from the specified body string, and returns the new element.</p>\\n<h4 id=\\\"parameters-7\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The name of the child element to be added.</td>\\n</tr>\\n<tr>\\n<td>body</td>\\n<td>Object</td>\\n<td>The text of the child element to be added (via the body string).</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-13\\\">Return Value</h4>\\n<p>The new element added. </p>\\n<h3 id=\\\"addtexttext-as-string-as-void\\\">AddText(text as String) as Void</h3>\\n<h4 id=\\\"description-14\\\">Description</h4>\\n<p>Adds text to the element.</p>\\n<h4 id=\\\"parameters-8\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>text</td>\\n<td>String</td>\\n<td>The text to be added to the element.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"addattributeattr-as-string-value-as-string-as-void\\\">AddAttribute(attr as String, value as String) as Void</h3>\\n<h4 id=\\\"description-15\\\">Description</h4>\\n<p>Adds an attribute value to the element. If an attribute of the same name already exists it is replaced. XML attribute order is not preserved.</p>\\n<h4 id=\\\"parameters-9\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>attr</td>\\n<td>String</td>\\n<td>The name of the attribute to be added to the element.</td>\\n</tr>\\n<tr>\\n<td>value</td>\\n<td>Object</td>\\n<td>The value of the attribute being added to the element.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"setnamename-as-string-as-void\\\">SetName(name as String) as Void</h3>\\n<h4 id=\\\"description-16\\\">Description</h4>\\n<p>Sets the name of the element.</p>\\n<h4 id=\\\"parameters-10\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>name</td>\\n<td>String</td>\\n<td>The name of the element.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"genxmlgen_header-as-boolean-as-string\\\">GenXML(gen_header as Boolean) as String</h3>\\n<h4 id=\\\"description-17\\\">Description</h4>\\n<p>Serializes the element to XML document text.</p>\\n<h4 id=\\\"parameters-11\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>gen_header</td>\\n<td>Boolean</td>\\n<td>Specifies whether the output begins with a standard XML declaration specifying UTF-8 encoding.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-14\\\">Return Value</h4>\\n<p>A serialized string.</p>\\n<h3 id=\\\"genxmlhdrhdr-as-string-as-string\\\">GenXMLHdr(hdr as String) as String</h3>\\n<h4 id=\\\"description-18\\\">Description</h4>\\n<p>Serializes the element to XML document text. The specified header is used to begin the output (for example, as a custom XML declaration).</p>\\n<h4 id=\\\"parameters-12\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>hdr</td>\\n<td>String</td>\\n<td>Specify the header with which the output begins.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-15\\\">Return Value</h4>\\n<p>A serialized string.</p>\\n<h3 id=\\\"clear-as-void\\\">Clear() as Void</h3>\\n<h4 id=\\\"description-19\\\">Description</h4>\\n<p>Removes all attributes and children from the element, as well as setting the name to empty.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/interfaces/ifxmllist.md":"{\n  \"content\": \"<h1 id=\\\"ifxmllist\\\">ifXMLList</h1>\\n<h2 id=\\\"implemented-by\\\">Implemented by</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/docs/references/brightscript/components/roxmllist.md\\\" title=\\\"roXMLList\\\">roXMLList</a></td>\\n<td>Contains a list of roXML objects</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getnamedelementsname-as-string-as-object\\\">GetNamedElements(name As String) As Object</h3>\\n<h4 id=\\\"description\\\">Description</h4>\\n<p>Returns a new XMLList that contains all roXMLElements that matched the passed in name (case-sensitive matching is used). This is the same as using the dot operator on an roXMLList.</p>\\n<h4 id=\\\"parameters\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Name</td>\\n<td>String</td>\\n<td>The XML element to be used to find matches.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value\\\">Return Value</h4>\\n<p>An XMLList that contains the matches. </p>\\n<h3 id=\\\"getnamedelementsciname-as-string-as-object\\\">GetNamedElementsCi(name As String) As Object</h3>\\n<h4 id=\\\"description-1\\\">Description</h4>\\n<p>Returns a new XMLList that contains all roXMLElements that matched the passed in name (case-insensitive matching is used). This is the same as using the dot operator on an roXMLList.</p>\\n<h4 id=\\\"parameters-1\\\">Parameters</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Name</td>\\n<td>String</td>\\n<td>The XML element to be used to find matches.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"return-value-1\\\">Return Value</h4>\\n<p>An XMLList that contains the matches. </p>\\n<h3 id=\\\"simplify-as-object\\\">Simplify() As Object</h3>\\n<h4 id=\\\"description-2\\\">Description</h4>\\n<p>If the list contains exactly one item, this function returns that item. Otherwise, it returns itself.</p>\\n<h4 id=\\\"return-value-2\\\">Return Value</h4>\\n<p>The object item.</p>\\n<h3 id=\\\"getattributes-as-object\\\">GetAttributes() As Object</h3>\\n<h4 id=\\\"description-3\\\">Description</h4>\\n<p>If the list contains exactly one item, this function returns the attributes of that item. Otherwise it returns invalid.</p>\\n<h4 id=\\\"return-value-3\\\">Return Value</h4>\\n<p>The object item.</p>\\n<h3 id=\\\"gettext-as-string\\\">GetText() As String</h3>\\n<h4 id=\\\"description-4\\\">Description</h4>\\n<p>If the list contains exactly one item, this function returns the text of that item. Otherwise, it returns an empty string.</p>\\n<h4 id=\\\"return-value-4\\\">Return Value</h4>\\n<p>The object string.</p>\\n<h3 id=\\\"getchildelements-as-object\\\">GetChildElements() As Object</h3>\\n<h4 id=\\\"description-5\\\">Description</h4>\\n<p>If the list contains exactly one item, this function returns the child elements of that item. Otherwise it returns invalid. </p>\\n<blockquote>\\n<p>This function does not return the items contained in the roXMLList. Use <a href=\\\"/docs/references/brightscript/interfaces/iflist.md\\\" title=\\\"ifList\\\">ifList</a> functions to access those items.</p>\\n</blockquote>\\n<h4 id=\\\"return-value-5\\\">Return Value</h4>\\n<p>The object item.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/roaudioplayerevent.md":"{\n  \"content\": \"<h1 id=\\\"roaudioplayerevent\\\">roAudioPlayerEvent</h1>\\n<p>The roAudioPlayer sends the roAudioPlayerEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"islistitemselected-as-boolean\\\">isListItemSelected() as Boolean</h3>\\n<p>A stream has been selected to start playing.</p>\\n<h3 id=\\\"isstatusmessage-as-boolean\\\">isStatusMessage() as Boolean</h3>\\n<p>Status information is available.</p>\\n<h3 id=\\\"isfullresult-as-boolean\\\">isFullResult() as Boolean</h3>\\n<p>Audio playback completed at end of content.</p>\\n<h3 id=\\\"ispaused-as-boolean\\\">isPaused() as Boolean</h3>\\n<p>Audio playback was paused by the user.</p>\\n<h3 id=\\\"isresumed-as-boolean\\\">isResumed() as Boolean</h3>\\n<p>Audio playback has resumed</p>\\n<h3 id=\\\"ispartialresult-as-boolean\\\">isPartialResult() as Boolean</h3>\\n<p>Audio playback was interrupted</p>\\n<h3 id=\\\"isrequestfailed-as-boolean\\\">isRequestFailed() as Boolean</h3>\\n<p>Audio playback failed due to an error</p>\\n<h3 id=\\\"istimedmetadata-as-boolean\\\">isTimedMetaData() as Boolean</h3>\\n<p>This event is fired when an ID3 timecode has passed with an event that includes key/value pairs for timed metadata that the Brightscript channel is interested in.</p>\\n<p>All timed metadata is released after it is delivered to the Brightscript channel. It is also released without delivery if the Brightscript channel did not indicate it’s interest in the data with a SetTimedMetaDataForKeys() call.</p>\\n<h3 id=\\\"isrequestsucceeded-as-boolean\\\">isRequestSucceeded() as Boolean</h3>\\n<p>Stream playback has completed successfully.</p>\\n<h4 id=\\\"getmessage-as-string\\\">GetMessage() as String</h4>\\n<p>Returns the string \\\"Timed Metadata\\\"</p>\\n<h4 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h4>\\n<p>Returns an associative array of key/value pairs of timedMetadata at the pts timecode specified in the index.</p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the audio stream.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rocaptionrendererevent.md":"{\n  \"content\": \"<h1 id=\\\"rocaptionrendererevent\\\">roCaptionRendererEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>roCaptionRenderer events are sent by the roCaptionRenderer to notify a BrightScript channel when caption data needs to be rendered. Specifically, one of two events, isCaptionText and isUpdateCaptionRequest, will be fired depending on the mode that the caption renderer is in.  The mode is set by calling the <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#setmodemode-as-integer-as-void\\\" title=\\\"ifCaptionRenderer.SetMode()\\\">ifCaptionRenderer.SetMode()</a> function.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Mode</th>\\n<th>Event</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>1</td>\\n<td>isCaptionUpdateRequest</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>isCaptionText</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"iscaptionupdaterequest-as-boolean\\\">isCaptionUpdateRequest() as Boolean</h3>\\n<p>This event notifies the BrightScript channel that a caption is ready to be rendered by the Roku OS. In response, if the channel uses roScreen, the BrightScript code must call <a href=\\\"/docs/references/brightscript/interfaces/ifcaptionrenderer.md#updatecaption-as-void\\\" title=\\\"UpdateCaption()\\\">UpdateCaption()</a> to tell the Roku OS to draw the caption text. If roImageCanvas is being used, this function does not need to be called.</p>\\n<h3 id=\\\"iscaptiontext-as-boolean\\\">isCaptionText() as Boolean</h3>\\n<p>This event is fired when the roCaptionRenderer has mode 2 set whenever a caption is encountered in the stream or external caption file.</p>\\n<p>A BrightScript channel should respond to this event by rendering the caption string passed with the event using whatever font, placement, etc. the channel desires.</p>\\n<h4 id=\\\"getmessage-as-string\\\">GetMessage() as String</h4>\\n<p>Returns the caption string.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rocecstatusevent.md":"{\n  \"content\": \"<h1 id=\\\"rocecstatusevent\\\">roCECStatusEvent</h1>\\n<p><em>Available since Roku OS 8</em></p>\\n<p>This event determines the active source status for set boxes. Channels subscribing to the <code>roCECStatusEvent</code> will be notified when the active-source status of the device changes per the CEC message traffic.</p>\\n<p>To use the roCECStatusEvent, follow the steps below:</p>\\n<ol>\\n<li>Connect a Roku STB to a TV which transmits and receives CEC messages</li>\\n<li>Select the HDMI input to which the STB is connected</li>\\n<li>Switch away and then back to the STB's HDMI input</li>\\n</ol>\\n<h2 id=\\\"subscription\\\">Subscription</h2>\\n<p>A BrightScript app subscribes to roCECStatusEvent by creating an \\\"roCECStatus\\\" object. For example:</p>\\n<pre><code>cecstatus = CreateObject(\\\"roCECStatus\\\")\\nm.port = CreateObject(\\\"roMessagePort\\\")\\ncecstatus.SetMessagePort(m.port)\\n...\\nmsg = wait(0, m.port)\\nmsgType = type(msg)\\nif msgType = \\\"roCECStatusEvent\\\"\\n</code></pre>\\n<h2 id=\\\"expected-results\\\">Expected Results</h2>\\n<p>Channels subscribing to this event will be notified when the active-source status of the device changes.</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isactivesource-as-boolean\\\">isActiveSource() as Boolean</h3>\\n<p>Checks whether the device is the active source. This method returns true if the device is the active source; otherwise, it returns false. </p>\\n<p>Add <code>cecstatus.isActiveSource()</code> to indicate the current active-source status of the device.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rochannelstoreevent.md":"{\n  \"content\": \"<h1 id=\\\"rochannelstoreevent\\\">roChannelStoreEvent</h1>\\n<p>The roChannelStore sends an roChannelStoreEvent in response to a call to any of several Get* methods in <a href=\\\"/docs/references/brightscript/interfaces/ifchannelstore.md\\\" title=\\\"ifChannelStore\\\">ifChannelStore</a>. The following predicates indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isrequestsucceeded-as-boolean\\\">isRequestSucceeded() as Boolean</h3>\\n<p>Checks whether the previous GET request has completed successfully.</p>\\n<h4 id=\\\"getsourceidentity-as-integer\\\">GetSourceIdentity() as Integer</h4>\\n<p>Returns a unique number that can be matched with the value returned by ifChannelStore.GetIdentity() to determine which roChannelStore object this event came from</p>\\n<h4 id=\\\"getresponse-as-object\\\">GetResponse() as Object</h4>\\n<p>Returns an roList of roAssociativeArray items for the previous GET method invocation. The format of each roAssociativeArray item depends on which GETmethod was invoked. See <a href=\\\"/docs/references/brightscript/interfaces/ifchannelstore.md\\\" title=\\\"ifChannelStore\\\">ifChannelStore</a> for more details.</p>\\n<p>In the case of a successfully completed ifChannelStore.DoOrder() initiated purchase transaction, the object returned by GetResponse() is an associative array containing the following information:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>amount</td>\\n<td>Price of each purchased item</td>\\n</tr>\\n<tr>\\n<td>code</td>\\n<td>Product code. This corresponds to the product identifier that the developer assigns to the specific in-app purchase product</td>\\n</tr>\\n<tr>\\n<td>purchaseID</td>\\n<td>Contains the unique transaction ID of the transaction. Channels often use this value to entitle users to purchased subscriptions, etc. in their back end systems</td>\\n</tr>\\n<tr>\\n<td>qty</td>\\n<td>Quantity of the specific product purchased</td>\\n</tr>\\n<tr>\\n<td>total</td>\\n<td>Total purchase amount (including taxes) in the local currency</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isrequestfailed-as-boolean\\\">isRequestFailed() as Boolean</h3>\\n<p>Checks whether the previous GET request has completed failed.</p>\\n<h4 id=\\\"getsourceidentity-as-integer-1\\\">GetSourceIdentity() as Integer</h4>\\n<p>Returns a unique number that can be matched with the value returned by ifChannelStore.GetIdentity() to determine which roChannelStore object this event came from.</p>\\n<h4 id=\\\"getstatus-as-integer\\\">GetStatus() as Integer</h4>\\n<p>Checks for the reason for failure. This method returns one of the following codes that indicate the reason for failure:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Integer code</th>\\n<th>Failure reason</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>2</td>\\n<td>Interrupted</td>\\n</tr>\\n<tr>\\n<td>-1</td>\\n<td>HTTP timeout</td>\\n</tr>\\n<tr>\\n<td>-2</td>\\n<td>Other timeouts</td>\\n</tr>\\n<tr>\\n<td>-3</td>\\n<td>Unknown error</td>\\n</tr>\\n<tr>\\n<td>-4</td>\\n<td>Empty list</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"getstatusmessage-as-string\\\">GetStatusMessage() as String</h4>\\n<p>Describes the status of the completed request. This method returns a human-readable string describing the status of the completed request.</p>\\n<h3 id=\\\"isrequestinterrupted-as-boolean\\\">isRequestInterrupted() as Boolean</h3>\\n<p>Checks if the previous GET request did not complete. This method returns true if the request was not complete; otherwise, it returns false. </p>\\n<h4 id=\\\"getsourceidentity-as-integer-2\\\">GetSourceIdentity() as Integer</h4>\\n<p>Returns a unique number that can be matched with the value returned by ifChannelStore.GetIdentity() to determine which roChannelStore object this event came from.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rocoderegistrationscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rocoderegistrationscreenevent\\\">roCodeRegistrationScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roCodeRegistrationScreen sends the roCodeRegistrationScreenEvent with the following predicates that indicate its valid event types: </p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks if the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false.</p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks if a button on the screen was selected. This method returns true if the button was selected; otherwise, it returns false.</p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button that was selected (the first parameter to AddButton)</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rodeviceinfoevent.md":"{\n  \"content\": \"<h1 id=\\\"rodeviceinfoevent\\\">roDeviceInfoEvent</h1>\\n<p><em>Available since Roku OS 8</em></p>\\n<p>The roDeviceInfo component sends the roDeviceInfoEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isstatusmessage-as-boolean\\\">isStatusMessage() as Boolean</h3>\\n<p>Checks if the device status has changed. This method returns true if the device status has changed; otherwise, it returns false.</p>\\n<h4 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h4>\\n<p>Checks the current status of the device. This method returns an roAssociativeArray containing one of the following members: </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Member</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>linkStatus</td>\\n<td>Boolean</td>\\n<td>True if the device currently seems to have an active network connection. The linkStatus event will only ever get fired if <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#enablelinkstatuseventenable-as-boolean-as-boolean\\\" title=\\\"ifDeviceInfo.EnableLinkStatusEvent(true)\\\">ifDeviceInfo.EnableLinkStatusEvent(true)</a>  is called before entering the message loop</td>\\n</tr>\\n<tr>\\n<td>audioGuideEnabled</td>\\n<td>Boolean</td>\\n<td>True if Audio Guide is enabled. The audioGuideEnabled event will only ever get fired if <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#enableaudioguidechangedeventenable-as-boolean-as-dynamic\\\" title=\\\"ifDeviceInfo.EnableAudioGuideChangedEvent(true)\\\">ifDeviceInfo.EnableAudioGuideChangedEvent(true)</a> called before entering the message loop</td>\\n</tr>\\n<tr>\\n<td>exitedScreensaver</td>\\n<td>Boolean</td>\\n<td>True if the screensaver was exited. The exitedScreensaver event will only ever get fired if <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#enablescreensaverexitedeventenable-as-boolean-as-dynamic\\\" title=\\\"ifDeviceInfo.EnableScreensaverExitedEvent(true)\\\">ifDeviceInfo.EnableScreensaverExitedEvent(true)</a> is called before entering the message loop</td>\\n</tr>\\n<tr>\\n<td>appFocus</td>\\n<td>Boolean</td>\\n<td>It is set to False when the System Overlay takes focus and True when the channel regains focus</td>\\n</tr>\\n<tr>\\n<td>generalMemoryLevel</td>\\n<td>String</td>\\n<td><em>Available since Roku OS 8.1</em><br /><br />Fires notifications to the channel about memory levels. This event will be sent first when the OS transitions from \\\"normal\\\" to \\\"low\\\" state and will continue to be sent while in \\\"low\\\" or \\\"critical\\\" states.<br /><br />The events will be throttled so as to not overwhelm the application listening for these events. The application may voluntarily free up memory by invalidating references to objects (e.g. release ContentNodes held in a cache, release offscreen renderable nodes, etc.). <br /><br />The \\\"low\\\" and \\\"critical\\\" events will be sent to the OS forces the application to exit. <ul>\\n<li>\\\"normal\\\" means that the general memory is within acceptable levels</li>\\n<li>\\\"low\\\" means that the general memory is below acceptable levels but not critical</li>\\n<li>\\\"critical\\\" means that general memory are at dangerously low level and that the OS may force terminate the application</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>audioCodecCapabilityChanged</td>\\n<td>Boolean</td>\\n<td><em>Available since Roku OS 9.1</em><br /><br />The audio codec capability has changed if true. If your application receives this event, you can check the current audio playback capability using the <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#ifDeviceInfo-CanDecodeAudio(audio_formatasObject)asObject\\\"><code>roDeviceInfo.CanDecodeAudio</code></a> and <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#ifDeviceInfo-GetAudioDecodeInfo()asObject\\\"><code>roDeviceInfo.GetAudioDecodeInfo</code></a> methods. <br /><br />This event is only fired if the <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#ifDeviceInfo-EnableAudioGuideChangedEvent(enableasBoolean)\\\"><code>ifDeviceInfo.EnableCodecCapChangedEvent(true)</code></a> is called before entering the message loop.</td>\\n</tr>\\n<tr>\\n<td>videoCodecCapabilityChanged</td>\\n<td>Boolean</td>\\n<td><em>Available since Roku OS 9.1</em><br /><br />The video codec capability has changed if true. If your application receives this event, you can check the current video playback capability using the <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#ifDeviceInfo-CanDecodeVideo(video_formatasObject)asObject\\\"><code>roDeviceInfo.CanDecodeVideo</code></a> method.<br /><br />This event is only fired if <a href=\\\"/docs/references/brightscript/interfaces/ifdeviceinfo.md#ifDeviceInfoEnableAudioGuideChangedEvent(enableasBoolean)\\\"><code>ifDeviceInfo.EnableCodecCapChangedEvent(true)</code></a> is called before entering the message loop.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"iscaptionmodechanged-as-boolean\\\">isCaptionModeChanged() as Boolean</h3>\\n<p>Indicates whether the user has changed the closed caption mode or track.  This method returns true if the caption mode changed; otherwise, it returns false. </p>\\n<p>Call the <a href=\\\"#getinfo-as-object\\\">GetInfo()</a> method to get the caption mode.</p>\\n<h4 id=\\\"getinfo-as-object-1\\\">GetInfo() as Object</h4>\\n<p>Indicates the current global setting for the Mode property, which may be one of the following values: </p>\\n<ul>\\n<li>\\\"On\\\"</li>\\n<li>\\\"Off\\\"</li>\\n<li>\\\"Instant replay\\\"</li>\\n<li>\\\"When mute\\\" (Only returned for a TV; this option is not available on STBs).</li>\\n</ul>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rofilesystemevent.md":"{\n  \"content\": \"<h1 id=\\\"rofilesystemevent\\\">roFileSystemEvent</h1>\\n<p>The roFileSystem component sends the roFileSystemEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isstoragedeviceadded-as-boolean\\\">isStorageDeviceAdded() as Boolean</h3>\\n<p>Checks if a storage device was inserted in the USB port. This method returns true if a storage device was inserted; otherwise, it returns false. </p>\\n<h4 id=\\\"getmessage-as-string\\\">GetMessage() as String</h4>\\n<p>Returns the volume name of the device inserted into the USB port. </p>\\n<h3 id=\\\"isstoragedeviceremoved-as-boolean\\\">isStorageDeviceRemoved() as Boolean</h3>\\n<p>Checks if a storage device was removed from the USB port. This method returns true if a storage device was removed; otherwise, it returns false. </p>\\n<h4 id=\\\"getmessage-as-string-1\\\">GetMessage() as String</h4>\\n<p>Returns the volume name of the device removed from the USB port. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rogridscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rogridscreenevent\\\">roGridScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.Beginning July 1st, 2017, any new channels using this component will be rejected during certification.Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roGridScreen sends the roGridScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"islistitemselected-as-boolean\\\">isListItemSelected() as Boolean</h3>\\n<p>Checks if a content item in the poster screen has been selected. This method returns true if a content item has been selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the currently focused list (row).</p>\\n<h4 id=\\\"getdata-as-integer\\\">GetData() as Integer</h4>\\n<p>Returns the index of the currently focused item (column).</p>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks if the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"islistitemfocused-as-boolean\\\">isListItemFocused() as Boolean</h3>\\n<p>Checks if a new content item in the poster screen has gained focus. This method returns true if a new item has focus; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the currently focused list (row).</p>\\n<h4 id=\\\"getdata-as-integer-1\\\">GetData() as Integer</h4>\\n<p>Returns the index of the currently focused item (column).</p>\\n<h3 id=\\\"isremotekeypressed-as-boolean\\\">isRemoteKeyPressed() as Boolean</h3>\\n<p>Checks if a remote key was pressed. This method returns true if a remote key was pressed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-2\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the remote key that was pressed. Remote key IDs are listed under <a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a></p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rohdmihotplugevent.md":"{\n  \"content\": \"<h1 id=\\\"rohdmihotplugevent\\\">roHdmiHotPlugEvent</h1>\\n<p>The roHdmiStatus sends the roHdmiHotPlugEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"ishdmihotplug-as-boolean\\\">isHdmiHotPlug() as Boolean</h3>\\n<p>Checks if an HDMI hot plug has occurred. This method returns true if an HDMI hot plug occurs; otherwise, it returns false. </p>\\n<h4 id=\\\"getmessage-as-string\\\">GetMessage() as String</h4>\\n<p>Returns the string \\\"HdmiHotPlug\\\".</p>\\n<h4 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h4>\\n<p>Retrieves the HDMI hot plug information. This method returns an associative array with the following key/value pairs: </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>PortType</td>\\n<td>string</td>\\n<td>“Rx” for input ports and “Tx” for output ports</td>\\n</tr>\\n<tr>\\n<td>PortNumber</td>\\n<td>integer</td>\\n<td>The HDMI input or output port number starting from 0</td>\\n</tr>\\n<tr>\\n<td>Plugged</td>\\n<td>Boolean</td>\\n<td>True if an HDMI device is plugged in, and false of the port is unplugged</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>The index value of this event is not used and is always set to 0.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rohdmistatusevent.md":"{\n  \"content\": \"<h1 id=\\\"rohdmistatusevent\\\">roHdmiStatusEvent</h1>\\n<p>The roHdmiStatus sends the roHdmiStatusEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"ishdmistatus-as-boolean\\\">isHdmiStatus() as Boolean</h3>\\n<p>Checks if an HDMI status event has occurred. This method returns true if an HDMI status event has occurred; otherwise, it returns false. </p>\\n<h4 id=\\\"getmessage-as-string\\\">GetMessage() as String</h4>\\n<p>Returns the string \\\"HdmiHotPlug\\\".</p>\\n<h4 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h4>\\n<p>Retrieves the HDMI information. This method returns an associative array with the following key/value pairs:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>PortType</td>\\n<td>string</td>\\n<td>“Rx” for input ports and “Tx” for output ports</td>\\n</tr>\\n<tr>\\n<td>PortNumber</td>\\n<td>integer</td>\\n<td>The HDMI input or output port number starting from 0</td>\\n</tr>\\n<tr>\\n<td>Plugged</td>\\n<td>Boolean</td>\\n<td>True if an HDMI device is plugged in, and false of the port is unplugged</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>The index value of this event is not used and is always set to 0.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/roimagecanvasevent.md":"{\n  \"content\": \"<h1 id=\\\"roimagecanvasevent\\\">roImageCanvasEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roImageCanvas sends the roImageCanvasEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks if the screen was closed and is no longer displayed to the user. This method returns true if the screen is closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks if a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Checks for the ID of the button that was selected (the first parameter to AddButton). Remote key IDs are listed under <a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a>.</p>\\n<h3 id=\\\"isremotekeypressed-as-boolean\\\">isRemoteKeyPressed() as Boolean</h3>\\n<p>Checks if a remote key was pressed. This method returns true if a remote key is pressed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h4>\\n<p>Checks the ID of the remote key which was pressed. Remote key IDs are listed under <a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a>.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>GetIndex</td>\\n<td>Integer</td>\\n<td>Remote key ID as Integer.</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/roinputevent.md":"{\n  \"content\": \"<h1 id=\\\"roinputevent\\\">roInputEvent</h1>\\n<p>The roInput component sends the roInputEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isinput-as-boolean\\\">isInput() as Boolean</h3>\\n<p>Checks if an input event was received. This method returns true if an input event was received; otherwise, it returns false. </p>\\n<h3 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h3>\\n<p>Returns an roAssociativeArray describing the input event, which may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>type</td>\\n<td>string</td>\\n<td>The type of event, which may be one of the following values:<ul>\\n<li><strong>transport</strong>. Determines the transport event sent to a channel. The command field include a string with the the type of transport event. See <a href=\\\"/docs/developer-program/media-playback/voice-controls/transport-controls.md\\\">Implementing voice controls</a> for more information.</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>id</td>\\n<td>LongInteger</td>\\n<td>The unique ID associated with the generated transport event</td>\\n</tr>\\n<tr>\\n<td>command</td>\\n<td>string</td>\\n<td>If the <strong>type</strong> is \\\"transport\\\", the associativeArray will include a commands field that specifies the type of transport command received. This may be one of the following values:<br /><ul>\\n<li>\\\"forward\\\"</li>\\n<li>\\\"next\\\"</li>\\n<li>\\\"pause\\\"</li>\\n<li>\\\"play\\\"</li>\\n<li>\\\"replay\\\"</li>\\n<li>\\\"resume\\\"</li>\\n<li>\\\"rewind\\\"</li>\\n<li>\\\"seek\\\"</li>\\n<li>\\\"stop\\\"</li>\\n<li>\\\"startover\\\"</li>\\n<li>\\\"nowplaying\\\"</li>\\n<li>\\\"skip\\\"</li>\\n<li>\\\"shuffle\\\"</li>\\n<li>\\\"loop\\\"</li>\\n<li>\\\"like\\\"</li>\\n<li>\\\"dislike\\\"</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>direction</td>\\n<td>string</td>\\n<td>For the \\\"seek\\\" transport command only. Specifies the direction of the seek command, which may be \\\"forward\\\" or \\\"backward\\\".</td>\\n</tr>\\n<tr>\\n<td>duration</td>\\n<td>string</td>\\n<td>For the \\\"seek\\\" transport command only. Specifies the number of seconds to skip forward or backward.</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rokeyboardscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rokeyboardscreenevent\\\">roKeyboardScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roKeyboardScreen sends the roKeyboardScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks if the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks if a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rolistscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rolistscreenevent\\\">roListScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roListScreen sends the roListScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"islistitemselected-as-boolean\\\">isListItemSelected() as Boolean</h3>\\n<p>Checks if a content item in the list screen has been selected. This method returns true if a content item is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the selected list item.</p>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks if the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"islistitemfocused-as-boolean\\\">isListItemFocused() as Boolean</h3>\\n<p>Checks if a new content item in the list screen has gained focus. This method returns true if a new content item gains focus; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of currently focused list item. Remote key IDs are listed under <a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a>.</p>\\n<h3 id=\\\"isremotekeypressed-as-boolean\\\">isRemoteKeyPressed() as Boolean</h3>\\n<p>Checks if a remote key was pressed. This method returns true if a remote key is pressed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-2\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the remote key which was pressed. Remote key IDs are listed under <a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a>.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/romessagedialogevent.md":"{\n  \"content\": \"<h1 id=\\\"romessagedialogevent\\\">roMessageDialogEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roMessageDialog sends the roMessageDialogEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks if the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks if a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\\n<h3 id=\\\"isbuttoninfo-as-boolean\\\">isButtonInfo() as Boolean</h3>\\n<p>Checks if the Info remote key was pressed. This method returns true if the info remote key is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/romicrophoneevent.md":"{\n  \"content\": \"<h1 id=\\\"romicrophoneevent\\\">roMicrophoneEvent</h1>\\n<p>The <a href=\\\"/docs/references/brightscript/components/romicrophone.md\\\" title=\\\"roMicrophone\\\">roMicrophone</a> component sends the <code>roMicrophoneEvent</code> with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isrecordingdone-as-boolean\\\">IsRecordingDone() as Boolean</h3>\\n<p>Checks if the microphone recording session has been closed.  This method returns true if the recording session is closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isrecordinginfo-as-boolean\\\">IsRecordingInfo() as Boolean</h3>\\n<p>Checks whether the microphone is open. This method returns true when the microphone is open; otherwise, it returns false. </p>\\n<h4 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h4>\\n<p>Returns the information regarding a particular microphone recording session. This method returns an roAssociativeArray containing the following information:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>format</td>\\n<td>string</td>\\n<td>The audio data format (ex. pcm-s16-le)</td>\\n</tr>\\n<tr>\\n<td>num_channels</td>\\n<td>integer</td>\\n<td>The number of channels (ex. 1 for mono)</td>\\n</tr>\\n<tr>\\n<td>sample_rate</td>\\n<td>integer</td>\\n<td>The audio sample rate (ex. 16000 for 16kHz)</td>\\n</tr>\\n<tr>\\n<td>sample_data</td>\\n<td>roByteArray</td>\\n<td>Signed 16-bit integer containing audio data as PCM (little-endian format)</td>\\n</tr>\\n<tr>\\n<td>level</td>\\n<td>integer</td>\\n<td>Value displaying a calculated volume level between 0 (silence) and 100 (maximum)</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/roonelinedialogevent.md":"{\n  \"content\": \"<h1 id=\\\"roonelinedialogevent\\\">roOneLineDialogEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>Sends the roOneLineDialogEvent with the following predicates that indicate its valid event types: </p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Indicates whether the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/roparagraphscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"roparagraphscreenevent\\\">roParagraphScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roParagraphScreen sends the roParagraphScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Indicates whether the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks if a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/ropinentrydialogevent.md":"{\n  \"content\": \"<h1 id=\\\"ropinentrydialogevent\\\">roPinEntryDialogEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roPinEntryDialog sends the roPinEntryDialogEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Indicates whether the screen was closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks if a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/roposterscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"roposterscreenevent\\\">roPosterScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.Beginning July 1st, 2017, any new channels using this component will be rejected during certification.Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roPosterScreen sends the roPosterScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"islistitemselected-as-boolean\\\">isListItemSelected() as Boolean</h3>\\n<p>Checks whether a content item in the poster screen has been selected. This method returns true if a content item is selected; otherwise, it returns false. </p>\\n<h5 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h5>\\n<p>Returns the index of the selected item.</p>\\n<h3 id=\\\"islistfocused-as-boolean\\\">isListFocused() as Boolean</h3>\\n<p>Indicates whether a new category in the filter banner has gained focus. This method returns true if a new category gains focus; otherwise, it returns false. </p>\\n<h5 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h5>\\n<p>Returns the index of the currently focused category.</p>\\n<h3 id=\\\"isadselected-as-boolean\\\">isAdSelected() as Boolean</h3>\\n<p>Checks whether the banner advertisement in the poster screen has been selected. This method returns true if a banner advertisement is selected; otherwise, it returns false. </p>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks whether the screen has been closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"islistitemfocused-as-boolean\\\">isListItemFocused() as Boolean</h3>\\n<p>Checks whether a new content item in the poster screen has gained focus. This method returns true if a new content item gains focus; otherwise, it returns false. </p>\\n<h5 id=\\\"getindex-as-integer-2\\\">GetIndex() as Integer</h5>\\n<p>Returns the index of the selected content item.</p>\\n<h3 id=\\\"islistiteminfo-as-boolean\\\">isListItemInfo() as Boolean</h3>\\n<p>Checks whether the Info remote key has been pressed. This method returns true if the Info remote key is pressed; otherwise, it returns false. </p>\\n<h5 id=\\\"getindex-as-integer-3\\\">GetIndex() as Integer</h5>\\n<p>Returns the index of the content item that had focus when the Info key was pressed.</p>\\n<h3 id=\\\"isremotekeypressed-as-boolean\\\">isRemoteKeyPressed() as Boolean</h3>\\n<p>Checks whether a remote key has been pressed. Currently only left/right navigation events are passed, which allow the caller to navigate the content list from the springboard level. This method returns true if a remote key is pressed; otherwise, it returns false. </p>\\n<h5 id=\\\"getindex-as-integer-4\\\">GetIndex() as Integer</h5>\\n<p>Returns the ID of the remote key which was pressed.  Remote key IDs are listed under <a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a>.</p>\\n<h3 id=\\\"islistselected-as-boolean\\\">isListSelected() as Boolean</h3>\\n<p>Checks whether a category on the filter banner has been selected. This method returns true if a category is selected; otherwise, it returns false. </p>\\n<h5 id=\\\"getindex-as-integer-5\\\">GetIndex() as Integer</h5>\\n<p>Returns the index of the selected category.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rosearchscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rosearchscreenevent\\\">roSearchScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roSearchScreen sends the roSearchScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isfullresult-as-dynamic\\\">IsFullResult() as Dynamic</h3>\\n<p>Returns all results of a search request. The results received are a complete search request.</p>\\n<h4 id=\\\"getmessage-as-string\\\">GetMessage() as String</h4>\\n<p>Returns text of full result. </p>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">IsScreenClosed() as Boolean</h3>\\n<p>Checks whether the screen has been closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"iscleared-as-boolean\\\">IsCleared() as Boolean</h3>\\n<p>Checks whether the search list has been cleared. This method returns true if the list was cleared; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttoninfo-as-boolean\\\">IsButtonInfo() as Boolean</h3>\\n<p>Checks whether the Info remote key was pressed.  This method returns true if the Info remote key was pressed; otherwise, it returns false. This event is only sent for the search results on the right side of the screen.</p>\\n<h4 id=\\\"getmessage-as-integer\\\">GetMessage() as Integer</h4>\\n<p>Returns the index of the item which was selected when the Info key was pressed.</p>\\n<h3 id=\\\"ispartialresult-as-boolean\\\">IsPartialResult() as Boolean</h3>\\n<p>Checks whether the results received are a partial entry based on last key. This method returns true  if the results are partial; otherwise, it returns false.</p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns text of partial result.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rosgnodeevent.md":"{\n  \"content\": \"<h1 id=\\\"rosgnodeevent\\\">roSGNodeEvent</h1>\\n<p>An roSGNode object sends roSGNodeEvent messages to a specified port when changes occur in nodes.  An roSGNodeEvent is also sent as the argument of field observer callback functions.  Both of these cases allow a SceneGraph application to respond to events.  roSGNodeEvent supports the following methods.</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getdata-as-dynamic\\\">getData() as Dynamic</h3>\\n<p>Retrieves the new field value at the time of the change.</p>\\n<h3 id=\\\"getfield-as-dynamic\\\">getField() as Dynamic</h3>\\n<p>Retrieves the name of the field that changed.</p>\\n<h3 id=\\\"getrosgnode-as-dynamic\\\">getRoSGNode() as Dynamic</h3>\\n<p>Retrieves a pointer to the node. This can be used for nodes without an ID.</p>\\n<h3 id=\\\"getnode-as-dynamic\\\">getNode() as Dynamic</h3>\\n<p>Retrieves the ID of the node that changed.</p>\\n<h3 id=\\\"getinfo-as-object\\\">getInfo() as Object</h3>\\n<p>Retrieves an AA that contains the values of selected \\\"context\\\" fields, which\\nwere <a href=\\\"/docs/references/brightscript/interfaces/ifsgnodefield.md#event-field-aggregation\\\">specified in an earlier-executed call</a> to <code>observeField()</code> or <code>observeFieldScoped()</code>.\\n(If no such \\\"context\\\" fields were designated previously, <code>getInfo()</code> returns an empty AA.)\\nThe array is keyed on the names of the \\\"context\\\" fields, and the entry values are the\\ninstantaneous values of the corresponding fields,\\nat the point when the observed field changed.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rosgscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rosgscreenevent\\\">roSGScreenEvent</h1>\\n<p><strong>roSGScreenEvents</strong> are events sent to a scene graph <strong>roSGScreen</strong> by the framework.  Other than when notifying the channel's main BrightScript thread that the screen is being closed, and thus that the channel should be terminated, channels do not generally handle these events.</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks whether the screen has been closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<p>Channels respond to this event by exiting the main BrightScript thread to exit the application.</p>\\n<h4 id=\\\"example-handling-the-isscreenclosed-event-to-terminate-a-channel-in-sourcemainbrs\\\">Example: Handling the isScreenClosed event to terminate a channel in source/main.brs</h4>\\n<pre><code>sub Main()\\n    showChannelSGScreen()\\nend sub\\n\\nsub showChannelSGScreen()\\n    screen = CreateObject(\\\"roSGScreen\\\")\\n    m.port = CreateObject(\\\"roMessagePort\\\")\\n    screen.setMessagePort(m.port)\\n    m.scene = screen.CreateScene(\\\"SimpleCaptionsScene\\\")\\n    screen.show()\\n    while(true)\\n        msg = wait(0, m.port)\\n        msgType = type(msg)\\n        if msgType = \\\"roSGScreenEvent\\\"\\n            if msg.isScreenClosed() then return\\n        end if\\n    end while\\nend sub\\n</code></pre>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/roslideshowevent.md":"{\n  \"content\": \"<h1 id=\\\"roslideshowevent\\\">roSlideShowEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roSlideShow sends the roSlideShowEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"ispaused-as-boolean\\\">isPaused() as Boolean</h3>\\n<p>Checks if the slide show was paused. This method returns true if the slide show was paused; otherwise, it returns false. </p>\\n<h3 id=\\\"isresumed-as-boolean\\\">isResumed() as Boolean</h3>\\n<p>Checks if the slide show has resumed. This method returns true if the slide show resumes; otherwise, it returns false. </p>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks whether the screen has been closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isrequestfailed-as-boolean\\\">isRequestFailed() as Boolean</h3>\\n<p>Checks whether an image in the slide show could not be decoded. This method returns true if the image cannot be decoded; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the failed image.</p>\\n<h3 id=\\\"isplaybackposition-as-boolean\\\">isPlaybackPosition() as Boolean</h3>\\n<p>Checks whether a new image has been displayed in the slide show. This method returns true if the image is displayed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the newly displayed image.</p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks whether a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-2\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\\n<h3 id=\\\"isremotekeypressed-as-boolean\\\">isRemoteKeyPressed() as Boolean</h3>\\n<p>Checks whether a remote key was pressed. This method returns true if a key is pressed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-3\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the remote key which was pressed. Remote key IDs are listed under <a href=\\\"%5BroUniversalControlEvent%5D(/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a> \\\"rouniversalcontrolevent.md\\\").</p>\\n<h3 id=\\\"isrequestsucceeded-as-boolean\\\">isRequestSucceeded() as Boolean</h3>\\n<p>Checks whether an image has been successfully displayed. This method returns true if an image is displayed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-4\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the displayed image.</p>\\n<h3 id=\\\"isrequestinterrupted-as-boolean\\\">isRequestInterrupted() as Boolean</h3>\\n<p>Checks whether the slide show was interrupted. This method returns true if the slide show was interrupted; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-5\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the current image.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rosocketevent.md":"{\n  \"content\": \"<h1 id=\\\"rosocketevent\\\">roSocketEvent</h1>\\n<p>An roStreamSocket or roDataGramSocket object sends the roSocketEvent to indicate a change in the status of the socket. The socket must enable specific event notifications via the notify methods of ifSocketAsync.</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getsocketid-as-integer\\\">GetSocketID() as Integer</h3>\\n<p>Returns the ID of the socket this event is for. The ID of a socket can be obtained from ifSocketAsync.GetID(). Use <a href=\\\"/docs/references/brightscript/interfaces/ifsocketstatus.md\\\" title=\\\"ifSocketStatus\\\">ifSocketStatus</a> or <a href=\\\"/docs/references/brightscript/interfaces/ifsocketconnectionstatus.md\\\" title=\\\"ifSocketConnectionStatus\\\">ifSocketConnectionStatus</a> on the indicated socket to query the new status for the socket.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rospringboardscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rospringboardscreenevent\\\">roSpringboardScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roSpringboardScreen sends the roSpringboardScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks whether the screen has been closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks whether a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\\n<h4 id=\\\"getdata-as-integer\\\">GetData() as Integer</h4>\\n<p>If the button type is a rating button, returns the value of the user selection. </p>\\n<h3 id=\\\"isremotekeypressed-as-boolean\\\">isRemoteKeyPressed() as Boolean</h3>\\n<p>Checks whether a remote key was pressed. This method returns true if a key is pressed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the remote key which was pressed. Remote key IDs are listed under <a href=\\\"/docs/references/brightscript/events/rouniversalcontrolevent.md\\\" title=\\\"roUniversalControlEvent\\\">roUniversalControlEvent</a>.</p>\\n<p>Only left/right navigation events are passed, which allow the caller to navigate the content list from the springboard level.</p>\\n<h3 id=\\\"isbuttoninfo-as-boolean\\\">isButtonInfo() as Boolean</h3>\\n<p>Checks whether the Info remote key was pressed.  This method returns true if the Info remote key was pressed; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer-2\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the item which was selected when the Info key was pressed.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rosystemlogevent.md":"{\n  \"content\": \"<h1 id=\\\"rosystemlogevent\\\">roSystemLogEvent</h1>\\n<p>roSystemLogEvents are sent when enabled via <a href=\\\"/docs/references/brightscript/components/rosystemlog.md\\\" title=\\\"roSystemLog\\\">roSystemLog</a>. roSystemLogEvent has the following method:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h3>\\n<p>Returns an AssociativeArray containing information describing the event, which may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>LogType</td>\\n<td>String</td>\\n<td>Identifies the specific type of event. Valid types are listed at <a href=\\\"/docs/references/brightscript/components/rosystemlog.md\\\" title=\\\"roSystemLog\\\">roSystemLog</a>.</td>\\n</tr>\\n<tr>\\n<td>DateTime</td>\\n<td>roDateTime</td>\\n<td>The GMT time of the event, with a resolution of one second.</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>If LogType is \\\"http.connect\\\" or \\\"http.error\\\", the event AA contains the base keys and the following additional keys:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Url</td>\\n<td>String</td>\\n<td>The URL that was requested</td>\\n</tr>\\n<tr>\\n<td>OrigUrl</td>\\n<td>String</td>\\n<td>The original URL. If the original URL was redirected, then Url represents the new redirected URL and OrigURL the original. OrigURL is included so that it's easy to correlate between events and URLs passed to components</td>\\n</tr>\\n<tr>\\n<td>Method</td>\\n<td>String</td>\\n<td>The HTTP method. \\\"GET\\\", \\\"POST\\\", or \\\"HEAD\\\"</td>\\n</tr>\\n<tr>\\n<td>Status</td>\\n<td>String</td>\\n<td>If LogType is \\\"http.connect\\\", this will be \\\"ok\\\". Otherwise, it will be one of the following: <ul>\\n<li>unknownerror</li>\\n<li>dnsfailure</li>\\n<li>dnstimeout</li>\\n<li>noroutetohost</li>\\n<li>connectiontimeout</li>\\n<li>connectionrefused</li>\\n<li>untrustedcert</li>\\n<li>expiredcert</li>\\n<li>nocipher</li>\\n<li>handshakefailed</li>\\n<li>generalsocketerror</li>\\n<li>httperror</li>\\n</ul></td>\\n</tr>\\n<tr>\\n<td>TargetIp</td>\\n<td>String</td>\\n<td>The IP address of the target server</td>\\n</tr>\\n<tr>\\n<td>HttpCode</td>\\n<td>Integer</td>\\n<td>The IP address of the target server</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>If LogType is \\\"bandwidth.minute\\\", the event AA contains the base keys and the following additional key:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Bandwidth</td>\\n<td>Integer</td>\\n<td>Measured bandwidth in kbps</td>\\n</tr>\\n</tbody>\\n</table>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rotextscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rotextscreenevent\\\">roTextScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated and will be removed from Roku OS on January 1st, 2019.</p>\\n<p>Beginning July 1st, 2017, any new channels using this component will be rejected during certification.</p>\\n<p>Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roTextScreen sends the roTextScreenEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks whether the screen has been closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false. </p>\\n<h3 id=\\\"isbuttonpressed-as-boolean\\\">isButtonPressed() as Boolean</h3>\\n<p>Checks whether a button on the screen was selected. This method returns true if a button is selected; otherwise, it returns false. </p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the ID of the button which was selected (the first parameter to AddButton).</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rotexttospeechevent.md":"{\n  \"content\": \"<h1 id=\\\"rotexttospeechevent\\\">roTextToSpeechEvent</h1>\\n<blockquote>\\n<p>Please note this component is only available on the following devices: Roku Streaming Stick (3600X), Roku Express (3700X) and Express+ (3710X), Roku Premiere (4620X) and Premiere+ (4630X), Roku Ultra (4640X), and any Roku TV running Roku OS version 7.2 and later.</p>\\n</blockquote>\\n<p>The <a href=\\\"/docs/references/brightscript/components/rotexttospeech.md\\\" title=\\\"roTextToSpeech\\\">roTextToSpeech</a> component sends the roTextToSpeechEvent with the following predicates that indicate its valid event types.</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getdata-as-integer\\\">GetData() as Integer</h3>\\n<p>Returns the description of the speech, which may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>ID</th>\\n<th>Interpretation</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>0</td>\\n<td>Started speech</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>Speech has completed</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>Speech has been interrupted/flushed</td>\\n</tr>\\n<tr>\\n<td>3</td>\\n<td>Text to speech has been either enabled or disabled</td>\\n</tr>\\n<tr>\\n<td>4</td>\\n<td>Current language has been changed</td>\\n</tr>\\n<tr>\\n<td>5</td>\\n<td>Current voice has been changed</td>\\n</tr>\\n<tr>\\n<td>6</td>\\n<td>Speech rate has been changed</td>\\n</tr>\\n<tr>\\n<td>7</td>\\n<td>Speech volume has been changed</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h3>\\n<p>Returns an associative array with the following key-value pairs, depending the value returned by the <a href=\\\"/docs/references/brightscript/events/rotexttospeechevent.md#getinfo-as-object\\\" title=\\\"GetData()\\\">GetData()</a> method:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Enabled</td>\\n<td>Boolean</td>\\n<td>If GetData() returned 3, indicates the enabled/disabled status of text to speech</td>\\n</tr>\\n<tr>\\n<td>Language</td>\\n<td>String</td>\\n<td>If GetData() returned 4, indicates the new language</td>\\n</tr>\\n<tr>\\n<td>Voice</td>\\n<td>String</td>\\n<td>If GetData() returned 5, indicates the new voice</td>\\n</tr>\\n<tr>\\n<td>Rate</td>\\n<td>Integer</td>\\n<td>If GetData() returned 6, indicates the new speech rate</td>\\n</tr>\\n<tr>\\n<td>Volume</td>\\n<td>Integer</td>\\n<td>If GetData() returned 7, indicates the new speech volume</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h3>\\n<p>The text to speech service may be shared among any number of clients; therefore, the IDs returned to a given client are not necessarily contiguous. The value is only meaningful if <a href=\\\"/docs/references/brightscript/events/rotexttospeechevent.md#getinfo-as-object\\\" title=\\\"GetData()\\\">GetData()</a> returned 0, 1 or 2; it returns 0 otherwise.</p>\\n<p>This method returns the ID of the speech as returned by either the <a href=\\\"/docs/references/brightscript/interfaces/iftexttospeech.md#saytext-as-string-as-integer\\\" title=\\\"Say()\\\">Say()</a>\\\" or <a href=\\\"/docs/references/brightscript/interfaces/iftexttospeech.md#silenceduration-as-integer-as-integer\\\" title=\\\"Silence()\\\">Silence()</a> methods of the <a href=\\\"/docs/references/brightscript/interfaces/iftexttospeech.md\\\" title=\\\"ifTextToSpeech\\\">ifTextToSpeech</a> interface.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rotexturerequestevent.md":"{\n  \"content\": \"<h1 id=\\\"rotexturerequestevent\\\">roTextureRequestEvent</h1>\\n<p>The <a href=\\\"/docs/references/brightscript/components/rotexturemanager.md\\\" title=\\\"roTextureManager\\\">roTextureManager</a> sends the roTextureRequestEvent after completing a request.</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getid-as-integer\\\">GetId() as Integer</h3>\\n<p>Returns the unique id of the request.</p>\\n<h3 id=\\\"getstate-as-integer\\\">GetState() as Integer</h3>\\n<p>Returns the state of the request. See <a href=\\\"/docs/references/brightscript/interfaces/iftexturerequest.md\\\" title=\\\"ifTextureRequest\\\">ifTextureRequest</a>.GetState() for the list of states.</p>\\n<h3 id=\\\"geturi-as-string\\\">GetURI() as String</h3>\\n<p>Returns the URI of the request.</p>\\n<h3 id=\\\"getbitmap-as-object\\\">GetBitmap() as Object</h3>\\n<p>Returns an roBitmap from the request if the state is ready.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rouniversalcontrolevent.md":"{\n  \"content\": \"<h1 id=\\\"rouniversalcontrolevent\\\">roUniversalControlEvent</h1>\\n<p>The roScreen object sends the roUniversalControlEvent with the following related methods. If an app constrains the events processed to just the roUniversalControlEvent, the app will work with any controller. The GetID(), GetChar(), GetKey(), and IsPress() methods can be used instead of parsing the GetInt() return value to more effectively distinguish between remote control and keyboard key presses, and the key press and release events.</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getint-as-integer\\\">GetInt() as Integer</h3>\\n<p>Returns an integer representing pressed or released keys on the remote. This table can be accessed at runtime by calling <code>bslCore.brs: bslUniversalControlEventCodes()</code>: </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Button</th>\\n<th>When Pressed</th>\\n<th>When Released</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Back</td>\\n<td>0</td>\\n<td>100</td>\\n</tr>\\n<tr>\\n<td>Up</td>\\n<td>2</td>\\n<td>102</td>\\n</tr>\\n<tr>\\n<td>Down</td>\\n<td>3</td>\\n<td>103</td>\\n</tr>\\n<tr>\\n<td>Left</td>\\n<td>4</td>\\n<td>104</td>\\n</tr>\\n<tr>\\n<td>Right</td>\\n<td>5</td>\\n<td>105</td>\\n</tr>\\n<tr>\\n<td>Select</td>\\n<td>6</td>\\n<td>106</td>\\n</tr>\\n<tr>\\n<td>Instant Replay</td>\\n<td>7</td>\\n<td>107</td>\\n</tr>\\n<tr>\\n<td>Rewind</td>\\n<td>8</td>\\n<td>108</td>\\n</tr>\\n<tr>\\n<td>Fast Forward</td>\\n<td>9</td>\\n<td>109</td>\\n</tr>\\n<tr>\\n<td>Info</td>\\n<td>10</td>\\n<td>110</td>\\n</tr>\\n<tr>\\n<td>Play</td>\\n<td>13</td>\\n<td>113</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getkey-as-integer\\\">GetKey() as Integer</h3>\\n<p>Returns the ID of the remote button that generated an event.</p>\\n<h3 id=\\\"getremoteid-as-string\\\">GetRemoteID() as String</h3>\\n<p>Returns an identifier associated with the type and ID of the remote control that generated the event.  For example, if multiple wireless remotes are paired, this may be used to distinguish the event sources.  Some remote controls, such as IR remotes, can not be distinguished using this API.</p>\\n<h3 id=\\\"getid-as-integer\\\">GetID() as Integer</h3>\\n<p>Returns the ID of the remote button or character value represented by the event.  Values 0x20..0x10FFFF represent a Unicode character value.  Other values represent a remote button ID.  GetID() returns the same value for a release event as for the press event.</p>\\n<h3 id=\\\"ispress-as-boolean\\\">IsPress() as Boolean</h3>\\n<p>Checks whether a press event has occurred. This method returns true if a press event has occurred; otherwise, it returns false. </p>\\n<h3 id=\\\"getchar-as-integer\\\">GetChar() as Integer</h3>\\n<p>Returns the Unicode character value generated by a keyboard key press event.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rourlevent.md":"{\n  \"content\": \"<h1 id=\\\"rourlevent\\\">roUrlEvent</h1>\\n<p>The roUrlTransfer component sends the roUrlEvent with the following methods:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"getint-as-integer\\\">GetInt() as Integer</h3>\\n<p>Returns the type of event, which may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Event Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>1</td>\\n<td>transfer complete</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>transfer started. Headers are available for suitable protocols. (Not currently implemented)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getresponsecode-as-integer\\\">GetResponseCode() as Integer</h3>\\n<p>Returns the protocol response code associated with this event. For a successful HTTP request this will be the HTTP status code 200. For unexpected errors the return value is negative. There are lots of possible negative errors from the CURL library but it's often best just to look at the text version via GetFailureReason(). </p>\\n<p>The following table lists some of the potential errors (not all of them can be generated):</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Status</th>\\n<th>Name</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>-1</td>\\n<td>CURLE_UNSUPPORTED_PROTOCOL</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-2</td>\\n<td>CURLE_FAILED_INIT</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-3</td>\\n<td>CURLE_URL_MALFORMAT</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-4</td>\\n<td>CURLE_NOT_BUILT_IN</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-5</td>\\n<td>CURLE_COULDNT_RESOLVE_PROXY</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-6</td>\\n<td>CURLE_COULDNT_RESOLVE_HOST</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-7</td>\\n<td>CURLE_COULDNT_CONNECT</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-8</td>\\n<td>CURLE_FTP_WEIRD_SERVER_REPLY</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-9</td>\\n<td>CURLE_REMOTE_ACCESS_DENIED</td>\\n<td>A service was denied by the server due to lack of access - when login fails this is not returned</td>\\n</tr>\\n<tr>\\n<td>-11</td>\\n<td>CURLE_FTP_WEIRD_PASS_REPLY</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-13</td>\\n<td>CURLE_FTP_WEIRD_PASV_REPLY</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-14</td>\\n<td>CURLE_FTP_WEIRD_227_FORMAT</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-15</td>\\n<td>CURLE_FTP_CANT_GET_HOST</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-16</td>\\n<td>CURLE_HTTP2</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-17</td>\\n<td>CURLE_FTP_COULDNT_SET_TYPE</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-18</td>\\n<td>CURLE_PARTIAL_FILE</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-19</td>\\n<td>CURLE_FTP_COULDNT_RETR_FILE</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-21</td>\\n<td>CURLE_QUOTE_ERROR</td>\\n<td>Quote command failure</td>\\n</tr>\\n<tr>\\n<td>-22</td>\\n<td>CURLE_HTTP_RETURNED_ERROR</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-23</td>\\n<td>CURLE_WRITE_ERROR</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-25</td>\\n<td>CURLE_UPLOAD_FAILED</td>\\n<td>Failed upload \\\"command\\\"</td>\\n</tr>\\n<tr>\\n<td>-26</td>\\n<td>CURLE_READ_ERROR</td>\\n<td>Could open/read from file</td>\\n</tr>\\n<tr>\\n<td>-27</td>\\n<td>CURLE_OUT_OF_MEMORY</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-28</td>\\n<td>CURLE_OPERATION_TIMEDOUT</td>\\n<td>The timeout time was reached</td>\\n</tr>\\n<tr>\\n<td>-30</td>\\n<td>CURLE_FTP_PORT_FAILED</td>\\n<td>FTP PORT operation failed</td>\\n</tr>\\n<tr>\\n<td>-31</td>\\n<td>CURLE_FTP_COULDNT_USE_REST</td>\\n<td>The REST command failed</td>\\n</tr>\\n<tr>\\n<td>-33</td>\\n<td>CURLE_RANGE_ERROR</td>\\n<td>RANGE \\\"command\\\" didn't work</td>\\n</tr>\\n<tr>\\n<td>-34</td>\\n<td>CURLE_HTTP_POST_ERROR</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-35</td>\\n<td>CURLE_SSL_CONNECT_ERROR</td>\\n<td>Wrong when connecting with SSL</td>\\n</tr>\\n<tr>\\n<td>-36</td>\\n<td>CURLE_BAD_DOWNLOAD_RESUME</td>\\n<td>Couldn't resume download</td>\\n</tr>\\n<tr>\\n<td>-37</td>\\n<td>CURLE_FILE_COULDNT_READ_FILE</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-38</td>\\n<td>CURLE_LDAP_CANNOT_BIND</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-39</td>\\n<td>CURLE_LDAP_SEARCH_FAILED</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-41</td>\\n<td>CURLE_FUNCTION_NOT_FOUND</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-42</td>\\n<td>CURLE_ABORTED_BY_CALLBACK</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-43</td>\\n<td>CURLE_BAD_FUNCTION_ARGUMENT</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>-45</td>\\n<td>CURLE_INTERFACE_FAILED</td>\\n<td>CURLOPT_INTERFACE failed</td>\\n</tr>\\n<tr>\\n<td>-47</td>\\n<td>CURLE_TOO_MANY_REDIRECTS</td>\\n<td>Catch endless re-direct loops</td>\\n</tr>\\n<tr>\\n<td>-48</td>\\n<td>CURLE_UNKNOWN_TELNET_OPTION</td>\\n<td>User specified an unknown option</td>\\n</tr>\\n<tr>\\n<td>-49</td>\\n<td>CURLE_TELNET_OPTION_SYNTAX</td>\\n<td>Malformed telnet option</td>\\n</tr>\\n<tr>\\n<td>-51</td>\\n<td>CURLE_PEER_FAILED_VERIFICATION</td>\\n<td>Peer's certificate or fingerprint wasn't verified fine</td>\\n</tr>\\n<tr>\\n<td>-52</td>\\n<td>CURLE_GOT_NOTHING</td>\\n<td>When this is a specific error</td>\\n</tr>\\n<tr>\\n<td>-53</td>\\n<td>CURLE_SSL_ENGINE_NOTFOUND</td>\\n<td>SSL crypto engine not found</td>\\n</tr>\\n<tr>\\n<td>-54</td>\\n<td>CURLE_SSL_ENGINE_SETFAILED</td>\\n<td>Can not set SSL crypto engine as default</td>\\n</tr>\\n<tr>\\n<td>-55</td>\\n<td>CURLE_SEND_ERROR</td>\\n<td>Failed sending network data</td>\\n</tr>\\n<tr>\\n<td>-56</td>\\n<td>CURLE_RECV_ERROR</td>\\n<td>Failure in receiving network data</td>\\n</tr>\\n<tr>\\n<td>-58</td>\\n<td>CURLE_SSL_CERTPROBLEM</td>\\n<td>Problem with the local certificate</td>\\n</tr>\\n<tr>\\n<td>-59</td>\\n<td>CURLE_SSL_CIPHER</td>\\n<td>Couldn't use specified cipher</td>\\n</tr>\\n<tr>\\n<td>-60</td>\\n<td>CURLE_SSL_CACERT</td>\\n<td>Problem with the CA cert (path?)</td>\\n</tr>\\n<tr>\\n<td>-61</td>\\n<td>CURLE_BAD_CONTENT_ENCODING</td>\\n<td>Unrecognized transfer encoding</td>\\n</tr>\\n<tr>\\n<td>-62</td>\\n<td>CURLE_LDAP_INVALID_URL</td>\\n<td>Invalid LDAP URL</td>\\n</tr>\\n<tr>\\n<td>-63</td>\\n<td>CURLE_FILESIZE_EXCEEDED</td>\\n<td>Maximum file size exceeded</td>\\n</tr>\\n<tr>\\n<td>-64</td>\\n<td>CURLE_USE_SSL_FAILED</td>\\n<td>Requested FTP SSL level failed</td>\\n</tr>\\n<tr>\\n<td>-65</td>\\n<td>CURLE_SEND_FAIL_REWIND</td>\\n<td>Sending the data requires a rewind that failed</td>\\n</tr>\\n<tr>\\n<td>-66</td>\\n<td>CURLE_SSL_ENGINE_INITFAILED</td>\\n<td>Failed to initialize ENGINE</td>\\n</tr>\\n<tr>\\n<td>-67</td>\\n<td>CURLE_LOGIN_DENIED</td>\\n<td>User, password or similar was not accepted and we failed to login</td>\\n</tr>\\n<tr>\\n<td>-68</td>\\n<td>CURLE_TFTP_NOTFOUND</td>\\n<td>File not found on server</td>\\n</tr>\\n<tr>\\n<td>-69</td>\\n<td>CURLE_TFTP_PERM</td>\\n<td>Permission problem on server</td>\\n</tr>\\n<tr>\\n<td>-70</td>\\n<td>CURLE_REMOTE_DISK_FULL</td>\\n<td>Out of disk space on server</td>\\n</tr>\\n<tr>\\n<td>-71</td>\\n<td>CURLE_TFTP_ILLEGAL</td>\\n<td>Illegal TFTP operation</td>\\n</tr>\\n<tr>\\n<td>-72</td>\\n<td>CURLE_TFTP_UNKNOWNID</td>\\n<td>Unknown transfer ID</td>\\n</tr>\\n<tr>\\n<td>-73</td>\\n<td>CURLE_REMOTE_FILE_EXISTS</td>\\n<td>File already exists</td>\\n</tr>\\n<tr>\\n<td>-74</td>\\n<td>CURLE_TFTP_NOSUCHUSER</td>\\n<td>No such user</td>\\n</tr>\\n<tr>\\n<td>-75</td>\\n<td>CURLE_CONV_FAILED</td>\\n<td>Conversion failed</td>\\n</tr>\\n<tr>\\n<td>-76</td>\\n<td>CURLE_CONV_REQD</td>\\n<td>Caller must register conversion callbacks using curl_easy_setopt options CURLOPT_CONV_FROM_NETWORK_FUNCTION, CURLOPT_CONV_TO_NETWORK_FUNCTION, and CURLOPT_CONV_FROM_UTF8_FUNCTION</td>\\n</tr>\\n<tr>\\n<td>-77</td>\\n<td>CURLE_SSL_CACERT_BADFILE</td>\\n<td>Could not load CACERT file, missing or wrong format</td>\\n</tr>\\n<tr>\\n<td>-78</td>\\n<td>CURLE_REMOTE_FILE_NOT_FOUND</td>\\n<td>Remote file not found</td>\\n</tr>\\n<tr>\\n<td>-79</td>\\n<td>CURLE_SSH</td>\\n<td>Error from the SSH layer, somewhat generic so the error message will be of interest when this has happened</td>\\n</tr>\\n<tr>\\n<td>-80</td>\\n<td>CURLE_SSL_SHUTDOWN_FAILED</td>\\n<td>Failed to shut down the SSL connection</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"getfailurereason-as-string\\\">GetFailureReason() as String</h3>\\n<p>Returns a description of the failure that occurred.</p>\\n<h3 id=\\\"getstring-as-string\\\">GetString() as String</h3>\\n<p>For transfer complete AsyncGetToString, AsyncPostFromString and AsnycPostFromFile requests this will be the actual response body from the server. This method returns the string associated with the event.</p>\\n<h3 id=\\\"getsourceidentity-as-integer\\\">GetSourceIdentity() as Integer</h3>\\n<p>Returns a magic number that can be matched with the value returned by the <a href=\\\"/docs/references/brightscript/interfaces/ifurltransfer.md#getidentity-as-integer\\\">roUrlTransfer.GetIdentity()</a> method to determine the source of the roUrlTransfer event.</p>\\n<h3 id=\\\"getresponseheaders-as-object\\\">GetResponseHeaders() as Object</h3>\\n<p>Returns an <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArray </a>containing all the headers returned by the server for appropriate protocols (such as HTTP). Headers are only returned when the status code is greater than or equal to 200 and less than 300</p>\\n<h3 id=\\\"gettargetipaddress-as-string\\\">GetTargetIpAddress() as String</h3>\\n<p>Returns the IP address of the destination. </p>\\n<h3 id=\\\"getresponseheadersarray-as-object\\\">GetResponseHeadersArray() as Object</h3>\\n<p>This method returns an <a href=\\\"/docs/references/brightscript/components/roarray.md\\\" title=\\\"roArray\\\">roArray</a> of <a href=\\\"/docs/references/brightscript/components/roassociativearray.md\\\" title=\\\"roAssociativeArray\\\">roAssociativeArrays</a>, where each associative array contains a single header name/value pair. Use this function if you need access to duplicate headers, since GetResponseHeaders() returns only the last name/value pair for a given name. All headers are returned regardless of the status code</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rovideoplayerevent.md":"{\n  \"content\": \"<h1 id=\\\"rovideoplayerevent\\\">roVideoPlayerEvent</h1>\\n<p>The roVideoPlayer sends the roVideoPlayerEvent with the following predicates that indicate its valid event types:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"ispaused-as-boolean\\\">isPaused() as Boolean</h3>\\n<p>Checks whether video playback was paused by the user. This method returns true if video playback was paused; otherwise, it returns false.</p>\\n<h3 id=\\\"islistitemselected-as-boolean\\\">isListItemSelected() as Boolean</h3>\\n<p>Checks whether the video player is about to start playing a new item in the content list. This method returns true if a new item in the content list was selected; otherwise, it returns false.</p>\\n<h4 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the item that is about to start playing.</p>\\n<h3 id=\\\"isformatdetected-as-boolean\\\">isFormatDetected() as Boolean</h3>\\n<p>Checks whether an event has been fired when the format of all tracks in the media stream have been identified.</p>\\n<p>Specific information about the event can be obtained by calling the GetMessages() and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getmessage-as-string\\\">GetMessage() as String</h4>\\n<p>Returns a description of the message (for exampe, \\\"Format Detected\\\").</p>\\n<h4 id=\\\"getinfo-as-object\\\">GetInfo() as Object</h4>\\n<p>Returns information about the video player event. This method returns an roAssociativeArray that contains the following keys:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>audio</td>\\n<td>The format of the audio stream, if any</td>\\n</tr>\\n<tr>\\n<td>captions</td>\\n<td>The format of the captioning data, if any</td>\\n</tr>\\n<tr>\\n<td>video</td>\\n<td>The format of the video stream, if any</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isrequestfailed-as-boolean\\\">isRequestFailed() as Boolean</h3>\\n<p>Checks whether video playback has failed. This method returns true if video playback failed; otherwise, it returns false.</p>\\n<p>Specific information about the event can be obtained by calling the GetMessage(), GetIndex(), and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getmessage-as-string-1\\\">GetMessage() as String</h4>\\n<p>Returns a description of the message (for example, \\\"Segment download started\\\").</p>\\n<h4 id=\\\"getindex-as-integer-1\\\">GetIndex() as Integer</h4>\\n<p>Returns the error ID, which may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>0</td>\\n<td>Network error : server down or unresponsive, server is unreachable, network setup problem on the client.</td>\\n</tr>\\n<tr>\\n<td>-1</td>\\n<td>HTTP error: malformed headers or HTTP error result.</td>\\n</tr>\\n<tr>\\n<td>-2</td>\\n<td>Connection timed out</td>\\n</tr>\\n<tr>\\n<td>-3</td>\\n<td>Unknown error</td>\\n</tr>\\n<tr>\\n<td>-4</td>\\n<td>Empty list; no streams were specified to play</td>\\n</tr>\\n<tr>\\n<td>-5</td>\\n<td>Media error; the media format is unknown or unsupported</td>\\n</tr>\\n<tr>\\n<td>-6</td>\\n<td>DRM error</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"getinfo-as-object-1\\\">GetInfo() as Object</h4>\\n<p>Returns an associative array containing information about the event failure. The associative array contains the following key-value pairs:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ClipIdx</td>\\n<td>Integer</td>\\n<td>The zero starting index of the item in the content list this event is related to.</td>\\n</tr>\\n<tr>\\n<td>Ignored</td>\\n<td>Boolean</td>\\n<td>True if the error was ignored and the player skipped to the next item in the content list.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"issegmentdownloadstarted-as-boolean\\\">isSegmentDownloadStarted() as Boolean</h3>\\n<p>Checks whether the individual segments in an HLS or smooth stream are about to be downloaded. This method returns true if segments in the stream are going to be downloaded; otherwise, it returns false.</p>\\n<p>Specific information about the event can be obtained by calling the GetMessages() and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getmessage-as-string-2\\\">GetMessage() as String</h4>\\n<p>Returns a description of the message (for example, \\\"Segment download started\\\").</p>\\n<h4 id=\\\"getinfo-as-object-2\\\">GetInfo() as Object</h4>\\n<p>Returns an associative array containing the following information about the segment download event:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Sequence</td>\\n<td>Stream segment sequence number</td>\\n</tr>\\n<tr>\\n<td>SegBitrate</td>\\n<td>Bitrate of the segment, in kilobits per second</td>\\n</tr>\\n<tr>\\n<td>StartTime</td>\\n<td>Timestamp of the start of the segment data</td>\\n</tr>\\n<tr>\\n<td>EndTime</td>\\n<td>Timestamp of the end of the segment data</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isstreamstarted-as-boolean\\\">isStreamStarted() as Boolean</h3>\\n<p>Checks whether the video stream has started playing. This method returns true if the video stream has started playing; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetIndex() and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getindex-as-integer-2\\\">GetIndex() as Integer</h4>\\n<p>Returns the segment sequence number.</p>\\n<h4 id=\\\"getinfo-as-object-3\\\">GetInfo() as Object</h4>\\n<p>Returns an associative array containing the following information about the stream started event:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Url</td>\\n<td>String</td>\\n<td>URL of video stream</td>\\n</tr>\\n<tr>\\n<td>StreamBitrate</td>\\n<td>Integer</td>\\n<td>average bitrate of stream, in bits per second</td>\\n</tr>\\n<tr>\\n<td>MeasuredBitrate</td>\\n<td>Integer</td>\\n<td>measured network bandwidth in kibibits per second, used to select stream</td>\\n</tr>\\n<tr>\\n<td>IsUnderrun</td>\\n<td>Boolean</td>\\n<td>true if this is a rebuffer due to an underrun</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isstatusmessage-as-boolean\\\">isStatusMessage() as Boolean</h3>\\n<p>Checks whether status information or other diagnostic message is available. This method returns true if status information or  diagnostic message is available; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetMessage() method on the event.</p>\\n<h4 id=\\\"getmessage-as-string-3\\\">GetMessage() as String</h4>\\n<p>Returns status information or other diagnostic message, which may be one of the following:</p>\\n<ul>\\n<li>\\\"startup progress\\\"</li>\\n<li>\\\"start of play\\\"</li>\\n<li>\\\"playback stopped\\\"</li>\\n<li>\\\"end of stream\\\" (deprecated)</li>\\n<li>\\\"end of playlist\\\" (deprecated)</li>\\n</ul>\\n<h3 id=\\\"isfullresult-as-boolean\\\">isFullResult() as Boolean</h3>\\n<p>Checks whether video playback has completed at the end of the content list. This method returns true if video playback has completed at the end of the content list; otherwise, it returns false.</p>\\n<h3 id=\\\"isresumed-as-boolean\\\">isResumed() as Boolean</h3>\\n<p>Checks whether video playback has resumed. This method returns true if video playback has resumed; otherwise, it returns false.</p>\\n<h3 id=\\\"iscaptionmodechanged-as-boolean\\\">isCaptionModeChanged() as Boolean</h3>\\n<p>Checks whether closed caption mode or track has been changed by the user. This method returns true if closed caption mode or track has been changed by the user; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetMessage(), GetIndex(), and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getmessage-as-string-4\\\">GetMessage() as String</h4>\\n<p>Returns a caption track name, such as: \\\"eia608/1\\\" ,\\\"eia608/3\\\", and so on.</p>\\n<h4 id=\\\"getindex-as-integer-3\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the captions mode, which may be one of the following values:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Index</th>\\n<th>Mode</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>0</td>\\n<td>Off</td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td>On</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>Instant replay</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"getinfo-as-object-4\\\">GetInfo() as Object</h4>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>GetInfo</td>\\n<td>Object</td>\\n<td>Invalid</td>\\n<td>This method always returns invalid.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"example-iscaptionmodechanged-event\\\">Example: isCaptionModeChanged() Event</h4>\\n<pre><code>Function showVideoScreen(episode As Object)\\n  port = CreateObject(\\\"roMessagePort\\\")\\n  screen = CreateObject(\\\"roVideoScreen\\\")\\n  'some video stream\\n  '...\\n  'etc...\\n  episode.SubtitleConfig : {\\n    TrackName : \\\"eia608/1\\\"\\n    }\\n  screen.SetContent(episode)\\n  screen.SetMessagePort(port)\\n  screen.Show()\\n  while true\\n    msg = wait(0, port)\\n    if type(msg) = \\\"roVideoScreenEvent\\\" then\\n      if msg.isCaptionModeChanged()\\n        print \\\"Caption Mode Changed\\\"\\n        print \\\"Caption Mode: \\\"; msg.GetIndex()\\n        print \\\"Caption track: \\\"; msg.GetMessage()\\n      end if\\n    end if\\n  end while\\nEnd Function\\n</code></pre>\\n<h3 id=\\\"istimedmetadata-as-boolean\\\">isTimedMetaData() as Boolean</h3>\\n<p>Checks whether an ID3 timecode has passed with an event that includes key-value pairs for timed metadata that the BrightScript channel is interested in.</p>\\n<p>All timed metadata is released after it is delivered to the BrightScript channel.  It is also released without delivery if the BrightScript channel did not indicate its interest in the data with a <a href=\\\"/docs/references/brightscript/interfaces/ifvideoplayer.md#settimedmetadataforkeyskeys-as-dynamic-as-void\\\">SetTimedMetaDataForKeys()</a> method call.</p>\\n<p>This method returns true if an ID3 timecode has passed; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetMessage(), GetIndex(), and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getmessage-as-string-5\\\">GetMessage() as String</h4>\\n<p>Returns the string \\\"Timed Metadata\\\".</p>\\n<h4 id=\\\"getindex-as-integer-4\\\">GetIndex() as Integer</h4>\\n<p>Returns the PTS timecode.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Return Type</th>\\n<th>Return Value</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>GetIndex</td>\\n<td>Integer</td>\\n<td>PTS timecode.</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h4 id=\\\"getinfo-as-object-5\\\">GetInfo() as Object</h4>\\n<p>Returns an associative array with timedMetadata at the PTS timecode specified in the index.</p>\\n<h3 id=\\\"isplaybackposition-as-boolean\\\">isPlaybackPosition() as Boolean</h3>\\n<p>Checks whether the current position in the video stream has changed. This event is sent periodically while playing, as determined by the last call to <a href=\\\"/docs/references/brightscript/interfaces/ifvideoplayer.md#setpositionnotificationperiodperiod-as-integer-as-void\\\" title=\\\"ifVideoPlayer.SetPositionNotificationPeriod\\\">ifVideoPlayer.SetPositionNotificationPeriod</a>. This method returns true if the current position in the video stream has changed; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetIndex() and GetInfo() methods on the event.</p>\\n<h3 id=\\\"getindex-as-integer-5\\\">GetIndex() as Integer</h3>\\n<p>Returns current position in the stream (in seconds) from the beginning.</p>\\n<h3 id=\\\"getinfo-as-object-6\\\">GetInfo() as Object</h3>\\n<p>Returns an roAssociativeArray array with the following key-value pairs:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Member</th>\\n<th>Type</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ClipIdx</td>\\n<td>Integer</td>\\n<td>The zero starting index of the item in the content list this event is related to</td>\\n</tr>\\n<tr>\\n<td>ClipPos</td>\\n<td>Integer</td>\\n<td>The player position relative to the start of the clip in milliseconds</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isstreamsegmentinfo-as-boolean\\\">isStreamSegmentInfo() as Boolean</h3>\\n<p>Checks whether playback has begun of a segment in an HLS, DASH, or smooth stream. This method returns true if the playback of a segment in an HLS, DASH, or smooth stream has begun; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetMessage(), GetIndex() and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getmessage-as-string-6\\\">GetMessage() as String</h4>\\n<p>Returns a description of the message (for example, \\\"Stream segment info\\\").</p>\\n<h4 id=\\\"getindex-as-integer-6\\\">GetIndex() as Integer</h4>\\n<p>Returns the segment start time in seconds.</p>\\n<h4 id=\\\"getinfo-as-object-7\\\">GetInfo() as Object</h4>\\n<p>Returns an associative array with the following information about the stream segment:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>StreamBandwidth</td>\\n<td>Bandwidth of the stream being played in kbps</td>\\n</tr>\\n<tr>\\n<td>SegStartTime</td>\\n<td>Segment start time (offset from start of stream) in milliseconds</td>\\n</tr>\\n<tr>\\n<td>Sequence</td>\\n<td>Stream segment sequence number</td>\\n</tr>\\n<tr>\\n<td>SegUrl</td>\\n<td>Stream segment URL (i.e., .ts file for HLS, stream fragment URL for smooth)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isdownloadsegmentinfo-as-boolean\\\">isDownloadSegmentInfo() as Boolean</h3>\\n<p>Checks whether a segment in an adaptive stream (HLS, Smooth, or DASH) has been downloaded. This method returns true if a segment in an adaptive stream (HLS, Smooth, or DASH) has been downloaded; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetMessage(), GetIndex() and GetInfo() methods on the event.</p>\\n<h4 id=\\\"getmessage-as-string-7\\\">GetMessage() as String</h4>\\n<p>Returns a description of the message (for example, \\\"Download segment info\\\").</p>\\n<h4 id=\\\"getindex-as-integer-7\\\">GetIndex() as Integer</h4>\\n<p>Returns the segment sequence number.</p>\\n<h4 id=\\\"getinfo-as-object-8\\\">GetInfo() as Object</h4>\\n<p>Returns an associative array containing the following information about the segment download:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Value</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Status</td>\\n<td>Status of the download: 0 = success, nonzero = error</td>\\n</tr>\\n<tr>\\n<td>Sequence</td>\\n<td>Stream segment sequence number (same as returned by GetIndex)</td>\\n</tr>\\n<tr>\\n<td>SegUrl</td>\\n<td>Stream segment URL (i.e., .ts file for HLS, stream fragment URL for smooth)</td>\\n</tr>\\n<tr>\\n<td>DownloadDuration</td>\\n<td>Amount of time spent downloading the segment, in milliseconds</td>\\n</tr>\\n<tr>\\n<td>SegSize</td>\\n<td>Segment size, in bytes</td>\\n</tr>\\n<tr>\\n<td>SegType</td>\\n<td>Type of data in the segment: 1=audio, 2=video, 3=captions, 0=mux</td>\\n</tr>\\n<tr>\\n<td>Bitrate</td>\\n<td>Bitrate of the segment, in bits per second</td>\\n</tr>\\n<tr>\\n<td>SegBitrate</td>\\n<td>Bitrate of the segment, in kilobits per second (equal to Bitrate / 1000)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3 id=\\\"isrequestsucceeded-as-boolean\\\">isRequestSucceeded() as Boolean</h3>\\n<p>Checks whether the player has finished playing an item in the content list. This method returns true if the  player has finished playing a content list item; otherwise, it returns false.  Specific information about the event can be obtained by calling the GetIndex() method on the event.</p>\\n<h4 id=\\\"getindex-as-integer-8\\\">GetIndex() as Integer</h4>\\n<p>Returns the index of the item in the content list that finished playing.</p>\"\n}","https://developer.roku.com/api/v1/get-dev-cms-doc?locale=en-us&filePath=references/brightscript/events/rovideoscreenevent.md":"{\n  \"content\": \"<h1 id=\\\"rovideoscreenevent\\\">roVideoScreenEvent</h1>\\n<blockquote>\\n<p>This component is deprecated.Beginning July 1st, 2017, any new channels using this component will be rejected during certification.Beginning January 1st, 2018, any updates to existing channels using this component will be rejected during certification.</p>\\n</blockquote>\\n<p>The roVideoScreen sends the roVideoScreenEvent with the same predicates as in <a href=\\\"/docs/references/brightscript/events/rovideoplayerevent.md\\\" title=\\\"roVideoPlayerEvent\\\">roVideoPlayerEvent</a>. In addition to the events listed in roVideoPlayerEvent, the following events are also supported:</p>\\n<h2 id=\\\"supported-methods\\\">Supported methods</h2>\\n<h3 id=\\\"isscreenclosed-as-boolean\\\">isScreenClosed() as Boolean</h3>\\n<p>Checks whether the screen has been closed and is no longer displayed to the user. This method returns true if the screen was closed; otherwise, it returns false.</p>\\n<h3 id=\\\"ispartialresult-as-boolean\\\">isPartialResult() as Boolean</h3>\\n<p>Checks whether video playback was interrupted. This method returns true if video playback was interrupted; otherwise, it returns false.</p>\\n<h3 id=\\\"isresumerequest-as-boolean\\\">isResumeRequest() as Boolean</h3>\\n<p>This method notifies the channel that the user wants to resume playback at the specified position. The roVideoScreen player will pause playback until the channel acknowledges this request by calling ResumeAck() with the same trickplay session id. This gives the application time to switch content before playback is resumed. </p>\\n<p>This method returns true if a request to resume playback has been received; otherwise, it returns false.</p>\\n<h3 id=\\\"getdata-as-integer\\\">GetData() as Integer</h3>\\n<p>Returns the stream position (in milliseconds) at which playback will be restarted.</p>\\n<h3 id=\\\"getindex-as-integer\\\">GetIndex() as Integer</h3>\\n<p>Returns a unique id that identifies the trickplay session this event belongs to.</p>\"\n}"}
